{"version":3,"sources":["turbopack:///[project]/projects/TITTAM/tittam_fe/services/work-service.ts"],"sourcesContent":["export interface Work {\n  id: string\n  schemeId: string\n  schemeName: string\n  componentId: string\n  componentName: string\n  fieldData: { [key: string]: any }\n  status: \"pending\" | \"in_progress\" | \"completed\"\n  createdBy: string\n  createdAt: string\n  updatedAt?: string\n}\n\nclass WorkService {\n  private readonly STORAGE_KEY = \"works\"\n\n  private getStoredWorks(): Work[] {\n    if (typeof window === \"undefined\") return []\n    const stored = localStorage.getItem(this.STORAGE_KEY)\n    return stored ? JSON.parse(stored) : []\n  }\n\n  private saveWorks(works: Work[]): void {\n    if (typeof window === \"undefined\") return\n    localStorage.setItem(this.STORAGE_KEY, JSON.stringify(works))\n  }\n\n  async createWork(workData: Omit<Work, \"id\">): Promise<Work> {\n    // Simulate API delay\n    await new Promise((resolve) => setTimeout(resolve, 500))\n\n    const work: Work = {\n      id: Date.now().toString(),\n      status: \"pending\", // Default status for new work\n      ...workData,\n    }\n\n    const works = this.getStoredWorks()\n    works.push(work)\n    this.saveWorks(works)\n\n    return work\n  }\n\n  async getWorks(): Promise<Work[]> {\n    // Simulate API delay\n    await new Promise((resolve) => setTimeout(resolve, 300))\n    return this.getStoredWorks()\n  }\n\n  async getWorkById(id: string): Promise<Work | null> {\n    // Simulate API delay\n    await new Promise((resolve) => setTimeout(resolve, 200))\n\n    const works = this.getStoredWorks()\n    return works.find((work) => work.id === id) || null\n  }\n\n  async getWorksByScheme(schemeId: string): Promise<Work[]> {\n    // Simulate API delay\n    await new Promise((resolve) => setTimeout(resolve, 300))\n\n    const works = this.getStoredWorks()\n    return works.filter((work) => work.schemeId === schemeId)\n  }\n\n  async getWorksByComponent(componentId: string): Promise<Work[]> {\n    // Simulate API delay\n    await new Promise((resolve) => setTimeout(resolve, 300))\n\n    const works = this.getStoredWorks()\n    return works.filter((work) => work.componentId === componentId)\n  }\n\n  async updateWork(id: string, updates: Partial<Work>): Promise<Work> {\n    // Simulate API delay\n    await new Promise((resolve) => setTimeout(resolve, 500))\n\n    const works = this.getStoredWorks()\n    const index = works.findIndex((work) => work.id === id)\n\n    if (index === -1) {\n      throw new Error(\"Work not found\")\n    }\n\n    works[index] = {\n      ...works[index],\n      ...updates,\n      updatedAt: new Date().toISOString(),\n    }\n    this.saveWorks(works)\n\n    return works[index]\n  }\n\n  async deleteWork(id: string): Promise<void> {\n    // Simulate API delay\n    await new Promise((resolve) => setTimeout(resolve, 300))\n\n    const works = this.getStoredWorks()\n    const filteredWorks = works.filter((work) => work.id !== id)\n    this.saveWorks(filteredWorks)\n  }\n\n  async deleteWorksByScheme(schemeId: string): Promise<void> {\n    // Simulate API delay\n    await new Promise((resolve) => setTimeout(resolve, 400))\n\n    const works = this.getStoredWorks()\n    const filteredWorks = works.filter((work) => work.schemeId !== schemeId)\n    this.saveWorks(filteredWorks)\n  }\n\n  async deleteWorksByComponent(componentId: string): Promise<void> {\n    // Simulate API delay\n    await new Promise((resolve) => setTimeout(resolve, 400))\n\n    const works = this.getStoredWorks()\n    const filteredWorks = works.filter((work) => work.componentId !== componentId)\n    this.saveWorks(filteredWorks)\n  }\n\n  async searchWorks(searchTerm: string): Promise<Work[]> {\n    // Simulate API delay\n    await new Promise((resolve) => setTimeout(resolve, 300))\n\n    const works = this.getStoredWorks()\n    const lowercaseSearch = searchTerm.toLowerCase()\n\n    return works.filter(\n      (work) =>\n        work.schemeName.toLowerCase().includes(lowercaseSearch) ||\n        work.componentName.toLowerCase().includes(lowercaseSearch) ||\n        work.createdBy.toLowerCase().includes(lowercaseSearch) ||\n        Object.values(work.fieldData).some((value) => String(value).toLowerCase().includes(lowercaseSearch)),\n    )\n  }\n\n  async getWorkStats(): Promise<{\n    total: number\n    pending: number\n    inProgress: number\n    completed: number\n    byScheme: { [schemeName: string]: number }\n    byComponent: { [componentName: string]: number }\n    byCreator: { [createdBy: string]: number }\n  }> {\n    // Simulate API delay\n    await new Promise((resolve) => setTimeout(resolve, 200))\n\n    const works = this.getStoredWorks()\n\n    const stats = {\n      total: works.length,\n      pending: 0,\n      inProgress: 0,\n      completed: 0,\n      byScheme: {} as { [schemeName: string]: number },\n      byComponent: {} as { [componentName: string]: number },\n      byCreator: {} as { [createdBy: string]: number },\n    }\n\n    works.forEach((work) => {\n      // Count by status\n      switch (work.status) {\n        case \"pending\":\n          stats.pending++\n          break\n        case \"in_progress\":\n          stats.inProgress++\n          break\n        case \"completed\":\n          stats.completed++\n          break\n      }\n\n      // Count by scheme\n      stats.byScheme[work.schemeName] = (stats.byScheme[work.schemeName] || 0) + 1\n\n      // Count by component\n      stats.byComponent[work.componentName] = (stats.byComponent[work.componentName] || 0) + 1\n\n      // Count by creator\n      stats.byCreator[work.createdBy] = (stats.byCreator[work.createdBy] || 0) + 1\n    })\n\n    return stats\n  }\n\n  async updateWorkStatus(id: string, status: \"pending\" | \"in_progress\" | \"completed\"): Promise<Work> {\n    return this.updateWork(id, { status })\n  }\n}\n\nexport const workService = new WorkService()\n"],"names":[],"mappings":"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"}