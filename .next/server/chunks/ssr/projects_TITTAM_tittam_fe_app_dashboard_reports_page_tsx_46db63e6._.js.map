{"version":3,"sources":["turbopack:///[project]/projects/TITTAM/tittam_fe/app/dashboard/reports/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Checkbox } from \"@/components/ui/checkbox\"\nimport { Download, Filter, FileBarChart, Loader2 } from \"lucide-react\"\nimport { DashboardLayout } from \"@/components/layout/dashboard-layout\"\nimport { ProtectedRoute } from \"@/components/auth/protected-route\"\nimport * as XLSX from \"xlsx\"\nimport { reportService } from \"@/services/report-service\"\n\ninterface ReportData {\n  id: string\n  schemeName: string\n  componentName: string\n  stage: string\n  zone: string\n  district: string\n  townPanchayat: string\n  financialYear: string\n  status: string\n  amount: number\n  beneficiaries: number\n  completionDate: string\n  schemeType: \"Announcement\" | \"Flagship\"\n}\n\nexport default function ReportsPage() {\n  // Main report type selection\n  const [reportCategory, setReportCategory] = useState<\"dashboard\" | \"scheme\">(\"dashboard\")\n  const [reportType, setReportType] = useState<\"overall\" | \"scheme\" | \"component\" | \"year\">(\"overall\")\n\n  // View type for overall reports\n  const [viewType, setViewType] = useState<\"zone\" | \"district\" | \"townpanchayat\" | \"scheme\" | \"component\" | \"year\">(\n    \"zone\",\n  )\n\n  // Filter options\n  const [selectedScheme, setSelectedScheme] = useState(\"all\")\n  const [selectedComponent, setSelectedComponent] = useState(\"all\")\n  const [selectedYear, setSelectedYear] = useState(\"all\")\n  const [selectedZone, setSelectedZone] = useState(\"all\")\n  const [selectedDistrict, setSelectedDistrict] = useState(\"all\")\n  const [selectedTownPanchayat, setSelectedTownPanchayat] = useState(\"all\")\n  const [selectedSchemeType, setSelectedSchemeType] = useState<\"all\" | \"Announcement\" | \"Flagship\">(\"all\")\n\n  // Secondary filters for specific report types\n  const [schemeWiseView, setSchemeWiseView] = useState<\"component\" | \"year\" | \"both\">(\"both\")\n  const [componentWiseView, setComponentWiseView] = useState<\"scheme\" | \"year\" | \"both\">(\"both\")\n  const [yearWiseView, setYearWiseView] = useState<\"scheme\" | \"component\" | \"both\">(\"both\")\n\n  // Data and UI state\n  const [filteredData, setFilteredData] = useState<ReportData[]>([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [showData, setShowData] = useState(false)\n\n  // Dynamic filter options from API\n  const [schemes, setSchemes] = useState<string[]>([])\n  const [components, setComponents] = useState<string[]>([])\n  const [years, setYears] = useState<string[]>([])\n  const [zones, setZones] = useState<string[]>([])\n  const [districts, setDistricts] = useState<string[]>([])\n  const [townPanchayats, setTownPanchayats] = useState<string[]>([])\n\n  // View options state for column visibility\n  const [viewOptions, setViewOptions] = useState({\n    schemeName: true,\n    componentName: true,\n    stage: true,\n    zone: true,\n    district: true,\n    townPanchayat: true,\n    financialYear: true,\n    status: true,\n    amount: true,\n    beneficiaries: true,\n    completionDate: true,\n    schemeType: true,\n  })\n\n  // Load initial filter options\n  useEffect(() => {\n    loadFilterOptions()\n  }, [])\n\n  // Load dependent filter options based on selections\n  useEffect(() => {\n    if (selectedZone !== \"all\") {\n      loadDistricts(selectedZone)\n    }\n  }, [selectedZone])\n\n  useEffect(() => {\n    if (selectedDistrict !== \"all\") {\n      loadTownPanchayats(selectedDistrict)\n    }\n  }, [selectedDistrict])\n\n  const loadFilterOptions = async () => {\n    const options = await reportService.getFilterOptions()\n    setSchemes(options.schemes)\n    setComponents(options.components)\n    setYears(options.years)\n    setZones(options.zones)\n  }\n\n  const loadDistricts = async (zone: string) => {\n    const districtList = await reportService.getDistricts(zone)\n    setDistricts(districtList)\n    setSelectedDistrict(\"all\")\n    setTownPanchayats([])\n    setSelectedTownPanchayat(\"all\")\n  }\n\n  const loadTownPanchayats = async (district: string) => {\n    const townPanchayatList = await reportService.getTownPanchayats(district)\n    setTownPanchayats(townPanchayatList)\n    setSelectedTownPanchayat(\"all\")\n  }\n\n  const handleGenerateReport = async () => {\n    setIsLoading(true)\n    setShowData(true)\n\n    const selectedViewOptions = Object.entries(viewOptions)\n      .filter(([_, isSelected]) => isSelected)\n      .map(([key, _]) => key)\n\n    const filters = {\n      reportType,\n      viewType: reportType === \"overall\" ? viewType : undefined,\n      scheme: selectedScheme,\n      component: selectedComponent,\n      year: selectedYear,\n      zone: selectedZone,\n      district: selectedDistrict,\n      townPanchayat: selectedTownPanchayat,\n      schemeType: selectedSchemeType,\n      schemeWiseView: reportType === \"scheme\" ? schemeWiseView : undefined,\n      componentWiseView: reportType === \"component\" ? componentWiseView : undefined,\n      yearWiseView: reportType === \"year\" ? yearWiseView : undefined,\n      viewOptions: selectedViewOptions, // Send as array\n    }\n\n    console.log(\"[v0] Calling dashboard reports service with filters:\", filters)\n\n    try {\n      const result = await reportService.generateDashboardReport(filters)\n\n      if (result.success) {\n        console.log(\"[v0] Dashboard service returned\", result.count, \"records\")\n        setFilteredData(result.data)\n      } else {\n        console.error(\"[v0] Dashboard service error:\", result.error)\n        alert(\"Failed to generate report. Please try again.\")\n        setFilteredData([])\n      }\n    } catch (error) {\n      console.error(\"[v0] Dashboard service call failed:\", error)\n      alert(\"Failed to generate report. Please try again.\")\n      setFilteredData([])\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleExcelDownload = () => {\n    const worksheet = XLSX.utils.json_to_sheet(\n      filteredData.map((item) => ({\n        \"Scheme Name\": item.schemeName,\n        Component: item.componentName,\n        Stage: item.stage,\n        Zone: item.zone,\n        District: item.district,\n        \"Town Panchayat\": item.townPanchayat,\n        \"Financial Year\": item.financialYear,\n        Status: item.status,\n        \"Amount (â‚¹)\": item.amount,\n        Beneficiaries: item.beneficiaries,\n        \"Completion Date\": item.completionDate,\n        \"Scheme Type\": item.schemeType,\n      })),\n    )\n\n    const workbook = XLSX.utils.book_new()\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Report Data\")\n\n    const excelBuffer = XLSX.write(workbook, { bookType: \"xlsx\", type: \"array\" })\n    const blob = new Blob([excelBuffer], { type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" })\n    const url = URL.createObjectURL(blob)\n\n    const link = document.createElement(\"a\")\n    link.href = url\n    link.download = `Report_${reportCategory}_${reportType}_${new Date().toISOString().split(\"T\")[0]}.xlsx`\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n    URL.revokeObjectURL(url)\n  }\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat(\"en-IN\", {\n      style: \"currency\",\n      currency: \"INR\",\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(amount)\n  }\n\n  const getStatusBadgeVariant = (status: string) => {\n    switch (status.toLowerCase()) {\n      case \"active\":\n        return \"default\"\n      case \"completed\":\n        return \"secondary\"\n      case \"pending\":\n        return \"destructive\"\n      case \"approved\":\n        return \"outline\"\n      default:\n        return \"secondary\"\n    }\n  }\n\n  // Determine which filters to show based on report type\n  const shouldShowSchemeFilter = () => {\n    if (reportType === \"overall\") return viewType === \"scheme\" || viewType === \"component\" || viewType === \"year\"\n    if (reportType === \"component\") return componentWiseView === \"scheme\" || componentWiseView === \"both\"\n    if (reportType === \"year\") return yearWiseView === \"scheme\" || yearWiseView === \"both\"\n    return false\n  }\n\n  const shouldShowComponentFilter = () => {\n    if (reportType === \"overall\") return viewType === \"component\" || viewType === \"year\"\n    if (reportType === \"scheme\") return schemeWiseView === \"component\" || schemeWiseView === \"both\"\n    if (reportType === \"year\") return yearWiseView === \"component\" || yearWiseView === \"both\"\n    return false\n  }\n\n  const shouldShowYearFilter = () => {\n    if (reportType === \"overall\") return viewType === \"year\"\n    if (reportType === \"scheme\") return schemeWiseView === \"year\" || schemeWiseView === \"both\"\n    if (reportType === \"component\") return componentWiseView === \"year\" || componentWiseView === \"both\"\n    return false\n  }\n\n  return (\n    <ProtectedRoute>\n      <DashboardLayout>\n        <div className=\"space-y-6\">\n          <div className=\"bg-gradient-to-r from-[#013A65] to-[#013A65]/90 rounded-lg py-3 px-6 text-white shadow-lg\">\n            <div className=\"flex justify-between items-center\">\n              <div>\n                <h1 className=\"text-xl font-semibold\">Report Management</h1>\n                <p className=\"text-white/80 text-sm mt-1\">\n                  Generate comprehensive dashboard and scheme reports with advanced hierarchical filtering\n                </p>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <FileBarChart className=\"h-8 w-8 text-[#F3B335]\" />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"flex flex-col h-full bg-white rounded-lg border border-[#EDEEF0] shadow-sm overflow-hidden\">\n            <div className=\"flex-shrink-0 p-4 border-b border-[#EDEEF0] bg-gradient-to-r from-[#F8F8F8] to-[#EDEEF0]\">\n              <div className=\"flex items-center justify-between gap-4 mb-4\">\n                <div className=\"flex items-center gap-2\">\n                  <Filter className=\"h-5 w-5 text-[#013A65]\" />\n                  <h3 className=\"text-base font-semibold text-[#013A65]\">Report Filters</h3>\n                </div>\n                {showData && filteredData.length > 0 && (\n                  <Button\n                    onClick={handleExcelDownload}\n                    size=\"sm\"\n                    className=\"bg-gradient-to-r from-[#F3B335] to-[#F3B335]/90 hover:from-[#F3B335]/90 hover:to-[#F3B335]/80 text-[#013A65] border-0 shadow-lg hover:shadow-xl transition-all duration-300 h-9 px-4 text-sm font-medium\"\n                  >\n                    <Download className=\"h-4 w-4 mr-1.5\" />\n                    Download Excel\n                  </Button>\n                )}\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4 p-4 bg-white rounded-lg border border-[#EDEEF0]\">\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-semibold text-[#013A65]\">Report Category</label>\n                  <Select\n                    value={reportCategory}\n                    onValueChange={(value: \"dashboard\" | \"scheme\") => {\n                      setReportCategory(value)\n                      setShowData(false)\n                    }}\n                  >\n                    <SelectTrigger className=\"h-11 w-full min-w-[200px] bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\">\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"dashboard\">Dashboard Reports</SelectItem>\n                      <SelectItem value=\"scheme\">Scheme Reports</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-semibold text-[#013A65]\">Report Type</label>\n                  <Select\n                    value={reportType}\n                    onValueChange={(value: \"overall\" | \"scheme\" | \"component\" | \"year\") => {\n                      setReportType(value)\n                      setShowData(false)\n                    }}\n                  >\n                    <SelectTrigger className=\"h-11 w-full min-w-[200px] bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\">\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"overall\">Overall Wise</SelectItem>\n                      <SelectItem value=\"scheme\">Scheme Wise</SelectItem>\n                      <SelectItem value=\"component\">Component Wise</SelectItem>\n                      <SelectItem value=\"year\">Year Wise</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n\n              {reportType === \"overall\" && (\n                <div className=\"mb-4 p-4 bg-white rounded-lg border border-[#EDEEF0]\">\n                  <label className=\"text-sm font-semibold text-[#013A65] mb-2 block\">View By</label>\n                  <Select\n                    value={viewType}\n                    onValueChange={(value: any) => {\n                      setViewType(value)\n                      setShowData(false)\n                    }}\n                  >\n                    <SelectTrigger className=\"h-11 w-full md:w-1/2 min-w-[200px] bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\">\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"zone\">Zone Wise</SelectItem>\n                      <SelectItem value=\"district\">District Wise</SelectItem>\n                      <SelectItem value=\"townpanchayat\">Town Panchayat Wise</SelectItem>\n                      <SelectItem value=\"scheme\">Scheme Wise</SelectItem>\n                      <SelectItem value=\"component\">Component Wise</SelectItem>\n                      <SelectItem value=\"year\">Year Wise</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n              )}\n\n              {reportType === \"scheme\" && (\n                <div className=\"mb-4 p-4 bg-white rounded-lg border border-[#EDEEF0]\">\n                  <label className=\"text-sm font-semibold text-[#013A65] mb-2 block\">Additional View Options</label>\n                  <Select\n                    value={schemeWiseView}\n                    onValueChange={(value: any) => {\n                      setSchemeWiseView(value)\n                      setShowData(false)\n                    }}\n                  >\n                    <SelectTrigger className=\"h-11 w-full md:w-1/2 min-w-[200px] bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\">\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"component\">Component Wise</SelectItem>\n                      <SelectItem value=\"year\">Year Wise</SelectItem>\n                      <SelectItem value=\"both\">Component & Year Wise</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n              )}\n\n              {reportType === \"component\" && (\n                <div className=\"mb-4 p-4 bg-white rounded-lg border border-[#EDEEF0]\">\n                  <label className=\"text-sm font-semibold text-[#013A65] mb-2 block\">Additional View Options</label>\n                  <Select\n                    value={componentWiseView}\n                    onValueChange={(value: any) => {\n                      setComponentWiseView(value)\n                      setShowData(false)\n                    }}\n                  >\n                    <SelectTrigger className=\"h-11 w-full md:w-1/2 min-w-[200px] bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\">\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"scheme\">Scheme Wise</SelectItem>\n                      <SelectItem value=\"year\">Year Wise</SelectItem>\n                      <SelectItem value=\"both\">Scheme & Year Wise</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n              )}\n\n              {reportType === \"year\" && (\n                <div className=\"mb-4 p-4 bg-white rounded-lg border border-[#EDEEF0]\">\n                  <label className=\"text-sm font-semibold text-[#013A65] mb-2 block\">Additional View Options</label>\n                  <Select\n                    value={yearWiseView}\n                    onValueChange={(value: any) => {\n                      setYearWiseView(value)\n                      setShowData(false)\n                    }}\n                  >\n                    <SelectTrigger className=\"h-11 w-full md:w-1/2 min-w-[200px] bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\">\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"scheme\">Scheme Wise</SelectItem>\n                      <SelectItem value=\"component\">Component Wise</SelectItem>\n                      <SelectItem value=\"both\">Scheme & Component Wise</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n              )}\n\n              <div className=\"mb-4 p-4 bg-white rounded-lg border border-[#EDEEF0]\">\n                <label className=\"text-sm font-semibold text-[#013A65] mb-3 block\">View Options</label>\n                <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Checkbox\n                      id=\"schemeName\"\n                      checked={viewOptions.schemeName}\n                      onCheckedChange={(checked) =>\n                        setViewOptions((prev) => ({ ...prev, schemeName: checked as boolean }))\n                      }\n                    />\n                    <label htmlFor=\"schemeName\" className=\"text-sm text-[#013A65] cursor-pointer\">\n                      Scheme Name\n                    </label>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Checkbox\n                      id=\"componentName\"\n                      checked={viewOptions.componentName}\n                      onCheckedChange={(checked) =>\n                        setViewOptions((prev) => ({ ...prev, componentName: checked as boolean }))\n                      }\n                    />\n                    <label htmlFor=\"componentName\" className=\"text-sm text-[#013A65] cursor-pointer\">\n                      Component\n                    </label>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Checkbox\n                      id=\"stage\"\n                      checked={viewOptions.stage}\n                      onCheckedChange={(checked) => setViewOptions((prev) => ({ ...prev, stage: checked as boolean }))}\n                    />\n                    <label htmlFor=\"stage\" className=\"text-sm text-[#013A65] cursor-pointer\">\n                      Stage\n                    </label>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Checkbox\n                      id=\"zone\"\n                      checked={viewOptions.zone}\n                      onCheckedChange={(checked) => setViewOptions((prev) => ({ ...prev, zone: checked as boolean }))}\n                    />\n                    <label htmlFor=\"zone\" className=\"text-sm text-[#013A65] cursor-pointer\">\n                      Zone\n                    </label>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Checkbox\n                      id=\"district\"\n                      checked={viewOptions.district}\n                      onCheckedChange={(checked) =>\n                        setViewOptions((prev) => ({ ...prev, district: checked as boolean }))\n                      }\n                    />\n                    <label htmlFor=\"district\" className=\"text-sm text-[#013A65] cursor-pointer\">\n                      District\n                    </label>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Checkbox\n                      id=\"townPanchayat\"\n                      checked={viewOptions.townPanchayat}\n                      onCheckedChange={(checked) =>\n                        setViewOptions((prev) => ({ ...prev, townPanchayat: checked as boolean }))\n                      }\n                    />\n                    <label htmlFor=\"townPanchayat\" className=\"text-sm text-[#013A65] cursor-pointer\">\n                      Town Panchayat\n                    </label>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Checkbox\n                      id=\"financialYear\"\n                      checked={viewOptions.financialYear}\n                      onCheckedChange={(checked) =>\n                        setViewOptions((prev) => ({ ...prev, financialYear: checked as boolean }))\n                      }\n                    />\n                    <label htmlFor=\"financialYear\" className=\"text-sm text-[#013A65] cursor-pointer\">\n                      Financial Year\n                    </label>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Checkbox\n                      id=\"status\"\n                      checked={viewOptions.status}\n                      onCheckedChange={(checked) => setViewOptions((prev) => ({ ...prev, status: checked as boolean }))}\n                    />\n                    <label htmlFor=\"status\" className=\"text-sm text-[#013A65] cursor-pointer\">\n                      Status\n                    </label>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Checkbox\n                      id=\"amount\"\n                      checked={viewOptions.amount}\n                      onCheckedChange={(checked) => setViewOptions((prev) => ({ ...prev, amount: checked as boolean }))}\n                    />\n                    <label htmlFor=\"amount\" className=\"text-sm text-[#013A65] cursor-pointer\">\n                      Amount\n                    </label>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Checkbox\n                      id=\"beneficiaries\"\n                      checked={viewOptions.beneficiaries}\n                      onCheckedChange={(checked) =>\n                        setViewOptions((prev) => ({ ...prev, beneficiaries: checked as boolean }))\n                      }\n                    />\n                    <label htmlFor=\"beneficiaries\" className=\"text-sm text-[#013A65] cursor-pointer\">\n                      Beneficiaries\n                    </label>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Checkbox\n                      id=\"completionDate\"\n                      checked={viewOptions.completionDate}\n                      onCheckedChange={(checked) =>\n                        setViewOptions((prev) => ({ ...prev, completionDate: checked as boolean }))\n                      }\n                    />\n                    <label htmlFor=\"completionDate\" className=\"text-sm text-[#013A65] cursor-pointer\">\n                      Completion Date\n                    </label>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Checkbox\n                      id=\"schemeType\"\n                      checked={viewOptions.schemeType}\n                      onCheckedChange={(checked) =>\n                        setViewOptions((prev) => ({ ...prev, schemeType: checked as boolean }))\n                      }\n                    />\n                    <label htmlFor=\"schemeType\" className=\"text-sm text-[#013A65] cursor-pointer\">\n                      Scheme Type\n                    </label>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n                {/* Zone filter - always show */}\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium text-[#013A65]\">Zone</label>\n                  <Select value={selectedZone} onValueChange={setSelectedZone}>\n                    <SelectTrigger className=\"h-11 w-full min-w-[200px] bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\">\n                      <SelectValue placeholder=\"All zones\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"all\">All zones</SelectItem>\n                      {zones.map((zone) => (\n                        <SelectItem key={zone} value={zone}>\n                          {zone}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                {/* District filter - show when zone is selected */}\n                {selectedZone !== \"all\" && (\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium text-[#013A65]\">District</label>\n                    <Select value={selectedDistrict} onValueChange={setSelectedDistrict}>\n                      <SelectTrigger className=\"h-11 w-full min-w-[200px] bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\">\n                        <SelectValue placeholder=\"All districts\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"all\">All districts</SelectItem>\n                        {districts.map((district) => (\n                          <SelectItem key={district} value={district}>\n                            {district}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                )}\n\n                {/* Town Panchayat filter - show when district is selected */}\n                {selectedDistrict !== \"all\" && townPanchayats.length > 0 && (\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium text-[#013A65]\">Town Panchayat</label>\n                    <Select value={selectedTownPanchayat} onValueChange={setSelectedTownPanchayat}>\n                      <SelectTrigger className=\"h-11 w-full min-w-[200px] bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\">\n                        <SelectValue placeholder=\"All town panchayats\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"all\">All town panchayats</SelectItem>\n                        {townPanchayats.map((tp) => (\n                          <SelectItem key={tp} value={tp}>\n                            {tp}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                )}\n\n                {/* Scheme filter - conditional based on report type */}\n                {shouldShowSchemeFilter() && (\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium text-[#013A65]\">Scheme</label>\n                    <Select value={selectedScheme} onValueChange={setSelectedScheme}>\n                      <SelectTrigger className=\"h-11 w-full min-w-[200px] bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\">\n                        <SelectValue placeholder=\"All schemes\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"all\">All schemes</SelectItem>\n                        {schemes.map((scheme) => (\n                          <SelectItem key={scheme} value={scheme}>\n                            {scheme}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                )}\n\n                {/* Component filter - conditional based on report type */}\n                {shouldShowComponentFilter() && (\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium text-[#013A65]\">Component</label>\n                    <Select value={selectedComponent} onValueChange={setSelectedComponent}>\n                      <SelectTrigger className=\"h-11 w-full min-w-[200px] bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\">\n                        <SelectValue placeholder=\"All components\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"all\">All components</SelectItem>\n                        {components.map((component) => (\n                          <SelectItem key={component} value={component}>\n                            {component}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                )}\n\n                {/* Year filter - conditional based on report type */}\n                {shouldShowYearFilter() && (\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium text-[#013A65]\">Financial Year</label>\n                    <Select value={selectedYear} onValueChange={setSelectedYear}>\n                      <SelectTrigger className=\"h-11 w-full min-w-[200px] bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\">\n                        <SelectValue placeholder=\"All years\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"all\">All years</SelectItem>\n                        {years.map((year) => (\n                          <SelectItem key={year} value={year}>\n                            {year}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                )}\n\n                {/* Scheme Type filter - always show */}\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium text-[#013A65]\">Scheme Type</label>\n                  <Select value={selectedSchemeType} onValueChange={(value: any) => setSelectedSchemeType(value)}>\n                    <SelectTrigger className=\"h-11 w-full min-w-[200px] bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\">\n                      <SelectValue placeholder=\"All types\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"all\">All types</SelectItem>\n                      <SelectItem value=\"Announcement\">Announcement</SelectItem>\n                      <SelectItem value=\"Flagship\">Flagship</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n\n              <div className=\"flex justify-end\">\n                <Button\n                  onClick={handleGenerateReport}\n                  className=\"bg-gradient-to-r from-[#013A65] to-[#013A65]/90 hover:from-[#013A65]/90 hover:to-[#013A65]/80 text-white border-0 shadow-lg hover:shadow-xl transition-all duration-300 h-9 px-6 text-sm font-medium\"\n                >\n                  Generate Report\n                </Button>\n              </div>\n            </div>\n\n            <div className=\"flex-1 overflow-auto\">\n              {!showData ? (\n                <div className=\"flex flex-col items-center justify-center h-64 text-center\">\n                  <div className=\"w-16 h-16 bg-gradient-to-r from-[#013A65]/10 to-[#F3B335]/10 rounded-full flex items-center justify-center mb-4\">\n                    <FileBarChart className=\"h-8 w-8 text-[#013A65]/60\" />\n                  </div>\n                  <h3 className=\"text-lg font-medium text-[#013A65] mb-2\">Select filters and generate report</h3>\n                  <p className=\"text-[#013A65]/70 mb-4\">\n                    Choose your report category, type, and filter criteria, then click \"Generate Report\" to view the\n                    data.\n                  </p>\n                </div>\n              ) : isLoading ? (\n                <div className=\"flex items-center justify-center h-64\">\n                  <div className=\"flex items-center gap-2 text-[#013A65]/70\">\n                    <Loader2 className=\"h-5 w-5 animate-spin\" />\n                    <span>Generating report...</span>\n                  </div>\n                </div>\n              ) : filteredData.length === 0 ? (\n                <div className=\"flex flex-col items-center justify-center h-64 text-center\">\n                  <div className=\"w-16 h-16 bg-gradient-to-r from-[#013A65]/10 to-[#F3B335]/10 rounded-full flex items-center justify-center mb-4\">\n                    <FileBarChart className=\"h-8 w-8 text-[#013A65]/60\" />\n                  </div>\n                  <h3 className=\"text-lg font-medium text-[#013A65] mb-2\">No report data found</h3>\n                  <p className=\"text-[#013A65]/70 mb-4\">\n                    No data matches your current filter criteria. Try adjusting the filters.\n                  </p>\n                </div>\n              ) : (\n                <Table>\n                  <TableHeader>\n                    <TableRow className=\"bg-[#F3B335] hover:bg-[#F3B335]\">\n                      {viewOptions.schemeName && (\n                        <TableHead className=\"text-[#013A65] font-semibold\">Scheme Name</TableHead>\n                      )}\n                      {viewOptions.componentName && (\n                        <TableHead className=\"text-[#013A65] font-semibold\">Component</TableHead>\n                      )}\n                      {viewOptions.stage && <TableHead className=\"text-[#013A65] font-semibold\">Stage</TableHead>}\n                      {viewOptions.zone && <TableHead className=\"text-[#013A65] font-semibold\">Zone</TableHead>}\n                      {viewOptions.district && <TableHead className=\"text-[#013A65] font-semibold\">District</TableHead>}\n                      {viewOptions.townPanchayat && (\n                        <TableHead className=\"text-[#013A65] font-semibold\">Town Panchayat</TableHead>\n                      )}\n                      {viewOptions.financialYear && (\n                        <TableHead className=\"text-[#013A65] font-semibold\">Financial Year</TableHead>\n                      )}\n                      {viewOptions.status && <TableHead className=\"text-[#013A65] font-semibold\">Status</TableHead>}\n                      {viewOptions.amount && (\n                        <TableHead className=\"text-[#013A65] font-semibold text-right\">Amount</TableHead>\n                      )}\n                      {viewOptions.beneficiaries && (\n                        <TableHead className=\"text-[#013A65] font-semibold text-right\">Beneficiaries</TableHead>\n                      )}\n                      {viewOptions.completionDate && (\n                        <TableHead className=\"text-[#013A65] font-semibold\">Completion Date</TableHead>\n                      )}\n                      {viewOptions.schemeType && (\n                        <TableHead className=\"text-[#013A65] font-semibold\">Scheme Type</TableHead>\n                      )}\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {filteredData.map((item) => (\n                      <TableRow key={item.id} className=\"hover:bg-[#F8F8F8]/50\">\n                        {viewOptions.schemeName && (\n                          <TableCell className=\"font-medium text-[#013A65] max-w-xs truncate\" title={item.schemeName}>\n                            {item.schemeName}\n                          </TableCell>\n                        )}\n                        {viewOptions.componentName && (\n                          <TableCell className=\"text-[#013A65]/80 max-w-xs truncate\" title={item.componentName}>\n                            {item.componentName}\n                          </TableCell>\n                        )}\n                        {viewOptions.stage && <TableCell className=\"text-[#013A65]/80\">{item.stage}</TableCell>}\n                        {viewOptions.zone && <TableCell className=\"text-[#013A65]/80\">{item.zone}</TableCell>}\n                        {viewOptions.district && <TableCell className=\"text-[#013A65]/80\">{item.district}</TableCell>}\n                        {viewOptions.townPanchayat && (\n                          <TableCell className=\"text-[#013A65]/80\">{item.townPanchayat}</TableCell>\n                        )}\n                        {viewOptions.financialYear && (\n                          <TableCell className=\"text-[#013A65]/80\">{item.financialYear}</TableCell>\n                        )}\n                        {viewOptions.status && (\n                          <TableCell>\n                            <Badge\n                              variant={getStatusBadgeVariant(item.status)}\n                              className=\"bg-gradient-to-r from-[#F3B335]/20 to-[#F3B335]/30 text-[#013A65] border-[#F3B335]/40\"\n                            >\n                              {item.status}\n                            </Badge>\n                          </TableCell>\n                        )}\n                        {viewOptions.amount && (\n                          <TableCell className=\"text-right font-mono text-[#013A65]\">\n                            {formatCurrency(item.amount)}\n                          </TableCell>\n                        )}\n                        {viewOptions.beneficiaries && (\n                          <TableCell className=\"text-right text-[#013A65]\">\n                            {item.beneficiaries.toLocaleString()}\n                          </TableCell>\n                        )}\n                        {viewOptions.completionDate && (\n                          <TableCell className=\"text-[#013A65]/70\">\n                            {new Date(item.completionDate).toLocaleDateString()}\n                          </TableCell>\n                        )}\n                        {viewOptions.schemeType && (\n                          <TableCell>\n                            <Badge\n                              className={\n                                item.schemeType === \"Flagship\"\n                                  ? \"bg-gradient-to-r from-[#013A65]/20 to-[#013A65]/30 text-[#013A65] border-[#013A65]/40\"\n                                  : \"bg-gradient-to-r from-[#F3B335]/20 to-[#F3B335]/30 text-[#013A65] border-[#F3B335]/40\"\n                              }\n                            >\n                              {item.schemeType}\n                            </Badge>\n                          </TableCell>\n                        )}\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              )}\n            </div>\n          </div>\n        </div>\n      </DashboardLayout>\n    </ProtectedRoute>\n  )\n}\n"],"names":[],"mappings":"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"}