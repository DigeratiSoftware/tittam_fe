{"version":3,"sources":["turbopack:///[project]/projects/TITTAM/tittam_fe/components/dashboard/masters-management.tsx","turbopack:///[project]/projects/TITTAM/tittam_fe/components/dashboard/zone-master.tsx","turbopack:///[project]/projects/TITTAM/tittam_fe/services/masters-service.ts","turbopack:///[project]/projects/TITTAM/tittam_fe/components/dashboard/create-zone-dialog.tsx","turbopack:///[project]/projects/TITTAM/tittam_fe/components/dashboard/edit-zone-dialog.tsx","turbopack:///[project]/projects/TITTAM/tittam_fe/components/dashboard/district-master.tsx","turbopack:///[project]/projects/TITTAM/tittam_fe/components/dashboard/create-district-dialog.tsx","turbopack:///[project]/projects/TITTAM/tittam_fe/components/dashboard/edit-district-dialog.tsx","turbopack:///[project]/projects/TITTAM/tittam_fe/components/dashboard/create-town-panchayat-dialog.tsx","turbopack:///[project]/projects/TITTAM/tittam_fe/components/dashboard/edit-town-panchayat-dialog.tsx","turbopack:///[project]/projects/TITTAM/tittam_fe/components/dashboard/town-panchayat-master.tsx","turbopack:///[project]/projects/TITTAM/tittam_fe/components/dashboard/create-ward-dialog.tsx","turbopack:///[project]/projects/TITTAM/tittam_fe/components/dashboard/edit-ward-dialog.tsx","turbopack:///[project]/projects/TITTAM/tittam_fe/components/dashboard/ward-master.tsx"],"sourcesContent":["\"use client\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { ZoneMaster } from \"./zone-master\"\nimport { DistrictMaster } from \"./district-master\"\nimport { TownPanchayatMaster } from \"./town-panchayat-master\"\nimport { WardMaster } from \"./ward-master\"\n\nexport function MastersManagement() {\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-gradient-to-r from-[#013A65] to-[#013A65]/90 rounded-lg py-3 px-6 text-white shadow-lg\">\n        <div>\n          <h1 className=\"text-xl font-semibold\">Masters Management</h1>\n          <p className=\"text-white/80 text-sm mt-1\">\n            Manage hierarchical master data for zones, districts, town panchayats, and wards\n          </p>\n        </div>\n      </div>\n\n      <div className=\"space-y-6\">\n        <Tabs defaultValue=\"zones\" className=\"space-y-6\">\n          <TabsList className=\"grid w-full grid-cols-4 bg-[#F8F8F8] border border-[#013A65]/20 shadow-sm rounded-lg\">\n            <TabsTrigger\n              value=\"zones\"\n              className=\"data-[state=active]:bg-gradient-to-r data-[state=active]:from-[#013A65] data-[state=active]:to-[#013A65]/90 data-[state=active]:text-white rounded-md\"\n            >\n              Zones\n            </TabsTrigger>\n            <TabsTrigger\n              value=\"districts\"\n              className=\"data-[state=active]:bg-gradient-to-r data-[state=active]:from-[#013A65] data-[state=active]:to-[#013A65]/90 data-[state=active]:text-white rounded-md\"\n            >\n              Districts\n            </TabsTrigger>\n            <TabsTrigger\n              value=\"town-panchayats\"\n              className=\"data-[state=active]:bg-gradient-to-r data-[state=active]:from-[#013A65] data-[state=active]:to-[#013A65]/90 data-[state=active]:text-white rounded-md\"\n            >\n              Town Panchayats\n            </TabsTrigger>\n            <TabsTrigger\n              value=\"wards\"\n              className=\"data-[state=active]:bg-gradient-to-r data-[state=active]:from-[#013A65] data-[state=active]:to-[#013A65]/90 data-[state=active]:text-white rounded-md\"\n            >\n              Wards\n            </TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"zones\" className=\"m-0\">\n            <ZoneMaster />\n          </TabsContent>\n          <TabsContent value=\"districts\" className=\"m-0\">\n            <DistrictMaster />\n          </TabsContent>\n          <TabsContent value=\"town-panchayats\" className=\"m-0\">\n            <TownPanchayatMaster />\n          </TabsContent>\n          <TabsContent value=\"wards\" className=\"m-0\">\n            <WardMaster />\n          </TabsContent>\n        </Tabs>\n      </div>\n    </div>\n  )\n}\n","\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\nimport { Plus, Edit, Search, Loader2 } from \"lucide-react\"\nimport { MastersService, type Zone } from \"@/services/masters-service\"\nimport { CreateZoneDialog } from \"./create-zone-dialog\"\nimport { EditZoneDialog } from \"./edit-zone-dialog\"\n\nexport function ZoneMaster() {\n  const [zones, setZones] = useState<Zone[]>([])\n  const [loading, setLoading] = useState(true)\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false)\n  const [editingZone, setEditingZone] = useState<Zone | null>(null)\n\n  useEffect(() => {\n    loadZones()\n  }, [])\n\n  const loadZones = async () => {\n    try {\n      setLoading(true)\n      const data = await MastersService.getAllZones()\n      setZones(data)\n    } catch (error) {\n      console.error(\"Failed to load zones:\", error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleCreateZone = async (zoneData: Omit<Zone, \"id\" | \"createdAt\">) => {\n    try {\n      await MastersService.createZone(zoneData)\n      await loadZones()\n      setIsCreateDialogOpen(false)\n    } catch (error) {\n      console.error(\"Failed to create zone:\", error)\n    }\n  }\n\n  const handleEditZone = async (id: string, zoneData: Partial<Zone>) => {\n    try {\n      await MastersService.updateZone(id, zoneData)\n      await loadZones()\n      setEditingZone(null)\n    } catch (error) {\n      console.error(\"Failed to update zone:\", error)\n    }\n  }\n\n  const filteredZones = zones.filter(\n    (zone) =>\n      zone.nameEnglish.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      zone.nameTamil.includes(searchTerm) ||\n      zone.remark.toLowerCase().includes(searchTerm.toLowerCase()),\n  )\n\n  return (\n    <div className=\"flex flex-col h-full bg-white rounded-lg border border-[#EDEEF0] shadow-sm overflow-hidden\">\n      {/* Header */}\n      <div className=\"flex-shrink-0 p-4 border-b border-[#EDEEF0] bg-gradient-to-r from-[#F8F8F8] to-[#EDEEF0]\">\n        <div className=\"flex items-center justify-between gap-4\">\n          <div className=\"flex items-center gap-4 flex-1\">\n            <div className=\"relative flex-1 max-w-md\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-[#013A65]/60 h-4 w-4\" />\n              <Input\n                placeholder=\"Search zones...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"pl-10 h-9 bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\"\n              />\n            </div>\n          </div>\n          <Button\n            onClick={() => setIsCreateDialogOpen(true)}\n            className=\"bg-gradient-to-r from-[#F3B335] to-[#F3B335]/90 hover:from-[#F3B335]/90 hover:to-[#F3B335] text-[#013A65] font-medium shadow-md hover:shadow-lg transition-all duration-200 h-9\"\n          >\n            <Plus className=\"h-4 w-4 mr-2\" />\n            Create Zone\n          </Button>\n        </div>\n      </div>\n\n      {/* Content */}\n      <div className=\"flex-1 overflow-auto\">\n        {loading ? (\n          <div className=\"flex items-center justify-center h-64\">\n            <div className=\"flex items-center gap-2 text-[#013A65]/70\">\n              <Loader2 className=\"h-5 w-5 animate-spin\" />\n              <span>Loading zones...</span>\n            </div>\n          </div>\n        ) : filteredZones.length === 0 ? (\n          <div className=\"flex flex-col items-center justify-center h-64 text-center\">\n            <div className=\"w-16 h-16 bg-gradient-to-r from-[#013A65]/10 to-[#F3B335]/10 rounded-full flex items-center justify-center mb-4\">\n              <Plus className=\"h-8 w-8 text-[#013A65]/60\" />\n            </div>\n            <h3 className=\"text-lg font-medium text-[#013A65] mb-2\">No zones found</h3>\n            <p className=\"text-[#013A65]/70 mb-4\">\n              {searchTerm ? \"No zones match your search criteria.\" : \"Get started by creating your first zone.\"}\n            </p>\n            {!searchTerm && (\n              <Button\n                onClick={() => setIsCreateDialogOpen(true)}\n                className=\"bg-gradient-to-r from-[#F3B335] to-[#F3B335]/90 hover:from-[#F3B335]/90 hover:to-[#F3B335] text-[#013A65] font-medium\"\n              >\n                <Plus className=\"h-4 w-4 mr-2\" />\n                Create Zone\n              </Button>\n            )}\n          </div>\n        ) : (\n          <Table>\n            <TableHeader>\n              <TableRow className=\"bg-[#F3B335] hover:bg-[#F3B335]\">\n                <TableHead className=\"text-[#013A65] font-semibold\">English Name</TableHead>\n                <TableHead className=\"text-[#013A65] font-semibold\">Tamil Name</TableHead>\n                <TableHead className=\"text-[#013A65] font-semibold\">Remark</TableHead>\n                <TableHead className=\"text-[#013A65] font-semibold\">Created By</TableHead>\n                <TableHead className=\"text-[#013A65] font-semibold\">Created At</TableHead>\n                <TableHead className=\"text-[#013A65] font-semibold w-20\">Actions</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {filteredZones.map((zone) => (\n                <TableRow key={zone.id} className=\"hover:bg-[#F8F8F8]/50\">\n                  <TableCell className=\"font-medium text-[#013A65]\">{zone.nameEnglish}</TableCell>\n                  <TableCell className=\"text-[#013A65]/80\">{zone.nameTamil}</TableCell>\n                  <TableCell className=\"text-[#013A65]/70 max-w-xs truncate\" title={zone.remark}>\n                    {zone.remark}\n                  </TableCell>\n                  <TableCell className=\"text-[#013A65]/70\">{zone.createdBy}</TableCell>\n                  <TableCell className=\"text-[#013A65]/70\">{zone.createdAt}</TableCell>\n                  <TableCell>\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => setEditingZone(zone)}\n                      className=\"h-8 w-8 p-0 border-[#EDEEF0] hover:bg-[#F3B335]/10 hover:border-[#F3B335]/30\"\n                    >\n                      <Edit className=\"h-3 w-3\" />\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        )}\n      </div>\n\n      {/* Dialogs */}\n      <CreateZoneDialog open={isCreateDialogOpen} onOpenChange={setIsCreateDialogOpen} onSubmit={handleCreateZone} />\n\n      {editingZone && (\n        <EditZoneDialog\n          open={!!editingZone}\n          onOpenChange={(open) => !open && setEditingZone(null)}\n          zone={editingZone}\n          onSubmit={(data) => handleEditZone(editingZone.id, data)}\n        />\n      )}\n    </div>\n  )\n}\n","import { apiClient } from \"@/lib/api-client\"\n\nexport interface Zone {\n  id: string\n  zoneId: string\n  nameEnglish: string\n  nameTamil: string\n  remark: string\n  createdBy: string\n  updatedBy: string\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface District {\n  id: string\n  districtId: string\n  zoneId: string\n  nameEnglish: string\n  nameTamil: string\n  remark: string\n  createdBy: string\n  updatedBy: string\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface TownPanchayat {\n  id: string\n  tpId: string\n  districtId: string\n  nameEnglish: string\n  nameTamil: string\n  remark: string\n  createdBy: string\n  updatedBy: string\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Ward {\n  id: string\n  wardId: string\n  townPanchayatId: string\n  nameEnglish: string\n  nameTamil: string\n  remark: string\n  createdBy: string\n  updatedBy: string\n  createdAt: string\n  updatedAt: string\n}\n\ninterface ApiZone {\n  _id: string\n  zoneId: string\n  nameEnglish: string\n  nameTamil: string\n  remark: string\n  createdBy: string\n  updatedBy: string\n  createdAt: string\n  updatedAt: string\n}\n\ninterface ApiDistrict {\n  _id: string\n  districtId: string\n  zoneId: string\n  nameEnglish: string\n  nameTamil: string\n  remark: string\n  createdBy: string\n  updatedBy: string\n  createdAt: string\n  updatedAt: string\n}\n\ninterface ApiTownPanchayat {\n  _id: string\n  tpId: string\n  districtId: string\n  nameEnglish: string\n  nameTamil: string\n  remark: string\n  createdBy: string\n  updatedBy: string\n  createdAt: string\n  updatedAt: string\n}\n\ninterface ApiWard {\n  _id: string\n  wardId: string\n  townPanchayatId: string\n  nameEnglish: string\n  nameTamil: string\n  remark: string\n  createdBy: string\n  updatedBy: string\n  createdAt: string\n  updatedAt: string\n}\n\nconst mapApiZoneToZone = (apiZone: ApiZone): Zone => ({\n  id: apiZone.zoneId,\n  zoneId: apiZone.zoneId,\n  nameEnglish: apiZone.nameEnglish,\n  nameTamil: apiZone.nameTamil,\n  remark: apiZone.remark,\n  createdBy: apiZone.createdBy,\n  updatedBy: apiZone.updatedBy,\n  createdAt: apiZone.createdAt,\n  updatedAt: apiZone.updatedAt,\n})\n\nconst mapApiDistrictToDistrict = (apiDistrict: ApiDistrict): District => ({\n  id: apiDistrict.districtId,\n  districtId: apiDistrict.districtId,\n  zoneId: apiDistrict.zoneId,\n  nameEnglish: apiDistrict.nameEnglish,\n  nameTamil: apiDistrict.nameTamil,\n  remark: apiDistrict.remark,\n  createdBy: apiDistrict.createdBy,\n  updatedBy: apiDistrict.updatedBy,\n  createdAt: apiDistrict.createdAt,\n  updatedAt: apiDistrict.updatedAt,\n})\n\nconst mapApiTownPanchayatToTownPanchayat = (apiTp: ApiTownPanchayat): TownPanchayat => ({\n  id: apiTp.tpId,\n  tpId: apiTp.tpId,\n  districtId: apiTp.districtId,\n  nameEnglish: apiTp.nameEnglish,\n  nameTamil: apiTp.nameTamil,\n  remark: apiTp.remark,\n  createdBy: apiTp.createdBy,\n  updatedBy: apiTp.updatedBy,\n  createdAt: apiTp.createdAt,\n  updatedAt: apiTp.updatedAt,\n})\n\nconst mapApiWardToWard = (apiWard: ApiWard): Ward => ({\n  id: apiWard.wardId,\n  wardId: apiWard.wardId,\n  townPanchayatId: apiWard.townPanchayatId,\n  nameEnglish: apiWard.nameEnglish,\n  nameTamil: apiWard.nameTamil,\n  remark: apiWard.remark,\n  createdBy: apiWard.createdBy,\n  updatedBy: apiWard.updatedBy,\n  createdAt: apiWard.createdAt,\n  updatedAt: apiWard.updatedAt,\n})\n\nexport class MastersService {\n  static async getAllZones(): Promise<Zone[]> {\n    try {\n      const response = await apiClient.get<any>(\"/api/v1/zones\")\n      console.log(\"[v0] Zones API response:\", response)\n\n      let zonesArray: ApiZone[]\n      if (Array.isArray(response)) {\n        zonesArray = response\n      } else if (response.data && Array.isArray(response.data)) {\n        zonesArray = response.data\n      } else if (response.zones && Array.isArray(response.zones)) {\n        zonesArray = response.zones\n      } else {\n        console.error(\"[v0] Unexpected zones response structure:\", response)\n        throw new Error(\"Invalid response structure from zones API\")\n      }\n\n      return zonesArray.map(mapApiZoneToZone)\n    } catch (error) {\n      console.error(\"[v0] Failed to fetch zones:\", error)\n      throw error\n    }\n  }\n\n  static async createZone(zone: Omit<Zone, \"id\" | \"zoneId\" | \"createdAt\" | \"updatedAt\">): Promise<Zone> {\n    try {\n      const response = await apiClient.post<ApiZone>(\"/api/v1/zones\", zone)\n      return mapApiZoneToZone(response)\n    } catch (error) {\n      console.error(\"[v0] Failed to create zone:\", error)\n      throw error\n    }\n  }\n\n  static async updateZone(zoneId: string, zone: Partial<Zone>): Promise<Zone> {\n    try {\n      const response = await apiClient.put<ApiZone>(`/api/v1/zones/${zoneId}`, zone)\n      return mapApiZoneToZone(response)\n    } catch (error) {\n      console.error(\"[v0] Failed to update zone:\", error)\n      throw error\n    }\n  }\n\n  static async getDistrictsByZone(zoneId: string): Promise<District[]> {\n    try {\n      const response = await apiClient.get<any>(`/api/v1/districts/zone/${zoneId}`)\n      console.log(\"[v0] Districts API response:\", response)\n\n      let districtsArray: ApiDistrict[]\n      if (Array.isArray(response)) {\n        districtsArray = response\n      } else if (response.data && Array.isArray(response.data)) {\n        districtsArray = response.data\n      } else if (response.districts && Array.isArray(response.districts)) {\n        districtsArray = response.districts\n      } else {\n        console.error(\"[v0] Unexpected districts response structure:\", response)\n        throw new Error(\"Invalid response structure from districts API\")\n      }\n\n      return districtsArray.map(mapApiDistrictToDistrict)\n    } catch (error) {\n      console.error(\"[v0] Failed to fetch districts:\", error)\n      throw error\n    }\n  }\n\n  static async createDistrict(\n    district: Omit<District, \"id\" | \"districtId\" | \"createdAt\" | \"updatedAt\">,\n  ): Promise<District> {\n    try {\n      const response = await apiClient.post<ApiDistrict>(\"/api/v1/districts\", district)\n      return mapApiDistrictToDistrict(response)\n    } catch (error) {\n      console.error(\"[v0] Failed to create district:\", error)\n      throw error\n    }\n  }\n\n  static async updateDistrict(districtId: string, district: Partial<District>): Promise<District> {\n    try {\n      const response = await apiClient.put<ApiDistrict>(`/api/v1/districts/${districtId}`, district)\n      return mapApiDistrictToDistrict(response)\n    } catch (error) {\n      console.error(\"[v0] Failed to update district:\", error)\n      throw error\n    }\n  }\n\n  static async getTownPanchayatsByDistrict(districtId: string): Promise<TownPanchayat[]> {\n    try {\n      const response = await apiClient.get<any>(`/api/v1/town-panchayats/district/${districtId}`)\n      console.log(\"[v0] Town Panchayats API response:\", response)\n\n      let townPanchayatsArray: ApiTownPanchayat[]\n      if (Array.isArray(response)) {\n        townPanchayatsArray = response\n      } else if (response.data && Array.isArray(response.data)) {\n        townPanchayatsArray = response.data\n      } else if (response.townPanchayats && Array.isArray(response.townPanchayats)) {\n        townPanchayatsArray = response.townPanchayats\n      } else {\n        console.error(\"[v0] Unexpected town panchayats response structure:\", response)\n        throw new Error(\"Invalid response structure from town panchayats API\")\n      }\n\n      return townPanchayatsArray.map(mapApiTownPanchayatToTownPanchayat)\n    } catch (error) {\n      console.error(\"[v0] Failed to fetch town panchayats:\", error)\n      throw error\n    }\n  }\n\n  static async createTownPanchayat(\n    townPanchayat: Omit<TownPanchayat, \"id\" | \"tpId\" | \"createdAt\" | \"updatedAt\">,\n  ): Promise<TownPanchayat> {\n    try {\n      const response = await apiClient.post<ApiTownPanchayat>(\"/api/v1/town-panchayats\", townPanchayat)\n      return mapApiTownPanchayatToTownPanchayat(response)\n    } catch (error) {\n      console.error(\"[v0] Failed to create town panchayat:\", error)\n      throw error\n    }\n  }\n\n  static async updateTownPanchayat(tpId: string, townPanchayat: Partial<TownPanchayat>): Promise<TownPanchayat> {\n    try {\n      const response = await apiClient.put<ApiTownPanchayat>(`/api/v1/town-panchayats/${tpId}`, townPanchayat)\n      return mapApiTownPanchayatToTownPanchayat(response)\n    } catch (error) {\n      console.error(\"[v0] Failed to update town panchayat:\", error)\n      throw error\n    }\n  }\n\n  static async getWardsByTownPanchayat(townPanchayatId: string): Promise<Ward[]> {\n    try {\n      const response = await apiClient.get<any>(`/api/v1/wards/townPanchayat/${townPanchayatId}`)\n      console.log(\"[v0] Wards API response:\", response)\n\n      let wardsArray: ApiWard[]\n      if (Array.isArray(response)) {\n        wardsArray = response\n      } else if (response.data && Array.isArray(response.data)) {\n        wardsArray = response.data\n      } else if (response.wards && Array.isArray(response.wards)) {\n        wardsArray = response.wards\n      } else {\n        console.error(\"[v0] Unexpected wards response structure:\", response)\n        throw new Error(\"Invalid response structure from wards API\")\n      }\n\n      return wardsArray.map(mapApiWardToWard)\n    } catch (error) {\n      console.error(\"[v0] Failed to fetch wards:\", error)\n      throw error\n    }\n  }\n\n  static async createWard(ward: Omit<Ward, \"id\" | \"wardId\" | \"createdAt\" | \"updatedAt\">): Promise<Ward> {\n    try {\n      const response = await apiClient.post<ApiWard>(\"/api/v1/wards\", ward)\n      return mapApiWardToWard(response)\n    } catch (error) {\n      console.error(\"[v0] Failed to create ward:\", error)\n      throw error\n    }\n  }\n\n  static async updateWard(wardId: string, ward: Partial<Ward>): Promise<Ward> {\n    try {\n      const response = await apiClient.put<ApiWard>(`/api/v1/wards/${wardId}`, ward)\n      return mapApiWardToWard(response)\n    } catch (error) {\n      console.error(\"[v0] Failed to update ward:\", error)\n      throw error\n    }\n  }\n}\n","\"use client\"\n\nimport type React from \"react\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Dialog, DialogContent, DialogFooter, DialogHeader, DialogTitle } from \"@/components/ui/dialog\"\nimport { Loader2 } from \"lucide-react\"\nimport type { Zone } from \"@/services/masters-service\"\n\ninterface CreateZoneDialogProps {\n  open: boolean\n  onOpenChange: (open: boolean) => void\n  onSubmit: (data: Omit<Zone, \"id\" | \"createdAt\">) => Promise<void>\n}\n\nexport function CreateZoneDialog({ open, onOpenChange, onSubmit }: CreateZoneDialogProps) {\n  const [formData, setFormData] = useState({\n    nameEnglish: \"\",\n    nameTamil: \"\",\n    remark: \"\",\n    createdBy: \"Admin User\",\n  })\n  const [loading, setLoading] = useState(false)\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    if (!formData.nameEnglish.trim() || !formData.nameTamil.trim()) return\n\n    try {\n      setLoading(true)\n      await onSubmit(formData)\n      setFormData({\n        nameEnglish: \"\",\n        nameTamil: \"\",\n        remark: \"\",\n        createdBy: \"Admin User\",\n      })\n    } catch (error) {\n      console.error(\"Failed to create zone:\", error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent\n        className=\"sm:max-w-[700px] max-h-[90vh] overflow-y-auto border-0 shadow-2xl bg-[#F8F8F8] backdrop-blur-sm\"\n        onPointerDownOutside={(e) => e.preventDefault()}\n        onEscapeKeyDown={(e) => e.preventDefault()}\n      >\n        <div className=\"absolute inset-0 bg-gradient-to-br from-[#F3B335]/10 to-[#013A65]/10 rounded-lg\"></div>\n        <div className=\"relative\">\n          <DialogHeader className=\"pb-6\">\n            <DialogTitle className=\"text-2xl font-bold bg-gradient-to-r from-[#013A65] to-[#F3B335] bg-clip-text text-transparent\">\n              Create New Zone\n            </DialogTitle>\n          </DialogHeader>\n\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"nameEnglish\" className=\"text-sm font-medium text-[#013A65]\">\n                  Zone Name (English) *\n                </Label>\n                <Input\n                  id=\"nameEnglish\"\n                  value={formData.nameEnglish}\n                  onChange={(e) => setFormData({ ...formData, nameEnglish: e.target.value })}\n                  className=\"h-12 bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\"\n                  required\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"nameTamil\" className=\"text-sm font-medium text-[#013A65]\">\n                  Zone Name (Tamil) *\n                </Label>\n                <Input\n                  id=\"nameTamil\"\n                  value={formData.nameTamil}\n                  onChange={(e) => setFormData({ ...formData, nameTamil: e.target.value })}\n                  className=\"h-12 bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\"\n                  required\n                />\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"remark\" className=\"text-sm font-medium text-[#013A65]\">\n                Remark\n              </Label>\n              <Textarea\n                id=\"remark\"\n                value={formData.remark}\n                onChange={(e) => setFormData({ ...formData, remark: e.target.value })}\n                className=\"min-h-20 bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\"\n                placeholder=\"Enter any additional remarks...\"\n              />\n            </div>\n          </form>\n\n          <DialogFooter className=\"pt-4 border-t border-[#EDEEF0]\">\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={() => onOpenChange(false)}\n              disabled={loading}\n              className=\"border-[#EDEEF0] hover:bg-[#F8F8F8]\"\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={handleSubmit}\n              disabled={loading || !formData.nameEnglish.trim() || !formData.nameTamil.trim()}\n              className=\"bg-gradient-to-r from-[#F3B335] to-[#F3B335]/90 hover:from-[#F3B335]/90 hover:to-[#F3B335] text-[#013A65] font-medium shadow-md hover:shadow-lg transition-all duration-200\"\n            >\n              {loading ? (\n                <>\n                  <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                  Creating...\n                </>\n              ) : (\n                \"Create Zone\"\n              )}\n            </Button>\n          </DialogFooter>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","\"use client\"\n\nimport type React from \"react\"\n\nimport { useState, useEffect } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Dialog, DialogContent, DialogFooter, DialogHeader, DialogTitle } from \"@/components/ui/dialog\"\nimport { Loader2 } from \"lucide-react\"\nimport type { Zone } from \"@/services/masters-service\"\n\ninterface EditZoneDialogProps {\n  open: boolean\n  onOpenChange: (open: boolean) => void\n  zone: Zone\n  onSubmit: (data: Partial<Zone>) => Promise<void>\n}\n\nexport function EditZoneDialog({ open, onOpenChange, zone, onSubmit }: EditZoneDialogProps) {\n  const [formData, setFormData] = useState({\n    nameEnglish: \"\",\n    nameTamil: \"\",\n    remark: \"\",\n  })\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    if (zone) {\n      setFormData({\n        nameEnglish: zone.nameEnglish,\n        nameTamil: zone.nameTamil,\n        remark: zone.remark,\n      })\n    }\n  }, [zone])\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    if (!formData.nameEnglish.trim() || !formData.nameTamil.trim()) return\n\n    try {\n      setLoading(true)\n      await onSubmit(formData)\n    } catch (error) {\n      console.error(\"Failed to update zone:\", error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent\n        className=\"sm:max-w-[700px] max-h-[90vh] overflow-y-auto border-0 shadow-2xl bg-[#F8F8F8] backdrop-blur-sm\"\n        onPointerDownOutside={(e) => e.preventDefault()}\n        onEscapeKeyDown={(e) => e.preventDefault()}\n      >\n        <div className=\"absolute inset-0 bg-gradient-to-br from-[#F3B335]/10 to-[#013A65]/10 rounded-lg\"></div>\n        <div className=\"relative\">\n          <DialogHeader className=\"pb-6\">\n            <DialogTitle className=\"text-2xl font-bold bg-gradient-to-r from-[#013A65] to-[#F3B335] bg-clip-text text-transparent\">\n              Edit Zone\n            </DialogTitle>\n          </DialogHeader>\n\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"nameEnglish\" className=\"text-sm font-medium text-[#013A65]\">\n                  Zone Name (English) *\n                </Label>\n                <Input\n                  id=\"nameEnglish\"\n                  value={formData.nameEnglish}\n                  onChange={(e) => setFormData({ ...formData, nameEnglish: e.target.value })}\n                  className=\"h-12 bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\"\n                  required\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"nameTamil\" className=\"text-sm font-medium text-[#013A65]\">\n                  Zone Name (Tamil) *\n                </Label>\n                <Input\n                  id=\"nameTamil\"\n                  value={formData.nameTamil}\n                  onChange={(e) => setFormData({ ...formData, nameTamil: e.target.value })}\n                  className=\"h-12 bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\"\n                  required\n                />\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"remark\" className=\"text-sm font-medium text-[#013A65]\">\n                Remark\n              </Label>\n              <Textarea\n                id=\"remark\"\n                value={formData.remark}\n                onChange={(e) => setFormData({ ...formData, remark: e.target.value })}\n                className=\"min-h-20 bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\"\n                placeholder=\"Enter any additional remarks...\"\n              />\n            </div>\n          </form>\n\n          <DialogFooter className=\"pt-6 border-t border-[#EDEEF0]\">\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={() => onOpenChange(false)}\n              disabled={loading}\n              className=\"border-[#EDEEF0] hover:bg-[#EDEEF0]/50 text-[#013A65]\"\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={handleSubmit}\n              disabled={loading || !formData.nameEnglish.trim() || !formData.nameTamil.trim()}\n              className=\"bg-gradient-to-r from-[#013A65] to-[#F3B335] hover:from-[#013A65]/90 hover:to-[#F3B335]/90 text-white border-0 shadow-lg\"\n            >\n              {loading ? (\n                <>\n                  <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                  Updating...\n                </>\n              ) : (\n                \"Update Zone\"\n              )}\n            </Button>\n          </DialogFooter>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\nimport { Plus, Edit, Search, Loader2 } from \"lucide-react\"\nimport { MastersService, type Zone, type District } from \"@/services/masters-service\"\nimport { CreateDistrictDialog } from \"./create-district-dialog\"\nimport { EditDistrictDialog } from \"./edit-district-dialog\"\n\nexport function DistrictMaster() {\n  const [zones, setZones] = useState<Zone[]>([])\n  const [districts, setDistricts] = useState<District[]>([])\n  const [selectedZoneId, setSelectedZoneId] = useState<string>(\"\")\n  const [loading, setLoading] = useState(true)\n  const [districtsLoading, setDistrictsLoading] = useState(false)\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false)\n  const [editingDistrict, setEditingDistrict] = useState<District | null>(null)\n\n  useEffect(() => {\n    loadZones()\n  }, [])\n\n  useEffect(() => {\n    if (selectedZoneId) {\n      loadDistricts(selectedZoneId)\n    } else {\n      setDistricts([])\n    }\n  }, [selectedZoneId])\n\n  const loadZones = async () => {\n    try {\n      setLoading(true)\n      const data = await MastersService.getAllZones()\n      setZones(data)\n    } catch (error) {\n      console.error(\"Failed to load zones:\", error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const loadDistricts = async (zoneId: string) => {\n    try {\n      setDistrictsLoading(true)\n      const data = await MastersService.getDistrictsByZone(zoneId)\n      setDistricts(data)\n    } catch (error) {\n      console.error(\"Failed to load districts:\", error)\n    } finally {\n      setDistrictsLoading(false)\n    }\n  }\n\n  const handleCreateDistrict = async (districtData: Omit<District, \"id\" | \"createdAt\">) => {\n    try {\n      await MastersService.createDistrict(districtData)\n      if (selectedZoneId) {\n        await loadDistricts(selectedZoneId)\n      }\n      setIsCreateDialogOpen(false)\n    } catch (error) {\n      console.error(\"Failed to create district:\", error)\n    }\n  }\n\n  const handleEditDistrict = async (id: string, districtData: Partial<District>) => {\n    try {\n      await MastersService.updateDistrict(id, districtData)\n      if (selectedZoneId) {\n        await loadDistricts(selectedZoneId)\n      }\n      setEditingDistrict(null)\n    } catch (error) {\n      console.error(\"Failed to update district:\", error)\n    }\n  }\n\n  const filteredDistricts = districts.filter(\n    (district) =>\n      district.nameEnglish.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      district.nameTamil.includes(searchTerm) ||\n      district.remark.toLowerCase().includes(searchTerm.toLowerCase()),\n  )\n\n  const selectedZone = zones.find((zone) => zone.id === selectedZoneId)\n\n  return (\n    <div className=\"flex flex-col h-full bg-white rounded-lg border border-[#EDEEF0] shadow-sm overflow-hidden\">\n      {/* Header */}\n      <div className=\"flex-shrink-0 p-4 border-b border-[#EDEEF0] bg-gradient-to-r from-[#F8F8F8] to-[#EDEEF0]\">\n        <div className=\"flex items-center justify-between gap-4\">\n          <div className=\"flex items-center gap-4 flex-1\">\n            <div className=\"flex items-center gap-4\">\n              <Select value={selectedZoneId} onValueChange={setSelectedZoneId}>\n                <SelectTrigger className=\"w-72 h-9 bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\">\n                  <SelectValue placeholder=\"Select Zone\" />\n                </SelectTrigger>\n                <SelectContent className=\"bg-white\">\n                  {zones.map((zone) => (\n                    <SelectItem key={zone.id} value={zone.id}>\n                      {zone.nameEnglish} / {zone.nameTamil}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n\n              {selectedZoneId && (\n                <div className=\"relative flex-1 max-w-md\">\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-[#013A65]/60 h-4 w-4\" />\n                  <Input\n                    placeholder=\"Search districts...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"pl-10 h-9 bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\"\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n\n          {selectedZoneId && (\n            <Button\n              onClick={() => setIsCreateDialogOpen(true)}\n              className=\"bg-gradient-to-r from-[#F3B335] to-[#F3B335]/90 hover:from-[#F3B335]/90 hover:to-[#F3B335] text-[#013A65] font-medium shadow-md hover:shadow-lg transition-all duration-200 h-9\"\n            >\n              <Plus className=\"h-4 w-4 mr-2\" />\n              Create District\n            </Button>\n          )}\n        </div>\n      </div>\n\n      {/* Content */}\n      <div className=\"flex-1 overflow-auto\">\n        {loading ? (\n          <div className=\"flex items-center justify-center h-64\">\n            <div className=\"flex items-center gap-2 text-[#013A65]/70\">\n              <Loader2 className=\"h-5 w-5 animate-spin\" />\n              <span>Loading zones...</span>\n            </div>\n          </div>\n        ) : !selectedZoneId ? (\n          <div className=\"flex flex-col items-center justify-center h-64 text-center\">\n            <div className=\"w-16 h-16 bg-gradient-to-r from-[#013A65]/10 to-[#F3B335]/10 rounded-full flex items-center justify-center mb-4\">\n              <Search className=\"h-8 w-8 text-[#013A65]/60\" />\n            </div>\n            <h3 className=\"text-lg font-medium text-[#013A65] mb-2\">No zone selected</h3>\n            <p className=\"text-[#013A65]/70\">Please select a zone to view and manage districts.</p>\n          </div>\n        ) : districtsLoading ? (\n          <div className=\"flex items-center justify-center h-64\">\n            <div className=\"flex items-center gap-2 text-[#013A65]/70\">\n              <Loader2 className=\"h-5 w-5 animate-spin\" />\n              <span>Loading districts...</span>\n            </div>\n          </div>\n        ) : filteredDistricts.length === 0 ? (\n          <div className=\"flex flex-col items-center justify-center h-64 text-center\">\n            <div className=\"w-16 h-16 bg-gradient-to-r from-[#013A65]/10 to-[#F3B335]/10 rounded-full flex items-center justify-center mb-4\">\n              <Plus className=\"h-8 w-8 text-[#013A65]/60\" />\n            </div>\n            <h3 className=\"text-lg font-medium text-[#013A65] mb-2\">No districts found</h3>\n            <p className=\"text-[#013A65]/70 mb-4\">\n              {searchTerm\n                ? \"No districts match your search criteria.\"\n                : `No districts found for ${selectedZone?.nameEnglish}. Create the first district.`}\n            </p>\n            {!searchTerm && (\n              <Button\n                onClick={() => setIsCreateDialogOpen(true)}\n                className=\"bg-gradient-to-r from-[#F3B335] to-[#F3B335]/90 hover:from-[#F3B335]/90 hover:to-[#F3B335] text-[#013A65] font-medium\"\n              >\n                <Plus className=\"h-4 w-4 mr-2\" />\n                Create District\n              </Button>\n            )}\n          </div>\n        ) : (\n          <Table>\n            <TableHeader>\n              <TableRow className=\"bg-[#F3B335] hover:bg-[#F3B335]\">\n                <TableHead className=\"text-[#013A65] font-semibold\">English Name</TableHead>\n                <TableHead className=\"text-[#013A65] font-semibold\">Tamil Name</TableHead>\n                <TableHead className=\"text-[#013A65] font-semibold\">Zone</TableHead>\n                <TableHead className=\"text-[#013A65] font-semibold\">Remark</TableHead>\n                <TableHead className=\"text-[#013A65] font-semibold\">Created By</TableHead>\n                <TableHead className=\"text-[#013A65] font-semibold\">Created At</TableHead>\n                <TableHead className=\"text-[#013A65] font-semibold w-20\">Actions</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {filteredDistricts.map((district) => {\n                const zone = zones.find((z) => z.id === district.zoneId)\n                return (\n                  <TableRow key={district.id} className=\"hover:bg-[#F8F8F8]/50\">\n                    <TableCell className=\"font-medium text-[#013A65]\">{district.nameEnglish}</TableCell>\n                    <TableCell className=\"text-[#013A65]/80\">{district.nameTamil}</TableCell>\n                    <TableCell className=\"text-[#013A65]/70\">{zone?.nameEnglish}</TableCell>\n                    <TableCell className=\"text-[#013A65]/70 max-w-xs truncate\" title={district.remark}>\n                      {district.remark}\n                    </TableCell>\n                    <TableCell className=\"text-[#013A65]/70\">{district.createdBy}</TableCell>\n                    <TableCell className=\"text-[#013A65]/70\">{district.createdAt}</TableCell>\n                    <TableCell>\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => setEditingDistrict(district)}\n                        className=\"h-8 w-8 p-0 border-[#EDEEF0] hover:bg-[#F3B335]/10 hover:border-[#F3B335]/30\"\n                      >\n                        <Edit className=\"h-3 w-3\" />\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                )\n              })}\n            </TableBody>\n          </Table>\n        )}\n      </div>\n\n      {/* Dialogs */}\n      {selectedZoneId && (\n        <CreateDistrictDialog\n          open={isCreateDialogOpen}\n          onOpenChange={setIsCreateDialogOpen}\n          zoneId={selectedZoneId}\n          zoneName={selectedZone?.nameEnglish || \"\"}\n          onSubmit={handleCreateDistrict}\n        />\n      )}\n\n      {editingDistrict && (\n        <EditDistrictDialog\n          open={!!editingDistrict}\n          onOpenChange={(open) => !open && setEditingDistrict(null)}\n          district={editingDistrict}\n          zoneName={zones.find((z) => z.id === editingDistrict.zoneId)?.nameEnglish || \"\"}\n          onSubmit={(data) => handleEditDistrict(editingDistrict.id, data)}\n        />\n      )}\n    </div>\n  )\n}\n","\"use client\"\n\nimport type React from \"react\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Dialog, DialogContent, DialogFooter, DialogHeader, DialogTitle } from \"@/components/ui/dialog\"\nimport { Loader2 } from \"lucide-react\"\nimport type { District } from \"@/services/masters-service\"\n\ninterface CreateDistrictDialogProps {\n  open: boolean\n  onOpenChange: (open: boolean) => void\n  zoneId: string\n  zoneName: string\n  onSubmit: (data: Omit<District, \"id\" | \"createdAt\">) => Promise<void>\n}\n\nexport function CreateDistrictDialog({ open, onOpenChange, zoneId, zoneName, onSubmit }: CreateDistrictDialogProps) {\n  const [formData, setFormData] = useState({\n    nameEnglish: \"\",\n    nameTamil: \"\",\n    remark: \"\",\n    createdBy: \"Admin User\",\n  })\n  const [loading, setLoading] = useState(false)\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    if (!formData.nameEnglish.trim() || !formData.nameTamil.trim()) return\n\n    try {\n      setLoading(true)\n      await onSubmit({\n        ...formData,\n        zoneId,\n      })\n      setFormData({\n        nameEnglish: \"\",\n        nameTamil: \"\",\n        remark: \"\",\n        createdBy: \"Admin User\",\n      })\n    } catch (error) {\n      console.error(\"Failed to create district:\", error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent\n        className=\"sm:max-w-[700px] max-h-[90vh] overflow-y-auto border-0 shadow-2xl bg-[#F8F8F8] backdrop-blur-sm\"\n        onPointerDownOutside={(e) => e.preventDefault()}\n        onEscapeKeyDown={(e) => e.preventDefault()}\n      >\n        <div className=\"absolute inset-0 bg-gradient-to-br from-[#F3B335]/10 to-[#013A65]/10 rounded-lg\"></div>\n        <div className=\"relative\">\n          <DialogHeader className=\"pb-6\">\n            <DialogTitle className=\"text-2xl font-bold bg-gradient-to-r from-[#013A65] to-[#F3B335] bg-clip-text text-transparent\">\n              Create New District\n            </DialogTitle>\n            <p className=\"text-sm text-[#013A65]/70 mt-1\">Zone: {zoneName}</p>\n          </DialogHeader>\n\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"nameEnglish\" className=\"text-sm font-medium text-[#013A65]\">\n                  District Name (English) *\n                </Label>\n                <Input\n                  id=\"nameEnglish\"\n                  value={formData.nameEnglish}\n                  onChange={(e) => setFormData({ ...formData, nameEnglish: e.target.value })}\n                  className=\"h-12 bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\"\n                  required\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"nameTamil\" className=\"text-sm font-medium text-[#013A65]\">\n                  District Name (Tamil) *\n                </Label>\n                <Input\n                  id=\"nameTamil\"\n                  value={formData.nameTamil}\n                  onChange={(e) => setFormData({ ...formData, nameTamil: e.target.value })}\n                  className=\"h-12 bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\"\n                  required\n                />\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"remark\" className=\"text-sm font-medium text-[#013A65]\">\n                Remark\n              </Label>\n              <Textarea\n                id=\"remark\"\n                value={formData.remark}\n                onChange={(e) => setFormData({ ...formData, remark: e.target.value })}\n                className=\"min-h-20 bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\"\n                placeholder=\"Enter any additional remarks...\"\n              />\n            </div>\n          </form>\n\n          <DialogFooter className=\"pt-6 border-t border-[#EDEEF0]\">\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={() => onOpenChange(false)}\n              disabled={loading}\n              className=\"border-[#EDEEF0] hover:bg-[#EDEEF0]/50 text-[#013A65]\"\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={handleSubmit}\n              disabled={loading || !formData.nameEnglish.trim() || !formData.nameTamil.trim()}\n              className=\"bg-gradient-to-r from-[#013A65] to-[#F3B335] hover:from-[#013A65]/90 hover:to-[#F3B335]/90 text-white border-0 shadow-lg\"\n            >\n              {loading ? (\n                <>\n                  <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                  Creating...\n                </>\n              ) : (\n                \"Create District\"\n              )}\n            </Button>\n          </DialogFooter>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","\"use client\"\n\nimport type React from \"react\"\n\nimport { useState, useEffect } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Dialog, DialogContent, DialogFooter, DialogHeader, DialogTitle } from \"@/components/ui/dialog\"\nimport { Loader2 } from \"lucide-react\"\nimport type { District } from \"@/services/masters-service\"\n\ninterface EditDistrictDialogProps {\n  open: boolean\n  onOpenChange: (open: boolean) => void\n  district: District\n  zoneName: string\n  onSubmit: (data: Partial<District>) => Promise<void>\n}\n\nexport function EditDistrictDialog({ open, onOpenChange, district, zoneName, onSubmit }: EditDistrictDialogProps) {\n  const [formData, setFormData] = useState({\n    nameEnglish: \"\",\n    nameTamil: \"\",\n    remark: \"\",\n  })\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    if (district) {\n      setFormData({\n        nameEnglish: district.nameEnglish,\n        nameTamil: district.nameTamil,\n        remark: district.remark,\n      })\n    }\n  }, [district])\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    if (!formData.nameEnglish.trim() || !formData.nameTamil.trim()) return\n\n    try {\n      setLoading(true)\n      await onSubmit(formData)\n    } catch (error) {\n      console.error(\"Failed to update district:\", error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent\n        className=\"sm:max-w-[700px] max-h-[90vh] overflow-y-auto border-0 shadow-2xl bg-[#F8F8F8] backdrop-blur-sm\"\n        onPointerDownOutside={(e) => e.preventDefault()}\n        onEscapeKeyDown={(e) => e.preventDefault()}\n      >\n        <div className=\"absolute inset-0 bg-gradient-to-br from-[#F3B335]/10 to-[#013A65]/10 rounded-lg\"></div>\n        <div className=\"relative\">\n          <DialogHeader className=\"pb-6\">\n            <DialogTitle className=\"text-2xl font-bold bg-gradient-to-r from-[#013A65] to-[#F3B335] bg-clip-text text-transparent\">\n              Edit District\n            </DialogTitle>\n            <p className=\"text-sm text-[#013A65]/70 mt-1\">Zone: {zoneName}</p>\n          </DialogHeader>\n\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"nameEnglish\" className=\"text-sm font-medium text-[#013A65]\">\n                  District Name (English) *\n                </Label>\n                <Input\n                  id=\"nameEnglish\"\n                  value={formData.nameEnglish}\n                  onChange={(e) => setFormData({ ...formData, nameEnglish: e.target.value })}\n                  className=\"h-12 bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\"\n                  required\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"nameTamil\" className=\"text-sm font-medium text-[#013A65]\">\n                  District Name (Tamil) *\n                </Label>\n                <Input\n                  id=\"nameTamil\"\n                  value={formData.nameTamil}\n                  onChange={(e) => setFormData({ ...formData, nameTamil: e.target.value })}\n                  className=\"h-12 bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\"\n                  required\n                />\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"remark\" className=\"text-sm font-medium text-[#013A65]\">\n                Remark\n              </Label>\n              <Textarea\n                id=\"remark\"\n                value={formData.remark}\n                onChange={(e) => setFormData({ ...formData, remark: e.target.value })}\n                className=\"min-h-20 bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\"\n                placeholder=\"Enter any additional remarks...\"\n              />\n            </div>\n          </form>\n\n          <DialogFooter className=\"pt-6 border-t border-[#EDEEF0]\">\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={() => onOpenChange(false)}\n              disabled={loading}\n              className=\"border-[#EDEEF0] hover:bg-[#EDEEF0]/50 text-[#013A65]\"\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={handleSubmit}\n              disabled={loading || !formData.nameEnglish.trim() || !formData.nameTamil.trim()}\n              className=\"bg-gradient-to-r from-[#013A65] to-[#F3B335] hover:from-[#013A65]/90 hover:to-[#F3B335]/90 text-white border-0 shadow-lg\"\n            >\n              {loading ? (\n                <>\n                  <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                  Updating...\n                </>\n              ) : (\n                \"Update District\"\n              )}\n            </Button>\n          </DialogFooter>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","\"use client\"\n\nimport type React from \"react\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Dialog, DialogContent, DialogFooter, DialogHeader, DialogTitle } from \"@/components/ui/dialog\"\nimport { Loader2 } from \"lucide-react\"\nimport type { TownPanchayat } from \"@/services/masters-service\"\n\ninterface CreateTownPanchayatDialogProps {\n  open: boolean\n  onOpenChange: (open: boolean) => void\n  districtId: string\n  districtName: string\n  zoneName: string\n  onSubmit: (data: Omit<TownPanchayat, \"id\" | \"createdAt\">) => Promise<void>\n}\n\nexport function CreateTownPanchayatDialog({\n  open,\n  onOpenChange,\n  districtId,\n  districtName,\n  zoneName,\n  onSubmit,\n}: CreateTownPanchayatDialogProps) {\n  const [formData, setFormData] = useState({\n    nameEnglish: \"\",\n    nameTamil: \"\",\n    remark: \"\",\n    createdBy: \"Admin User\",\n  })\n  const [loading, setLoading] = useState(false)\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    if (!formData.nameEnglish.trim() || !formData.nameTamil.trim()) return\n\n    try {\n      setLoading(true)\n      await onSubmit({\n        ...formData,\n        districtId,\n      })\n      setFormData({\n        nameEnglish: \"\",\n        nameTamil: \"\",\n        remark: \"\",\n        createdBy: \"Admin User\",\n      })\n    } catch (error) {\n      console.error(\"Failed to create town panchayat:\", error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent\n        className=\"sm:max-w-md bg-gradient-to-br from-white via-[#F8F8F8] to-[#EDEEF0] border-[#013A65]/20\"\n        onPointerDownOutside={(e) => e.preventDefault()}\n        onEscapeKeyDown={(e) => e.preventDefault()}\n      >\n        <DialogHeader className=\"pb-4 border-b border-[#EDEEF0]\">\n          <DialogTitle className=\"text-xl font-bold bg-gradient-to-r from-[#013A65] to-[#F3B335] bg-clip-text text-transparent\">\n            Create New Town Panchayat\n          </DialogTitle>\n          <div className=\"text-sm text-[#013A65]/70 mt-1 space-y-1\">\n            <p>Zone: {zoneName}</p>\n            <p>District: {districtName}</p>\n          </div>\n        </DialogHeader>\n\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"nameEnglish\" className=\"text-sm font-medium text-[#013A65]\">\n                Town Panchayat Name (English) *\n              </Label>\n              <Input\n                id=\"nameEnglish\"\n                value={formData.nameEnglish}\n                onChange={(e) => setFormData({ ...formData, nameEnglish: e.target.value })}\n                className=\"h-12 border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\"\n                required\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"nameTamil\" className=\"text-sm font-medium text-[#013A65]\">\n                Town Panchayat Name (Tamil) *\n              </Label>\n              <Input\n                id=\"nameTamil\"\n                value={formData.nameTamil}\n                onChange={(e) => setFormData({ ...formData, nameTamil: e.target.value })}\n                className=\"h-12 border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\"\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"remark\" className=\"text-sm font-medium text-[#013A65]\">\n              Remark\n            </Label>\n            <Textarea\n              id=\"remark\"\n              value={formData.remark}\n              onChange={(e) => setFormData({ ...formData, remark: e.target.value })}\n              className=\"min-h-20 border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\"\n              placeholder=\"Enter any additional remarks...\"\n            />\n          </div>\n        </form>\n\n        <DialogFooter className=\"pt-4 border-t border-[#EDEEF0]\">\n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            onClick={() => onOpenChange(false)}\n            disabled={loading}\n            className=\"border-[#EDEEF0] hover:bg-[#F8F8F8]\"\n          >\n            Cancel\n          </Button>\n          <Button\n            onClick={handleSubmit}\n            disabled={loading || !formData.nameEnglish.trim() || !formData.nameTamil.trim()}\n            className=\"bg-gradient-to-r from-[#F3B335] to-[#F3B335]/90 hover:from-[#F3B335]/90 hover:to-[#F3B335] text-[#013A65] font-medium shadow-md hover:shadow-lg transition-all duration-200\"\n          >\n            {loading ? (\n              <>\n                <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                Creating...\n              </>\n            ) : (\n              \"Create Town Panchayat\"\n            )}\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","\"use client\"\n\nimport type React from \"react\"\n\nimport { useState, useEffect } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Dialog, DialogContent, DialogFooter, DialogHeader, DialogTitle } from \"@/components/ui/dialog\"\nimport { Loader2 } from \"lucide-react\"\nimport type { TownPanchayat } from \"@/services/masters-service\"\n\ninterface EditTownPanchayatDialogProps {\n  open: boolean\n  onOpenChange: (open: boolean) => void\n  townPanchayat: TownPanchayat\n  districtName: string\n  zoneName: string\n  onSubmit: (data: Partial<TownPanchayat>) => Promise<void>\n}\n\nexport function EditTownPanchayatDialog({\n  open,\n  onOpenChange,\n  townPanchayat,\n  districtName,\n  zoneName,\n  onSubmit,\n}: EditTownPanchayatDialogProps) {\n  const [formData, setFormData] = useState({\n    nameEnglish: \"\",\n    nameTamil: \"\",\n    remark: \"\",\n  })\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    if (townPanchayat) {\n      setFormData({\n        nameEnglish: townPanchayat.nameEnglish,\n        nameTamil: townPanchayat.nameTamil,\n        remark: townPanchayat.remark,\n      })\n    }\n  }, [townPanchayat])\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    if (!formData.nameEnglish.trim() || !formData.nameTamil.trim()) return\n\n    try {\n      setLoading(true)\n      await onSubmit(formData)\n    } catch (error) {\n      console.error(\"Failed to update town panchayat:\", error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent\n        className=\"sm:max-w-md bg-gradient-to-br from-white via-[#F8F8F8] to-[#EDEEF0] border-[#013A65]/20\"\n        onPointerDownOutside={(e) => e.preventDefault()}\n        onEscapeKeyDown={(e) => e.preventDefault()}\n      >\n        <DialogHeader className=\"pb-4 border-b border-[#EDEEF0]\">\n          <DialogTitle className=\"text-xl font-bold bg-gradient-to-r from-[#013A65] to-[#F3B335] bg-clip-text text-transparent\">\n            Edit Town Panchayat\n          </DialogTitle>\n          <div className=\"text-sm text-[#013A65]/70 mt-1 space-y-1\">\n            <p>Zone: {zoneName}</p>\n            <p>District: {districtName}</p>\n          </div>\n        </DialogHeader>\n\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"nameEnglish\" className=\"text-sm font-medium text-[#013A65]\">\n                Town Panchayat Name (English) *\n              </Label>\n              <Input\n                id=\"nameEnglish\"\n                value={formData.nameEnglish}\n                onChange={(e) => setFormData({ ...formData, nameEnglish: e.target.value })}\n                className=\"h-12 border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\"\n                required\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"nameTamil\" className=\"text-sm font-medium text-[#013A65]\">\n                Town Panchayat Name (Tamil) *\n              </Label>\n              <Input\n                id=\"nameTamil\"\n                value={formData.nameTamil}\n                onChange={(e) => setFormData({ ...formData, nameTamil: e.target.value })}\n                className=\"h-12 border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\"\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"remark\" className=\"text-sm font-medium text-[#013A65]\">\n              Remark\n            </Label>\n            <Textarea\n              id=\"remark\"\n              value={formData.remark}\n              onChange={(e) => setFormData({ ...formData, remark: e.target.value })}\n              className=\"min-h-20 border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\"\n              placeholder=\"Enter any additional remarks...\"\n            />\n          </div>\n        </form>\n\n        <DialogFooter className=\"pt-4 border-t border-[#EDEEF0]\">\n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            onClick={() => onOpenChange(false)}\n            disabled={loading}\n            className=\"border-[#EDEEF0] hover:bg-[#F8F8F8]\"\n          >\n            Cancel\n          </Button>\n          <Button\n            onClick={handleSubmit}\n            disabled={loading || !formData.nameEnglish.trim() || !formData.nameTamil.trim()}\n            className=\"bg-gradient-to-r from-[#F3B335] to-[#F3B335]/90 hover:from-[#F3B335]/90 hover:to-[#F3B335] text-[#013A65] font-medium shadow-md hover:shadow-lg transition-all duration-200\"\n          >\n            {loading ? (\n              <>\n                <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                Updating...\n              </>\n            ) : (\n              \"Update Town Panchayat\"\n            )}\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\nimport { Plus, Edit, Search, Loader2 } from \"lucide-react\"\nimport { MastersService, type Zone, type District, type TownPanchayat } from \"@/services/masters-service\"\nimport { CreateTownPanchayatDialog } from \"./create-town-panchayat-dialog\"\nimport { EditTownPanchayatDialog } from \"./edit-town-panchayat-dialog\"\n\nexport function TownPanchayatMaster() {\n  const [zones, setZones] = useState<Zone[]>([])\n  const [districts, setDistricts] = useState<District[]>([])\n  const [townPanchayats, setTownPanchayats] = useState<TownPanchayat[]>([])\n  const [selectedZoneId, setSelectedZoneId] = useState<string>(\"\")\n  const [selectedDistrictId, setSelectedDistrictId] = useState<string>(\"\")\n  const [loading, setLoading] = useState(true)\n  const [districtsLoading, setDistrictsLoading] = useState(false)\n  const [townPanchayatsLoading, setTownPanchayatsLoading] = useState(false)\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false)\n  const [editingTownPanchayat, setEditingTownPanchayat] = useState<TownPanchayat | null>(null)\n\n  useEffect(() => {\n    loadZones()\n  }, [])\n\n  useEffect(() => {\n    if (selectedZoneId) {\n      loadDistricts(selectedZoneId)\n      setSelectedDistrictId(\"\")\n      setTownPanchayats([])\n    } else {\n      setDistricts([])\n      setSelectedDistrictId(\"\")\n      setTownPanchayats([])\n    }\n  }, [selectedZoneId])\n\n  useEffect(() => {\n    if (selectedDistrictId) {\n      loadTownPanchayats(selectedDistrictId)\n    } else {\n      setTownPanchayats([])\n    }\n  }, [selectedDistrictId])\n\n  const loadZones = async () => {\n    try {\n      setLoading(true)\n      const data = await MastersService.getAllZones()\n      setZones(data)\n    } catch (error) {\n      console.error(\"Failed to load zones:\", error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const loadDistricts = async (zoneId: string) => {\n    try {\n      setDistrictsLoading(true)\n      const data = await MastersService.getDistrictsByZone(zoneId)\n      setDistricts(data)\n    } catch (error) {\n      console.error(\"Failed to load districts:\", error)\n    } finally {\n      setDistrictsLoading(false)\n    }\n  }\n\n  const loadTownPanchayats = async (districtId: string) => {\n    try {\n      setTownPanchayatsLoading(true)\n      const data = await MastersService.getTownPanchayatsByDistrict(districtId)\n      setTownPanchayats(data)\n    } catch (error) {\n      console.error(\"Failed to load town panchayats:\", error)\n    } finally {\n      setTownPanchayatsLoading(false)\n    }\n  }\n\n  const handleCreateTownPanchayat = async (townPanchayatData: Omit<TownPanchayat, \"id\" | \"createdAt\">) => {\n    try {\n      await MastersService.createTownPanchayat(townPanchayatData)\n      if (selectedDistrictId) {\n        await loadTownPanchayats(selectedDistrictId)\n      }\n      setIsCreateDialogOpen(false)\n    } catch (error) {\n      console.error(\"Failed to create town panchayat:\", error)\n    }\n  }\n\n  const handleEditTownPanchayat = async (id: string, townPanchayatData: Partial<TownPanchayat>) => {\n    try {\n      await MastersService.updateTownPanchayat(id, townPanchayatData)\n      if (selectedDistrictId) {\n        await loadTownPanchayats(selectedDistrictId)\n      }\n      setEditingTownPanchayat(null)\n    } catch (error) {\n      console.error(\"Failed to update town panchayat:\", error)\n    }\n  }\n\n  const filteredTownPanchayats = townPanchayats.filter(\n    (tp) =>\n      tp.nameEnglish.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      tp.nameTamil.includes(searchTerm) ||\n      tp.remark.toLowerCase().includes(searchTerm.toLowerCase()),\n  )\n\n  const selectedZone = zones.find((zone) => zone.id === selectedZoneId)\n  const selectedDistrict = districts.find((district) => district.id === selectedDistrictId)\n\n  return (\n    <div className=\"flex flex-col h-full bg-white rounded-lg border border-[#EDEEF0] shadow-sm overflow-hidden\">\n      {/* Header */}\n      <div className=\"flex-shrink-0 p-4 border-b border-[#EDEEF0] bg-gradient-to-r from-[#F8F8F8] to-[#EDEEF0]\">\n        <div className=\"flex items-center justify-between gap-4\">\n          <div className=\"flex items-center gap-4 flex-1\">\n            <div className=\"flex items-center gap-4\">\n              <Select value={selectedZoneId} onValueChange={setSelectedZoneId}>\n                <SelectTrigger className=\"w-64 h-9 bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\">\n                  <SelectValue placeholder=\"Select Zone\" />\n                </SelectTrigger>\n                <SelectContent className=\"bg-white\">\n                  {zones.map((zone) => (\n                    <SelectItem key={zone.id} value={zone.id}>\n                      {zone.nameEnglish} / {zone.nameTamil}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n\n              <Select value={selectedDistrictId} onValueChange={setSelectedDistrictId} disabled={!selectedZoneId}>\n                <SelectTrigger className=\"w-64 h-9 bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\">\n                  <SelectValue placeholder=\"Select District\" />\n                </SelectTrigger>\n                <SelectContent className=\"bg-white\">\n                  {districts.map((district) => (\n                    <SelectItem key={district.id} value={district.id}>\n                      {district.nameEnglish} / {district.nameTamil}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n\n              {selectedDistrictId && (\n                <div className=\"relative flex-1 max-w-md\">\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-[#013A65]/60 h-4 w-4\" />\n                  <Input\n                    placeholder=\"Search town panchayats...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"pl-10 h-9 bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\"\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n\n          {selectedDistrictId && (\n            <Button\n              onClick={() => setIsCreateDialogOpen(true)}\n              className=\"bg-gradient-to-r from-[#F3B335] to-[#F3B335]/90 hover:from-[#F3B335]/90 hover:to-[#F3B335] text-[#013A65] font-medium shadow-md hover:shadow-lg transition-all duration-200 h-9\"\n            >\n              <Plus className=\"h-4 w-4 mr-2\" />\n              Create Town Panchayat\n            </Button>\n          )}\n        </div>\n      </div>\n\n      {/* Content */}\n      <div className=\"flex-1 overflow-auto\">\n        {loading ? (\n          <div className=\"flex items-center justify-center h-64\">\n            <div className=\"flex items-center gap-2 text-[#013A65]/70\">\n              <Loader2 className=\"h-5 w-5 animate-spin\" />\n              <span>Loading zones...</span>\n            </div>\n          </div>\n        ) : !selectedZoneId ? (\n          <div className=\"flex flex-col items-center justify-center h-64 text-center\">\n            <div className=\"w-16 h-16 bg-gradient-to-r from-[#013A65]/10 to-[#F3B335]/10 rounded-full flex items-center justify-center mb-4\">\n              <Search className=\"h-8 w-8 text-[#013A65]/60\" />\n            </div>\n            <h3 className=\"text-lg font-medium text-[#013A65] mb-2\">No zone selected</h3>\n            <p className=\"text-[#013A65]/70\">Please select a zone and district to view and manage town panchayats.</p>\n          </div>\n        ) : !selectedDistrictId ? (\n          <div className=\"flex flex-col items-center justify-center h-64 text-center\">\n            <div className=\"w-16 h-16 bg-gradient-to-r from-[#013A65]/10 to-[#F3B335]/10 rounded-full flex items-center justify-center mb-4\">\n              <Search className=\"h-8 w-8 text-[#013A65]/60\" />\n            </div>\n            <h3 className=\"text-lg font-medium text-[#013A65] mb-2\">No district selected</h3>\n            <p className=\"text-[#013A65]/70\">Please select a district to view and manage town panchayats.</p>\n          </div>\n        ) : townPanchayatsLoading ? (\n          <div className=\"flex items-center justify-center h-64\">\n            <div className=\"flex items-center gap-2 text-[#013A65]/70\">\n              <Loader2 className=\"h-5 w-5 animate-spin\" />\n              <span>Loading town panchayats...</span>\n            </div>\n          </div>\n        ) : filteredTownPanchayats.length === 0 ? (\n          <div className=\"flex flex-col items-center justify-center h-64 text-center\">\n            <div className=\"w-16 h-16 bg-gradient-to-r from-[#013A65]/10 to-[#F3B335]/10 rounded-full flex items-center justify-center mb-4\">\n              <Plus className=\"h-8 w-8 text-[#013A65]/60\" />\n            </div>\n            <h3 className=\"text-lg font-medium text-[#013A65] mb-2\">No town panchayats found</h3>\n            <p className=\"text-[#013A65]/70 mb-4\">\n              {searchTerm\n                ? \"No town panchayats match your search criteria.\"\n                : `No town panchayats found for ${selectedDistrict?.nameEnglish}. Create the first town panchayat.`}\n            </p>\n            {!searchTerm && (\n              <Button\n                onClick={() => setIsCreateDialogOpen(true)}\n                className=\"bg-gradient-to-r from-[#F3B335] to-[#F3B335]/90 hover:from-[#F3B335]/90 hover:to-[#F3B335] text-[#013A65] font-medium\"\n              >\n                <Plus className=\"h-4 w-4 mr-2\" />\n                Create Town Panchayat\n              </Button>\n            )}\n          </div>\n        ) : (\n          <Table>\n            <TableHeader>\n              <TableRow className=\"bg-[#F3B335] hover:bg-[#F3B335]\">\n                <TableHead className=\"text-[#013A65] font-semibold\">English Name</TableHead>\n                <TableHead className=\"text-[#013A65] font-semibold\">Tamil Name</TableHead>\n                <TableHead className=\"text-[#013A65] font-semibold\">District</TableHead>\n                <TableHead className=\"text-[#013A65] font-semibold\">Zone</TableHead>\n                <TableHead className=\"text-[#013A65] font-semibold\">Remark</TableHead>\n                <TableHead className=\"text-[#013A65] font-semibold\">Created By</TableHead>\n                <TableHead className=\"text-[#013A65] font-semibold\">Created At</TableHead>\n                <TableHead className=\"text-[#013A65] font-semibold w-20\">Actions</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {filteredTownPanchayats.map((townPanchayat) => {\n                const district = districts.find((d) => d.id === townPanchayat.districtId)\n                const zone = zones.find((z) => z.id === district?.zoneId)\n                return (\n                  <TableRow key={townPanchayat.id} className=\"hover:bg-[#F8F8F8]/50\">\n                    <TableCell className=\"font-medium text-[#013A65]\">{townPanchayat.nameEnglish}</TableCell>\n                    <TableCell className=\"text-[#013A65]/80\">{townPanchayat.nameTamil}</TableCell>\n                    <TableCell className=\"text-[#013A65]/70\">{district?.nameEnglish}</TableCell>\n                    <TableCell className=\"text-[#013A65]/70\">{zone?.nameEnglish}</TableCell>\n                    <TableCell className=\"text-[#013A65]/70 max-w-xs truncate\" title={townPanchayat.remark}>\n                      {townPanchayat.remark}\n                    </TableCell>\n                    <TableCell className=\"text-[#013A65]/70\">{townPanchayat.createdBy}</TableCell>\n                    <TableCell className=\"text-[#013A65]/70\">{townPanchayat.createdAt}</TableCell>\n                    <TableCell>\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => setEditingTownPanchayat(townPanchayat)}\n                        className=\"h-8 w-8 p-0 border-[#EDEEF0] hover:bg-[#F3B335]/10 hover:border-[#F3B335]/30\"\n                      >\n                        <Edit className=\"h-3 w-3\" />\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                )\n              })}\n            </TableBody>\n          </Table>\n        )}\n      </div>\n\n      {/* Dialogs */}\n      {selectedDistrictId && (\n        <CreateTownPanchayatDialog\n          open={isCreateDialogOpen}\n          onOpenChange={setIsCreateDialogOpen}\n          districtId={selectedDistrictId}\n          districtName={selectedDistrict?.nameEnglish || \"\"}\n          zoneName={selectedZone?.nameEnglish || \"\"}\n          onSubmit={handleCreateTownPanchayat}\n        />\n      )}\n\n      {editingTownPanchayat && (\n        <EditTownPanchayatDialog\n          open={!!editingTownPanchayat}\n          onOpenChange={(open) => !open && setEditingTownPanchayat(null)}\n          townPanchayat={editingTownPanchayat}\n          districtName={districts.find((d) => d.id === editingTownPanchayat.districtId)?.nameEnglish || \"\"}\n          zoneName={\n            zones.find((z) => z.id === districts.find((d) => d.id === editingTownPanchayat.districtId)?.zoneId)\n              ?.nameEnglish || \"\"\n          }\n          onSubmit={(data) => handleEditTownPanchayat(editingTownPanchayat.id, data)}\n        />\n      )}\n    </div>\n  )\n}\n","\"use client\"\n\nimport type React from \"react\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Dialog, DialogContent, DialogFooter, DialogHeader, DialogTitle } from \"@/components/ui/dialog\"\nimport { Loader2 } from \"lucide-react\"\nimport type { Ward } from \"@/services/masters-service\"\n\ninterface CreateWardDialogProps {\n  open: boolean\n  onOpenChange: (open: boolean) => void\n  townPanchayatId: string\n  townPanchayatName: string\n  districtName: string\n  zoneName: string\n  onSubmit: (data: Omit<Ward, \"id\" | \"createdAt\">) => Promise<void>\n}\n\nexport function CreateWardDialog({\n  open,\n  onOpenChange,\n  townPanchayatId,\n  townPanchayatName,\n  districtName,\n  zoneName,\n  onSubmit,\n}: CreateWardDialogProps) {\n  const [formData, setFormData] = useState({\n    nameEnglish: \"\",\n    nameTamil: \"\",\n    remark: \"\",\n    createdBy: \"Admin User\",\n  })\n  const [loading, setLoading] = useState(false)\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    if (!formData.nameEnglish.trim() || !formData.nameTamil.trim()) return\n\n    try {\n      setLoading(true)\n      await onSubmit({\n        ...formData,\n        townPanchayatId,\n      })\n      setFormData({\n        nameEnglish: \"\",\n        nameTamil: \"\",\n        remark: \"\",\n        createdBy: \"Admin User\",\n      })\n    } catch (error) {\n      console.error(\"Failed to create ward:\", error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent\n        className=\"sm:max-w-md bg-gradient-to-br from-white via-[#F8F8F8] to-[#EDEEF0] border-[#013A65]/20\"\n        onPointerDownOutside={(e) => e.preventDefault()}\n        onEscapeKeyDown={(e) => e.preventDefault()}\n      >\n        <DialogHeader className=\"pb-4 border-b border-[#EDEEF0]\">\n          <DialogTitle className=\"text-xl font-bold bg-gradient-to-r from-[#013A65] to-[#F3B335] bg-clip-text text-transparent\">\n            Create New Ward\n          </DialogTitle>\n          <div className=\"text-sm text-[#013A65]/70 mt-1 space-y-1\">\n            <p>Zone: {zoneName}</p>\n            <p>District: {districtName}</p>\n            <p>Town Panchayat: {townPanchayatName}</p>\n          </div>\n        </DialogHeader>\n\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"nameEnglish\" className=\"text-sm font-medium text-[#013A65]\">\n                Ward Name (English) *\n              </Label>\n              <Input\n                id=\"nameEnglish\"\n                value={formData.nameEnglish}\n                onChange={(e) => setFormData({ ...formData, nameEnglish: e.target.value })}\n                className=\"h-12 border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\"\n                required\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"nameTamil\" className=\"text-sm font-medium text-[#013A65]\">\n                Ward Name (Tamil) *\n              </Label>\n              <Input\n                id=\"nameTamil\"\n                value={formData.nameTamil}\n                onChange={(e) => setFormData({ ...formData, nameTamil: e.target.value })}\n                className=\"h-12 border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\"\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"remark\" className=\"text-sm font-medium text-[#013A65]\">\n              Remark\n            </Label>\n            <Textarea\n              id=\"remark\"\n              value={formData.remark}\n              onChange={(e) => setFormData({ ...formData, remark: e.target.value })}\n              className=\"min-h-20 border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\"\n              placeholder=\"Enter any additional remarks...\"\n            />\n          </div>\n        </form>\n\n        <DialogFooter className=\"pt-4 border-t border-[#EDEEF0]\">\n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            onClick={() => onOpenChange(false)}\n            disabled={loading}\n            className=\"border-[#EDEEF0] hover:bg-[#F8F8F8]\"\n          >\n            Cancel\n          </Button>\n          <Button\n            onClick={handleSubmit}\n            disabled={loading || !formData.nameEnglish.trim() || !formData.nameTamil.trim()}\n            className=\"bg-gradient-to-r from-[#F3B335] to-[#F3B335]/90 hover:from-[#F3B335]/90 hover:to-[#F3B335] text-[#013A65] font-medium shadow-md hover:shadow-lg transition-all duration-200\"\n          >\n            {loading ? (\n              <>\n                <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                Creating...\n              </>\n            ) : (\n              \"Create Ward\"\n            )}\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","\"use client\"\n\nimport type React from \"react\"\n\nimport { useState, useEffect } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Dialog, DialogContent, DialogFooter, DialogHeader, DialogTitle } from \"@/components/ui/dialog\"\nimport { Loader2 } from \"lucide-react\"\nimport type { Ward } from \"@/services/masters-service\"\n\ninterface EditWardDialogProps {\n  open: boolean\n  onOpenChange: (open: boolean) => void\n  ward: Ward\n  townPanchayatName: string\n  districtName: string\n  zoneName: string\n  onSubmit: (data: Partial<Ward>) => Promise<void>\n}\n\nexport function EditWardDialog({\n  open,\n  onOpenChange,\n  ward,\n  townPanchayatName,\n  districtName,\n  zoneName,\n  onSubmit,\n}: EditWardDialogProps) {\n  const [formData, setFormData] = useState({\n    nameEnglish: \"\",\n    nameTamil: \"\",\n    remark: \"\",\n  })\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    if (ward) {\n      setFormData({\n        nameEnglish: ward.nameEnglish,\n        nameTamil: ward.nameTamil,\n        remark: ward.remark,\n      })\n    }\n  }, [ward])\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    if (!formData.nameEnglish.trim() || !formData.nameTamil.trim()) return\n\n    try {\n      setLoading(true)\n      await onSubmit(formData)\n    } catch (error) {\n      console.error(\"Failed to update ward:\", error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent\n        className=\"sm:max-w-md bg-gradient-to-br from-white via-[#F8F8F8] to-[#EDEEF0] border-[#013A65]/20\"\n        onPointerDownOutside={(e) => e.preventDefault()}\n        onEscapeKeyDown={(e) => e.preventDefault()}\n      >\n        <DialogHeader className=\"pb-4 border-b border-[#EDEEF0]\">\n          <DialogTitle className=\"text-xl font-bold bg-gradient-to-r from-[#013A65] to-[#F3B335] bg-clip-text text-transparent\">\n            Edit Ward\n          </DialogTitle>\n          <div className=\"text-sm text-[#013A65]/70 mt-1 space-y-1\">\n            <p>Zone: {zoneName}</p>\n            <p>District: {districtName}</p>\n            <p>Town Panchayat: {townPanchayatName}</p>\n          </div>\n        </DialogHeader>\n\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"nameEnglish\" className=\"text-sm font-medium text-[#013A65]\">\n                Ward Name (English) *\n              </Label>\n              <Input\n                id=\"nameEnglish\"\n                value={formData.nameEnglish}\n                onChange={(e) => setFormData({ ...formData, nameEnglish: e.target.value })}\n                className=\"h-12 border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\"\n                required\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"nameTamil\" className=\"text-sm font-medium text-[#013A65]\">\n                Ward Name (Tamil) *\n              </Label>\n              <Input\n                id=\"nameTamil\"\n                value={formData.nameTamil}\n                onChange={(e) => setFormData({ ...formData, nameTamil: e.target.value })}\n                className=\"h-12 border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\"\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"remark\" className=\"text-sm font-medium text-[#013A65]\">\n              Remark\n            </Label>\n            <Textarea\n              id=\"remark\"\n              value={formData.remark}\n              onChange={(e) => setFormData({ ...formData, remark: e.target.value })}\n              className=\"min-h-20 border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\"\n              placeholder=\"Enter any additional remarks...\"\n            />\n          </div>\n        </form>\n\n        <DialogFooter className=\"pt-4 border-t border-[#EDEEF0]\">\n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            onClick={() => onOpenChange(false)}\n            disabled={loading}\n            className=\"border-[#EDEEF0] hover:bg-[#F8F8F8]\"\n          >\n            Cancel\n          </Button>\n          <Button\n            onClick={handleSubmit}\n            disabled={loading || !formData.nameEnglish.trim() || !formData.nameTamil.trim()}\n            className=\"bg-gradient-to-r from-[#F3B335] to-[#F3B335]/90 hover:from-[#F3B335]/90 hover:to-[#F3B335] text-[#013A65] font-medium shadow-md hover:shadow-lg transition-all duration-200\"\n          >\n            {loading ? (\n              <>\n                <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                Updating...\n              </>\n            ) : (\n              \"Update Ward\"\n            )}\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\nimport { Plus, Edit, Search, Loader2 } from \"lucide-react\"\nimport { MastersService, type Zone, type District, type TownPanchayat, type Ward } from \"@/services/masters-service\"\nimport { CreateWardDialog } from \"./create-ward-dialog\"\nimport { EditWardDialog } from \"./edit-ward-dialog\"\n\nexport function WardMaster() {\n  const [zones, setZones] = useState<Zone[]>([])\n  const [districts, setDistricts] = useState<District[]>([])\n  const [townPanchayats, setTownPanchayats] = useState<TownPanchayat[]>([])\n  const [wards, setWards] = useState<Ward[]>([])\n  const [selectedZoneId, setSelectedZoneId] = useState<string>(\"\")\n  const [selectedDistrictId, setSelectedDistrictId] = useState<string>(\"\")\n  const [selectedTownPanchayatId, setSelectedTownPanchayatId] = useState<string>(\"\")\n  const [loading, setLoading] = useState(true)\n  const [districtsLoading, setDistrictsLoading] = useState(false)\n  const [townPanchayatsLoading, setTownPanchayatsLoading] = useState(false)\n  const [wardsLoading, setWardsLoading] = useState(false)\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false)\n  const [editingWard, setEditingWard] = useState<Ward | null>(null)\n\n  useEffect(() => {\n    loadZones()\n  }, [])\n\n  useEffect(() => {\n    if (selectedZoneId) {\n      loadDistricts(selectedZoneId)\n      setSelectedDistrictId(\"\")\n      setSelectedTownPanchayatId(\"\")\n      setTownPanchayats([])\n      setWards([])\n    } else {\n      setDistricts([])\n      setSelectedDistrictId(\"\")\n      setSelectedTownPanchayatId(\"\")\n      setTownPanchayats([])\n      setWards([])\n    }\n  }, [selectedZoneId])\n\n  useEffect(() => {\n    if (selectedDistrictId) {\n      loadTownPanchayats(selectedDistrictId)\n      setSelectedTownPanchayatId(\"\")\n      setWards([])\n    } else {\n      setTownPanchayats([])\n      setSelectedTownPanchayatId(\"\")\n      setWards([])\n    }\n  }, [selectedDistrictId])\n\n  useEffect(() => {\n    if (selectedTownPanchayatId) {\n      loadWards(selectedTownPanchayatId)\n    } else {\n      setWards([])\n    }\n  }, [selectedTownPanchayatId])\n\n  const loadZones = async () => {\n    try {\n      setLoading(true)\n      const data = await MastersService.getAllZones()\n      setZones(data)\n    } catch (error) {\n      console.error(\"Failed to load zones:\", error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const loadDistricts = async (zoneId: string) => {\n    try {\n      setDistrictsLoading(true)\n      const data = await MastersService.getDistrictsByZone(zoneId)\n      setDistricts(data)\n    } catch (error) {\n      console.error(\"Failed to load districts:\", error)\n    } finally {\n      setDistrictsLoading(false)\n    }\n  }\n\n  const loadTownPanchayats = async (districtId: string) => {\n    try {\n      setTownPanchayatsLoading(true)\n      const data = await MastersService.getTownPanchayatsByDistrict(districtId)\n      setTownPanchayats(data)\n    } catch (error) {\n      console.error(\"Failed to load town panchayats:\", error)\n    } finally {\n      setTownPanchayatsLoading(false)\n    }\n  }\n\n  const loadWards = async (townPanchayatId: string) => {\n    try {\n      setWardsLoading(true)\n      const data = await MastersService.getWardsByTownPanchayat(townPanchayatId)\n      setWards(data)\n    } catch (error) {\n      console.error(\"Failed to load wards:\", error)\n    } finally {\n      setWardsLoading(false)\n    }\n  }\n\n  const handleCreateWard = async (wardData: Omit<Ward, \"id\" | \"createdAt\">) => {\n    try {\n      await MastersService.createWard(wardData)\n      if (selectedTownPanchayatId) {\n        await loadWards(selectedTownPanchayatId)\n      }\n      setIsCreateDialogOpen(false)\n    } catch (error) {\n      console.error(\"Failed to create ward:\", error)\n    }\n  }\n\n  const handleEditWard = async (id: string, wardData: Partial<Ward>) => {\n    try {\n      await MastersService.updateWard(id, wardData)\n      if (selectedTownPanchayatId) {\n        await loadWards(selectedTownPanchayatId)\n      }\n      setEditingWard(null)\n    } catch (error) {\n      console.error(\"Failed to update ward:\", error)\n    }\n  }\n\n  const filteredWards = wards.filter(\n    (ward) =>\n      ward.nameEnglish.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      ward.nameTamil.includes(searchTerm) ||\n      ward.remark.toLowerCase().includes(searchTerm.toLowerCase()),\n  )\n\n  const selectedZone = zones.find((zone) => zone.id === selectedZoneId)\n  const selectedDistrict = districts.find((district) => district.id === selectedDistrictId)\n  const selectedTownPanchayat = townPanchayats.find((tp) => tp.id === selectedTownPanchayatId)\n\n  return (\n    <div className=\"flex flex-col h-full bg-white rounded-lg border border-[#EDEEF0] shadow-sm overflow-hidden\">\n      {/* Header */}\n      <div className=\"flex-shrink-0 p-4 border-b border-[#EDEEF0] bg-gradient-to-r from-[#F8F8F8] to-[#EDEEF0]\">\n        <div className=\"flex items-center justify-between gap-4\">\n          <div className=\"flex items-center gap-4 flex-1\">\n            <div className=\"flex items-center gap-3\">\n              <Select value={selectedZoneId} onValueChange={setSelectedZoneId}>\n                <SelectTrigger className=\"w-56 h-9 bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\">\n                  <SelectValue placeholder=\"Select Zone\" />\n                </SelectTrigger>\n                <SelectContent className=\"bg-white\">\n                  {zones.map((zone) => (\n                    <SelectItem key={zone.id} value={zone.id}>\n                      {zone.nameEnglish} / {zone.nameTamil}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n\n              <Select value={selectedDistrictId} onValueChange={setSelectedDistrictId} disabled={!selectedZoneId}>\n                <SelectTrigger className=\"w-56 h-9 bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\">\n                  <SelectValue placeholder=\"Select District\" />\n                </SelectTrigger>\n                <SelectContent className=\"bg-white\">\n                  {districts.map((district) => (\n                    <SelectItem key={district.id} value={district.id}>\n                      {district.nameEnglish} / {district.nameTamil}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n\n              <Select\n                value={selectedTownPanchayatId}\n                onValueChange={setSelectedTownPanchayatId}\n                disabled={!selectedDistrictId}\n              >\n                <SelectTrigger className=\"w-56 h-9 bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\">\n                  <SelectValue placeholder=\"Select Town Panchayat\" />\n                </SelectTrigger>\n                <SelectContent className=\"bg-white\">\n                  {townPanchayats.map((tp) => (\n                    <SelectItem key={tp.id} value={tp.id}>\n                      {tp.nameEnglish} / {tp.nameTamil}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n\n              {selectedTownPanchayatId && (\n                <div className=\"relative flex-1 max-w-md\">\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-[#013A65]/60 h-4 w-4\" />\n                  <Input\n                    placeholder=\"Search wards...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"pl-10 h-9 bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\"\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n\n          {selectedTownPanchayatId && (\n            <Button\n              onClick={() => setIsCreateDialogOpen(true)}\n              className=\"bg-gradient-to-r from-[#F3B335] to-[#F3B335]/90 hover:from-[#F3B335]/90 hover:to-[#F3B335] text-[#013A65] font-medium shadow-md hover:shadow-lg transition-all duration-200 h-9\"\n            >\n              <Plus className=\"h-4 w-4 mr-2\" />\n              Create Ward\n            </Button>\n          )}\n        </div>\n      </div>\n\n      {/* Content */}\n      <div className=\"flex-1 overflow-auto\">\n        {loading ? (\n          <div className=\"flex items-center justify-center h-64\">\n            <div className=\"flex items-center gap-2 text-[#013A65]/70\">\n              <Loader2 className=\"h-5 w-5 animate-spin\" />\n              <span>Loading zones...</span>\n            </div>\n          </div>\n        ) : !selectedZoneId ? (\n          <div className=\"flex flex-col items-center justify-center h-64 text-center\">\n            <div className=\"w-16 h-16 bg-gradient-to-r from-[#013A65]/10 to-[#F3B335]/10 rounded-full flex items-center justify-center mb-4\">\n              <Search className=\"h-8 w-8 text-[#013A65]/60\" />\n            </div>\n            <h3 className=\"text-lg font-medium text-[#013A65] mb-2\">No zone selected</h3>\n            <p className=\"text-[#013A65]/70\">\n              Please select zone, district, and town panchayat to view and manage wards.\n            </p>\n          </div>\n        ) : !selectedDistrictId ? (\n          <div className=\"flex flex-col items-center justify-center h-64 text-center\">\n            <div className=\"w-16 h-16 bg-gradient-to-r from-[#013A65]/10 to-[#F3B335]/10 rounded-full flex items-center justify-center mb-4\">\n              <Search className=\"h-8 w-8 text-[#013A65]/60\" />\n            </div>\n            <h3 className=\"text-lg font-medium text-[#013A65] mb-2\">No district selected</h3>\n            <p className=\"text-[#013A65]/70\">Please select district and town panchayat to view and manage wards.</p>\n          </div>\n        ) : !selectedTownPanchayatId ? (\n          <div className=\"flex flex-col items-center justify-center h-64 text-center\">\n            <div className=\"w-16 h-16 bg-gradient-to-r from-[#013A65]/10 to-[#F3B335]/10 rounded-full flex items-center justify-center mb-4\">\n              <Search className=\"h-8 w-8 text-[#013A65]/60\" />\n            </div>\n            <h3 className=\"text-lg font-medium text-[#013A65] mb-2\">No town panchayat selected</h3>\n            <p className=\"text-[#013A65]/70\">Please select a town panchayat to view and manage wards.</p>\n          </div>\n        ) : wardsLoading ? (\n          <div className=\"flex items-center justify-center h-64\">\n            <div className=\"flex items-center gap-2 text-[#013A65]/70\">\n              <Loader2 className=\"h-5 w-5 animate-spin\" />\n              <span>Loading wards...</span>\n            </div>\n          </div>\n        ) : filteredWards.length === 0 ? (\n          <div className=\"flex flex-col items-center justify-center h-64 text-center\">\n            <div className=\"w-16 h-16 bg-gradient-to-r from-[#013A65]/10 to-[#F3B335]/10 rounded-full flex items-center justify-center mb-4\">\n              <Plus className=\"h-8 w-8 text-[#013A65]/60\" />\n            </div>\n            <h3 className=\"text-lg font-medium text-[#013A65] mb-2\">No wards found</h3>\n            <p className=\"text-[#013A65]/70 mb-4\">\n              {searchTerm\n                ? \"No wards match your search criteria.\"\n                : `No wards found for ${selectedTownPanchayat?.nameEnglish}. Create the first ward.`}\n            </p>\n            {!searchTerm && (\n              <Button\n                onClick={() => setIsCreateDialogOpen(true)}\n                className=\"bg-gradient-to-r from-[#F3B335] to-[#F3B335]/90 hover:from-[#F3B335]/90 hover:to-[#F3B335] text-[#013A65] font-medium\"\n              >\n                <Plus className=\"h-4 w-4 mr-2\" />\n                Create Ward\n              </Button>\n            )}\n          </div>\n        ) : (\n          <Table>\n            <TableHeader>\n              <TableRow className=\"bg-[#F3B335] hover:bg-[#F3B335]\">\n                <TableHead className=\"text-[#013A65] font-semibold\">English Name</TableHead>\n                <TableHead className=\"text-[#013A65] font-semibold\">Tamil Name</TableHead>\n                <TableHead className=\"text-[#013A65] font-semibold\">Town Panchayat</TableHead>\n                <TableHead className=\"text-[#013A65] font-semibold\">District</TableHead>\n                <TableHead className=\"text-[#013A65] font-semibold\">Zone</TableHead>\n                <TableHead className=\"text-[#013A65] font-semibold\">Remark</TableHead>\n                <TableHead className=\"text-[#013A65] font-semibold\">Created By</TableHead>\n                <TableHead className=\"text-[#013A65] font-semibold\">Created At</TableHead>\n                <TableHead className=\"text-[#013A65] font-semibold w-20\">Actions</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {filteredWards.map((ward) => {\n                const townPanchayat = townPanchayats.find((tp) => tp.id === ward.townPanchayatId)\n                const district = districts.find((d) => d.id === townPanchayat?.districtId)\n                const zone = zones.find((z) => z.id === district?.zoneId)\n                return (\n                  <TableRow key={ward.id} className=\"hover:bg-[#F8F8F8]/50\">\n                    <TableCell className=\"font-medium text-[#013A65]\">{ward.nameEnglish}</TableCell>\n                    <TableCell className=\"text-[#013A65]/80\">{ward.nameTamil}</TableCell>\n                    <TableCell className=\"text-[#013A65]/70\">{townPanchayat?.nameEnglish}</TableCell>\n                    <TableCell className=\"text-[#013A65]/70\">{district?.nameEnglish}</TableCell>\n                    <TableCell className=\"text-[#013A65]/70\">{zone?.nameEnglish}</TableCell>\n                    <TableCell className=\"text-[#013A65]/70 max-w-xs truncate\" title={ward.remark}>\n                      {ward.remark}\n                    </TableCell>\n                    <TableCell className=\"text-[#013A65]/70\">{ward.createdBy}</TableCell>\n                    <TableCell className=\"text-[#013A65]/70\">{ward.createdAt}</TableCell>\n                    <TableCell>\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => setEditingWard(ward)}\n                        className=\"h-8 w-8 p-0 border-[#EDEEF0] hover:bg-[#F3B335]/10 hover:border-[#F3B335]/30\"\n                      >\n                        <Edit className=\"h-3 w-3\" />\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                )\n              })}\n            </TableBody>\n          </Table>\n        )}\n      </div>\n\n      {/* Dialogs */}\n      {selectedTownPanchayatId && (\n        <CreateWardDialog\n          open={isCreateDialogOpen}\n          onOpenChange={setIsCreateDialogOpen}\n          townPanchayatId={selectedTownPanchayatId}\n          townPanchayatName={selectedTownPanchayat?.nameEnglish || \"\"}\n          districtName={selectedDistrict?.nameEnglish || \"\"}\n          zoneName={selectedZone?.nameEnglish || \"\"}\n          onSubmit={handleCreateWard}\n        />\n      )}\n\n      {editingWard && (\n        <EditWardDialog\n          open={!!editingWard}\n          onOpenChange={(open) => !open && setEditingWard(null)}\n          ward={editingWard}\n          townPanchayatName={townPanchayats.find((tp) => tp.id === editingWard.townPanchayatId)?.nameEnglish || \"\"}\n          districtName={\n            districts.find(\n              (d) => d.id === townPanchayats.find((tp) => tp.id === editingWard.townPanchayatId)?.districtId,\n            )?.nameEnglish || \"\"\n          }\n          zoneName={\n            zones.find(\n              (z) =>\n                z.id ===\n                districts.find(\n                  (d) => d.id === townPanchayats.find((tp) => tp.id === editingWard.townPanchayatId)?.districtId,\n                )?.zoneId,\n            )?.nameEnglish || \"\"\n          }\n          onSubmit={(data) => handleEditWard(editingWard.id, data)}\n        />\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":"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"}