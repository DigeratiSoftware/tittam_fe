{"version":3,"sources":["turbopack:///[project]/projects/TITTAM/tittam_fe/app/dashboard/work/page.tsx","turbopack:///[project]/projects/TITTAM/tittam_fe/components/dashboard/work-management.tsx","turbopack:///[project]/projects/TITTAM/tittam_fe/services/mock-work-data.ts"],"sourcesContent":["\"use client\"\n\nimport { DashboardLayout } from \"@/components/layout/dashboard-layout\"\nimport { ProtectedRoute } from \"@/components/auth/protected-route\"\nimport { WorkManagement } from \"@/components/dashboard/work-management\"\nimport { initializeMockWorkData } from \"@/services/mock-work-data\"\nimport { useEffect } from \"react\"\n\nexport default function WorkPage() {\n  useEffect(() => {\n    initializeMockWorkData()\n  }, [])\n\n  return (\n    <ProtectedRoute>\n      <DashboardLayout>\n        <WorkManagement />\n      </DashboardLayout>\n    </ProtectedRoute>\n  )\n}\n","\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from \"@/components/ui/dialog\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Plus, Briefcase, Eye, Edit, Trash2, Search, Clock, PlayCircle, CheckCircle, Loader2 } from \"lucide-react\"\nimport { workService, type Work } from \"@/services/work-service\"\nimport { fieldService } from \"@/services/field-service\"\nimport { useAuth } from \"@/hooks/use-auth\"\nimport type { Field } from \"@/services/field-service\"\nimport Link from \"next/link\"\n\nexport function WorkManagement() {\n  const { user } = useAuth()\n  const [works, setWorks] = useState<Work[]>([])\n  const [filteredWorks, setFilteredWorks] = useState<Work[]>([])\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [statusFilter, setStatusFilter] = useState<string>(\"all\")\n  const [schemeFilter, setSchemeFilter] = useState<string>(\"all\")\n  const [isLoading, setIsLoading] = useState(true)\n  const [viewWorkDialog, setViewWorkDialog] = useState(false)\n  const [editWorkDialog, setEditWorkDialog] = useState(false)\n  const [selectedWork, setSelectedWork] = useState<Work | null>(null)\n  const [workFields, setWorkFields] = useState<Field[]>([])\n  const [editFormData, setEditFormData] = useState<{ [key: string]: any }>({})\n\n  useEffect(() => {\n    loadWorks()\n  }, [])\n\n  useEffect(() => {\n    let filtered = works\n\n    // Apply search filter\n    if (searchTerm) {\n      filtered = filtered.filter(\n        (work) =>\n          work.schemeName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          work.componentName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          work.createdBy.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          Object.values(work.fieldData).some((value) => String(value).toLowerCase().includes(searchTerm.toLowerCase())),\n      )\n    }\n\n    // Apply status filter\n    if (statusFilter !== \"all\") {\n      filtered = filtered.filter((work) => work.status === statusFilter)\n    }\n\n    // Apply scheme filter\n    if (schemeFilter !== \"all\") {\n      filtered = filtered.filter((work) => work.schemeId === schemeFilter)\n    }\n\n    setFilteredWorks(filtered)\n  }, [searchTerm, statusFilter, schemeFilter, works])\n\n  const loadWorks = async () => {\n    try {\n      setIsLoading(true)\n      const data = await workService.getWorks()\n      setWorks(data)\n      setFilteredWorks(data)\n    } catch (error) {\n      console.error(\"Failed to load works:\", error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const viewWorkDetails = async (work: Work) => {\n    try {\n      setSelectedWork(work)\n      const allFields = await fieldService.getAllFields()\n      const componentFields = allFields.filter((field) => field.componentId === work.componentId)\n      setWorkFields(componentFields)\n      setViewWorkDialog(true)\n    } catch (error) {\n      console.error(\"Failed to load work details:\", error)\n      alert(\"Failed to load work details. Please try again.\")\n    }\n  }\n\n  const deleteWork = async (workId: string) => {\n    if (confirm(\"Are you sure you want to delete this work entry?\")) {\n      try {\n        await workService.deleteWork(workId)\n        await loadWorks()\n      } catch (error) {\n        console.error(\"Failed to delete work:\", error)\n        alert(\"Failed to delete work. Please try again.\")\n      }\n    }\n  }\n\n  const updateWorkStatus = async (workId: string, newStatus: \"pending\" | \"in_progress\" | \"completed\") => {\n    try {\n      await workService.updateWorkStatus(workId, newStatus)\n      await loadWorks()\n    } catch (error) {\n      console.error(\"Failed to update work status:\", error)\n      alert(\"Failed to update work status. Please try again.\")\n    }\n  }\n\n  const editWork = async (work: Work) => {\n    try {\n      setSelectedWork(work)\n      const allFields = await fieldService.getAllFields()\n      const componentFields = allFields.filter((field) => field.componentId === work.componentId)\n      setWorkFields(componentFields)\n      setEditFormData(work.fieldData)\n      setEditWorkDialog(true)\n    } catch (error) {\n      console.error(\"Failed to load work for editing:\", error)\n      alert(\"Failed to load work details. Please try again.\")\n    }\n  }\n\n  const saveWorkEdit = async () => {\n    if (!selectedWork) return\n\n    try {\n      await workService.updateWork(selectedWork.id, {\n        fieldData: editFormData,\n        updatedAt: new Date().toISOString(),\n      })\n      setEditWorkDialog(false)\n      await loadWorks()\n      alert(\"Work updated successfully!\")\n    } catch (error) {\n      console.error(\"Failed to update work:\", error)\n      alert(\"Failed to update work. Please try again.\")\n    }\n  }\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case \"pending\":\n        return { variant: \"secondary\" as const, icon: Clock, color: \"text-yellow-600\" }\n      case \"in_progress\":\n        return { variant: \"default\" as const, icon: PlayCircle, color: \"text-blue-600\" }\n      case \"completed\":\n        return { variant: \"default\" as const, icon: CheckCircle, color: \"text-green-600\" }\n      default:\n        return { variant: \"secondary\" as const, icon: Clock, color: \"text-gray-600\" }\n    }\n  }\n\n  const uniqueSchemes = Array.from(new Set(works.map((work) => work.schemeId))).map((schemeId) => {\n    const work = works.find((w) => w.schemeId === schemeId)\n    return { id: schemeId, name: work?.schemeName || schemeId }\n  })\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-gradient-to-r from-[#013A65] to-[#013A65]/90 rounded-lg py-3 px-6 text-white shadow-lg\">\n        <div className=\"flex justify-between items-center\">\n          <div>\n            <h1 className=\"text-xl font-semibold\">Work Management</h1>\n            <p className=\"text-white/80 text-sm mt-1\">\n              View existing work entries and create new ones by selecting schemes and components\n            </p>\n          </div>\n          <Link href=\"/dashboard/work/create\">\n            <Button\n              size=\"sm\"\n              className=\"bg-gradient-to-r from-[#F3B335] to-[#F3B335]/90 hover:from-[#F3B335]/90 hover:to-[#F3B335]/80 text-[#013A65] border-0 shadow-lg hover:shadow-xl transition-all duration-300 h-9 px-4 text-sm font-medium\"\n            >\n              <Plus className=\"h-4 w-4 mr-1.5\" />\n              Create Work\n            </Button>\n          </Link>\n        </div>\n      </div>\n\n      <div className=\"flex flex-col h-full bg-white rounded-lg border border-[#EDEEF0] shadow-sm overflow-hidden\">\n        <div className=\"flex-shrink-0 p-4 border-b border-[#EDEEF0] bg-gradient-to-r from-[#F8F8F8] to-[#EDEEF0]\">\n          <div className=\"flex items-center justify-between gap-4\">\n            <div className=\"flex items-center gap-4 flex-1\">\n              <div className=\"relative flex-1 max-w-md\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-[#013A65]/60 h-4 w-4\" />\n                <Input\n                  placeholder=\"Search works...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"pl-10 h-9 border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20 bg-white\"\n                />\n              </div>\n              <Select value={statusFilter} onValueChange={setStatusFilter}>\n                <SelectTrigger className=\"w-40 h-9 bg-white\">\n                  <SelectValue placeholder=\"All Status\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Status</SelectItem>\n                  <SelectItem value=\"pending\">Pending</SelectItem>\n                  <SelectItem value=\"in_progress\">In Progress</SelectItem>\n                  <SelectItem value=\"completed\">Completed</SelectItem>\n                </SelectContent>\n              </Select>\n              <Select value={schemeFilter} onValueChange={setSchemeFilter}>\n                <SelectTrigger className=\"w-48 h-9 bg-white\">\n                  <SelectValue placeholder=\"All Schemes\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Schemes</SelectItem>\n                  {uniqueSchemes.map((scheme) => (\n                    <SelectItem key={scheme.id} value={scheme.id}>\n                      {scheme.name}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex-1 overflow-auto\">\n          {/* Content */}\n          {isLoading ? (\n            <div className=\"flex items-center justify-center h-64\">\n              <div className=\"flex items-center gap-2 text-[#013A65]/70\">\n                <Loader2 className=\"h-5 w-5 animate-spin\" />\n                <span>Loading works...</span>\n              </div>\n            </div>\n          ) : filteredWorks.length === 0 ? (\n            <div className=\"flex flex-col items-center justify-center h-64 text-center\">\n              <div className=\"w-16 h-16 bg-gradient-to-r from-[#013A65]/10 to-[#F3B335]/10 rounded-full flex items-center justify-center mb-4\">\n                <Briefcase className=\"h-8 w-8 text-[#013A65]/60\" />\n              </div>\n              <h3 className=\"text-lg font-medium text-[#013A65] mb-2\">No work entries found</h3>\n              <p className=\"text-[#013A65]/70 mb-4\">\n                {searchTerm || statusFilter !== \"all\" || schemeFilter !== \"all\"\n                  ? \"No work entries match your search criteria.\"\n                  : \"Get started by creating your first work entry.\"}\n              </p>\n              {!searchTerm && statusFilter === \"all\" && schemeFilter === \"all\" && (\n                <Link href=\"/dashboard/work/create\">\n                  <Button className=\"bg-gradient-to-r from-[#F3B335] to-[#F3B335]/90 hover:from-[#F3B335]/90 hover:to-[#F3B335] text-[#013A65] font-medium\">\n                    <Plus className=\"h-4 w-4 mr-2\" />\n                    Create Work\n                  </Button>\n                </Link>\n              )}\n            </div>\n          ) : (\n            <Table>\n              <TableHeader>\n                <TableRow className=\"bg-[#F3B335] hover:bg-[#F3B335]\">\n                  <TableHead className=\"text-[#013A65] font-semibold\">Scheme Name</TableHead>\n                  <TableHead className=\"text-[#013A65] font-semibold\">Component Name</TableHead>\n                  <TableHead className=\"text-[#013A65] font-semibold\">Work Name</TableHead>\n                  <TableHead className=\"text-[#013A65] font-semibold\">Status</TableHead>\n                  <TableHead className=\"text-[#013A65] font-semibold\">Created By</TableHead>\n                  <TableHead className=\"text-[#013A65] font-semibold\">Created Date</TableHead>\n                  <TableHead className=\"text-[#013A65] font-semibold w-32\">Actions</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {filteredWorks.map((work) => {\n                  const statusInfo = getStatusBadge(work.status || \"pending\")\n                  const StatusIcon = statusInfo.icon\n                  return (\n                    <TableRow key={work.id} className=\"hover:bg-[#F8F8F8]/50\">\n                      <TableCell className=\"font-medium text-[#013A65] max-w-xs truncate\" title={work.schemeName}>\n                        {work.schemeName}\n                      </TableCell>\n                      <TableCell className=\"text-[#013A65]/80 max-w-xs truncate\" title={work.componentName}>\n                        {work.componentName}\n                      </TableCell>\n                      <TableCell className=\"text-[#013A65]/80 max-w-xs truncate\">\n                        {work.fieldData?.workName || `Work-${work.id.slice(0, 8)}`}\n                      </TableCell>\n                      <TableCell>\n                        <Select\n                          value={work.status || \"pending\"}\n                          onValueChange={(value) => updateWorkStatus(work.id, value as any)}\n                        >\n                          <SelectTrigger className=\"w-32 h-8 bg-white\">\n                            <div className=\"flex items-center gap-2\">\n                              <StatusIcon className={`h-3 w-3 ${statusInfo.color}`} />\n                              <SelectValue />\n                            </div>\n                          </SelectTrigger>\n                          <SelectContent className=\"bg-white\">\n                            <SelectItem value=\"pending\">\n                              <div className=\"flex items-center gap-2\">\n                                <Clock className=\"h-3 w-3 text-yellow-600\" />\n                                Pending\n                              </div>\n                            </SelectItem>\n                            <SelectItem value=\"in_progress\">\n                              <div className=\"flex items-center gap-2\">\n                                <PlayCircle className=\"h-3 w-3 text-blue-600\" />\n                                In Progress\n                              </div>\n                            </SelectItem>\n                            <SelectItem value=\"completed\">\n                              <div className=\"flex items-center gap-2\">\n                                <CheckCircle className=\"h-3 w-3 text-green-600\" />\n                                Completed\n                              </div>\n                            </SelectItem>\n                          </SelectContent>\n                        </Select>\n                      </TableCell>\n                      <TableCell>\n                        <span className=\"bg-gradient-to-r from-[#F3B335]/20 to-[#F3B335]/30 text-[#013A65] px-2 py-1 rounded text-xs font-medium\">\n                          {work.createdBy}\n                        </span>\n                      </TableCell>\n                      <TableCell className=\"text-[#013A65]/70\">\n                        {new Date(work.createdAt).toLocaleDateString()}\n                      </TableCell>\n                      <TableCell>\n                        <div className=\"flex items-center gap-1\">\n                          <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            className=\"h-8 w-8 p-0 border-[#EDEEF0] hover:bg-[#F3B335]/10 hover:border-[#F3B335]/30 bg-transparent\"\n                            onClick={() => viewWorkDetails(work)}\n                            title=\"View Details\"\n                          >\n                            <Eye className=\"h-3 w-3\" />\n                          </Button>\n                          <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            className=\"h-8 w-8 p-0 border-[#EDEEF0] hover:bg-[#F3B335]/10 hover:border-[#F3B335]/30 bg-transparent\"\n                            onClick={() => editWork(work)}\n                            title=\"Edit Work\"\n                          >\n                            <Edit className=\"h-3 w-3\" />\n                          </Button>\n                          <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            className=\"h-8 w-8 p-0 border-[#EDEEF0] hover:bg-red-50 hover:border-red-200 text-red-500 bg-transparent\"\n                            onClick={() => deleteWork(work.id)}\n                            title=\"Delete Work\"\n                          >\n                            <Trash2 className=\"h-3 w-3\" />\n                          </Button>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  )\n                })}\n              </TableBody>\n            </Table>\n          )}\n        </div>\n      </div>\n\n      <Dialog open={viewWorkDialog} onOpenChange={setViewWorkDialog}>\n        <DialogContent className=\"max-w-4xl max-h-[80vh] overflow-y-auto border-0 shadow-2xl bg-[#F8F8F8] backdrop-blur-sm\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center gap-2 text-[#013A65]\">\n              <Eye className=\"h-5 w-5 text-[#013A65]\" />\n              Work Details\n            </DialogTitle>\n            <DialogDescription className=\"text-[#013A65]/70\">\n              Complete details for {selectedWork?.schemeName} - {selectedWork?.componentName}\n            </DialogDescription>\n          </DialogHeader>\n\n          {selectedWork && (\n            <div className=\"space-y-6\">\n              {/* Work Summary */}\n              <Card className=\"border-[#EDEEF0] bg-white\">\n                <CardHeader className=\"bg-gradient-to-r from-[#F8F8F8] to-[#EDEEF0] border-b border-[#EDEEF0]\">\n                  <CardTitle className=\"text-base font-semibold text-[#013A65]\">Work Summary</CardTitle>\n                </CardHeader>\n                <CardContent className=\"p-4\">\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <Label className=\"text-sm font-medium text-[#013A65]/70\">Scheme Name</Label>\n                      <p className=\"text-sm text-[#013A65] font-medium\">{selectedWork.schemeName}</p>\n                    </div>\n                    <div>\n                      <Label className=\"text-sm font-medium text-[#013A65]/70\">Component Name</Label>\n                      <p className=\"text-sm text-[#013A65] font-medium\">{selectedWork.componentName}</p>\n                    </div>\n                    <div>\n                      <Label className=\"text-sm font-medium text-[#013A65]/70\">Created By</Label>\n                      <span className=\"bg-gradient-to-r from-[#F3B335]/20 to-[#F3B335]/30 text-[#013A65] px-2 py-1 rounded text-xs font-medium\">\n                        {selectedWork.createdBy}\n                      </span>\n                    </div>\n                    <div>\n                      <Label className=\"text-sm font-medium text-[#013A65]/70\">Created Date</Label>\n                      <p className=\"text-sm text-[#013A65]\">{new Date(selectedWork.createdAt).toLocaleString()}</p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Dynamic Field Data */}\n              <Card className=\"border-[#EDEEF0] bg-white\">\n                <CardHeader className=\"bg-gradient-to-r from-[#F8F8F8] to-[#EDEEF0] border-b border-[#EDEEF0]\">\n                  <CardTitle className=\"text-base font-semibold text-[#013A65]\">Field Data</CardTitle>\n                </CardHeader>\n                <CardContent className=\"p-4\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    {workFields.map((field) => {\n                      const value = selectedWork.fieldData?.[field.id] || \"Not provided\"\n                      return (\n                        <div key={field.id} className=\"space-y-2\">\n                          <Label className=\"text-sm font-medium text-[#013A65]/70\">\n                            {field.englishName}\n                            <span className=\"text-xs text-[#013A65]/50 ml-1\">({field.tamilName})</span>\n                          </Label>\n                          <div className=\"p-2 bg-[#F8F8F8] rounded border border-[#EDEEF0]\">\n                            <p className=\"text-sm text-[#013A65]\">\n                              {field.dataType === \"attachment\" && value !== \"Not provided\"\n                                ? `${value.length} file(s) uploaded`\n                                : value}\n                            </p>\n                          </div>\n                          {field.englishDescription && (\n                            <p className=\"text-xs text-[#013A65]/50\">{field.englishDescription}</p>\n                          )}\n                        </div>\n                      )\n                    })}\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n\n      <Dialog open={editWorkDialog} onOpenChange={setEditWorkDialog}>\n        <DialogContent className=\"max-w-4xl max-h-[80vh] overflow-y-auto border-0 shadow-2xl bg-[#F8F8F8] backdrop-blur-sm\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center gap-2 text-[#013A65]\">\n              <Edit className=\"h-5 w-5 text-[#013A65]\" />\n              Edit Work\n            </DialogTitle>\n            <DialogDescription className=\"text-[#013A65]/70\">\n              Edit details for {selectedWork?.schemeName} - {selectedWork?.componentName}\n            </DialogDescription>\n          </DialogHeader>\n\n          {selectedWork && (\n            <div className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                {workFields.map((field) => (\n                  <div key={field.id} className=\"space-y-2\">\n                    <label className=\"block text-sm font-medium text-[#013A65]\">\n                      {field.englishName}\n                      {field.isRequired && <span className=\"text-red-500 ml-1\">*</span>}\n                    </label>\n                    {field.dataType === \"text\" && (\n                      <Input\n                        value={editFormData[field.id] || \"\"}\n                        onChange={(e) => setEditFormData((prev) => ({ ...prev, [field.id]: e.target.value }))}\n                        className=\"h-10 border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20 bg-white\"\n                      />\n                    )}\n                    {field.dataType === \"number\" && (\n                      <Input\n                        type=\"number\"\n                        value={editFormData[field.id] || \"\"}\n                        onChange={(e) => setEditFormData((prev) => ({ ...prev, [field.id]: e.target.value }))}\n                        className=\"h-10 border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20 bg-white\"\n                      />\n                    )}\n                    {field.dataType === \"date\" && (\n                      <Input\n                        type=\"date\"\n                        value={editFormData[field.id] || \"\"}\n                        onChange={(e) => setEditFormData((prev) => ({ ...prev, [field.id]: e.target.value }))}\n                        className=\"h-10 border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20 bg-white\"\n                      />\n                    )}\n                  </div>\n                ))}\n              </div>\n              <div className=\"flex justify-end gap-3\">\n                <Button\n                  variant=\"outline\"\n                  onClick={() => setEditWorkDialog(false)}\n                  className=\"border-[#EDEEF0] hover:bg-[#F8F8F8]\"\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={saveWorkEdit}\n                  className=\"bg-gradient-to-r from-[#013A65] to-[#013A65]/90 hover:from-[#013A65]/90 hover:to-[#013A65] text-white\"\n                >\n                  Save Changes\n                </Button>\n              </div>\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n","import type { Work } from \"./work-service\"\n\nexport const mockWorkData: Work[] = [\n  {\n    id: \"work-001\",\n    schemeId: \"SCHEME001\",\n    schemeName: \"Rural Water Supply Scheme\",\n    componentId: \"COMP001\",\n    componentName: \"Water Tank Construction\",\n    fieldData: {\n      workName: \"Village Water Tank - Phase 1\",\n      estimateInRupees: 500000,\n      fundReleased: 300000,\n      expenditure: 150000,\n      contractorName: \"ABC Construction\",\n      startDate: \"2024-01-15\",\n      expectedCompletionDate: \"2024-06-15\",\n      zone: \"ZONE001\",\n      district: \"DIST001\",\n      townPanchayat: \"TP001\",\n      ward: \"WARD001\",\n    },\n    status: \"in_progress\",\n    createdBy: \"admin@example.com\",\n    createdAt: \"2024-01-10T10:00:00Z\",\n    updatedAt: \"2024-01-20T15:30:00Z\",\n  },\n  {\n    id: \"work-002\",\n    schemeId: \"SCHEME002\",\n    schemeName: \"Road Development Project\",\n    componentId: \"COMP002\",\n    componentName: \"Concrete Road Construction\",\n    fieldData: {\n      workName: \"Main Street Concrete Road\",\n      estimateInRupees: 750000,\n      fundReleased: 750000,\n      expenditure: 600000,\n      contractorName: \"XYZ Infrastructure\",\n      startDate: \"2024-02-01\",\n      expectedCompletionDate: \"2024-08-01\",\n      zone: \"ZONE002\",\n      district: \"DIST002\",\n      townPanchayat: \"TP002\",\n      ward: \"WARD002\",\n    },\n    status: \"completed\",\n    createdBy: \"engineer@example.com\",\n    createdAt: \"2024-01-25T09:15:00Z\",\n    updatedAt: \"2024-08-05T16:45:00Z\",\n  },\n  {\n    id: \"work-003\",\n    schemeId: \"SCHEME001\",\n    schemeName: \"Rural Water Supply Scheme\",\n    componentId: \"COMP003\",\n    componentName: \"Pipeline Installation\",\n    fieldData: {\n      workName: \"Distribution Pipeline Network\",\n      estimateInRupees: 300000,\n      fundReleased: 200000,\n      expenditure: 50000,\n      contractorName: \"Pipeline Solutions Ltd\",\n      startDate: \"2024-03-01\",\n      expectedCompletionDate: \"2024-09-01\",\n      zone: \"ZONE001\",\n      district: \"DIST001\",\n      townPanchayat: \"TP003\",\n      ward: \"WARD003\",\n    },\n    status: \"pending\",\n    createdBy: \"supervisor@example.com\",\n    createdAt: \"2024-02-28T14:20:00Z\",\n  },\n  {\n    id: \"work-004\",\n    schemeId: \"SCHEME003\",\n    schemeName: \"School Infrastructure Development\",\n    componentId: \"COMP004\",\n    componentName: \"Classroom Construction\",\n    fieldData: {\n      workName: \"Primary School New Classrooms\",\n      estimateInRupees: 400000,\n      fundReleased: 400000,\n      expenditure: 380000,\n      contractorName: \"Education Builders\",\n      startDate: \"2024-01-05\",\n      expectedCompletionDate: \"2024-05-05\",\n      zone: \"ZONE003\",\n      district: \"DIST003\",\n      townPanchayat: \"TP004\",\n      ward: \"WARD004\",\n    },\n    status: \"completed\",\n    createdBy: \"admin@example.com\",\n    createdAt: \"2024-01-01T08:00:00Z\",\n    updatedAt: \"2024-05-10T12:00:00Z\",\n  },\n  {\n    id: \"work-005\",\n    schemeId: \"SCHEME002\",\n    schemeName: \"Road Development Project\",\n    componentId: \"COMP005\",\n    componentName: \"Bridge Construction\",\n    fieldData: {\n      workName: \"River Crossing Bridge\",\n      estimateInRupees: 1200000,\n      fundReleased: 800000,\n      expenditure: 200000,\n      contractorName: \"Bridge Masters Inc\",\n      startDate: \"2024-04-01\",\n      expectedCompletionDate: \"2024-12-01\",\n      zone: \"ZONE002\",\n      district: \"DIST002\",\n      townPanchayat: \"TP005\",\n      ward: \"WARD005\",\n    },\n    status: \"in_progress\",\n    createdBy: \"engineer@example.com\",\n    createdAt: \"2024-03-25T11:30:00Z\",\n    updatedAt: \"2024-04-15T09:45:00Z\",\n  },\n]\n\n// Function to initialize mock data in localStorage\nexport const initializeMockWorkData = () => {\n  if (typeof window !== \"undefined\") {\n    const existingData = localStorage.getItem(\"works\")\n    if (!existingData) {\n      localStorage.setItem(\"works\", JSON.stringify(mockWorkData))\n      console.log(\"[v0] Initialized mock work data\")\n    }\n  }\n}\n"],"names":[],"mappings":"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"}