{"version":3,"sources":["turbopack:///[project]/projects/TITTAM/tittam_fe/components/dashboard/fields-management.tsx","turbopack:///[project]/projects/TITTAM/tittam_fe/components/dashboard/create-field-dialog.tsx","turbopack:///[project]/projects/TITTAM/tittam_fe/components/dashboard/edit-field-dialog.tsx","turbopack:///[project]/projects/TITTAM/tittam_fe/node_modules/@radix-ui/react-collapsible/dist/index.mjs","turbopack:///[project]/projects/TITTAM/tittam_fe/components/ui/collapsible.tsx","turbopack:///[project]/projects/TITTAM/tittam_fe/services/default-fields-service.ts"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Plus, FileText, Database, ChevronDown, ChevronRight } from \"lucide-react\"\nimport { schemeService, type Scheme } from \"@/services/scheme-service\"\nimport { componentService, type Component } from \"@/services/component-service\"\nimport { fieldService, type Field } from \"@/services/field-service\"\nimport {\n  defaultFieldsService,\n  type DefaultField,\n  type FieldGroup,\n  type SimpleField,\n} from \"@/services/default-fields-service\"\nimport CreateFieldDialog from \"./create-field-dialog\"\nimport EditFieldDialog from \"./edit-field-dialog\"\nimport { useToast } from \"@/hooks/use-toast\"\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from \"@/components/ui/alert-dialog\"\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from \"@/components/ui/collapsible\"\n\nexport default function FieldsManagement() {\n  const [schemes, setSchemes] = useState<Scheme[]>([])\n  const [components, setComponents] = useState<Component[]>([])\n  const [fields, setFields] = useState<Field[]>([])\n  const [defaultFieldGroups, setDefaultFieldGroups] = useState<FieldGroup[]>([])\n  const [simpleFields, setSimpleFields] = useState<SimpleField[]>([])\n  const [selectedSchemeId, setSelectedSchemeId] = useState<string>(\"\")\n  const [selectedComponentId, setSelectedComponentId] = useState<string>(\"\")\n  const [isLoading, setIsLoading] = useState(false)\n  const [isLoadingDefaults, setIsLoadingDefaults] = useState(false)\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false)\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false)\n  const [fieldToEdit, setFieldToEdit] = useState<Field | null>(null)\n  const [fieldToDelete, setFieldToDelete] = useState<string | null>(null)\n  const [expandedGroups, setExpandedGroups] = useState<Set<string>>(new Set())\n  const { toast } = useToast()\n\n  const loadSchemes = async () => {\n    try {\n      const data = await schemeService.getAllSchemes()\n      setSchemes(data)\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to load schemes\",\n        variant: \"destructive\",\n      })\n    }\n  }\n\n  const loadComponents = async (schemeId: string) => {\n    try {\n      const data = await componentService.getComponentsByScheme(schemeId)\n      setComponents(data)\n      setSelectedComponentId(\"\")\n      setFields([])\n      setDefaultFieldGroups([])\n      setSimpleFields([])\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to load components\",\n        variant: \"destructive\",\n      })\n    }\n  }\n\n  const loadFields = async (componentId: string) => {\n    try {\n      setIsLoading(true)\n      const data = await fieldService.getFieldsByComponent(componentId)\n      setFields(data)\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to load fields\",\n        variant: \"destructive\",\n      })\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const loadDefaultFields = async (componentType: string) => {\n    try {\n      setIsLoadingDefaults(true)\n      const fieldGroups = await defaultFieldsService.getDefaultFieldsByComponent(componentType, \"default\")\n      setDefaultFieldGroups(fieldGroups)\n      setExpandedGroups(new Set(fieldGroups.map((group) => group.heading)))\n\n      // Load simple fields for table display\n      const simpleFieldsData = await defaultFieldsService.getSimpleFieldsByComponent(componentType)\n      console.log(\"[v0] Loaded simple fields:\", simpleFieldsData)\n      console.log(\"[v0] Simple fields count:\", simpleFieldsData.length)\n      setSimpleFields(simpleFieldsData)\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to load default fields\",\n        variant: \"destructive\",\n      })\n    } finally {\n      setIsLoadingDefaults(false)\n    }\n  }\n\n  const toggleGroup = (groupHeading: string) => {\n    const newExpanded = new Set(expandedGroups)\n    if (newExpanded.has(groupHeading)) {\n      newExpanded.delete(groupHeading)\n    } else {\n      newExpanded.add(groupHeading)\n    }\n    setExpandedGroups(newExpanded)\n  }\n\n  const addDefaultFieldToTemplate = async (defaultField: DefaultField) => {\n    try {\n      const newField: Omit<Field, \"id\" | \"createdDate\" | \"createdBy\"> = {\n        englishName: defaultField.englishName,\n        tamilName: defaultField.tamilName,\n        englishDescription: defaultField.englishDescription,\n        tamilDescription: defaultField.tamilDescription,\n        dataType: defaultField.dataType,\n        validation: defaultField.validation || \"\",\n        isRequired: defaultField.isRequired,\n        componentId: selectedComponentId,\n      }\n\n      await fieldService.createField(newField)\n      loadFields(selectedComponentId)\n      toast({\n        title: \"Success\",\n        description: `${defaultField.englishName} added to template`,\n      })\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to add field to template\",\n        variant: \"destructive\",\n      })\n    }\n  }\n\n  const handleFieldCreated = () => {\n    loadFields(selectedComponentId)\n    setIsCreateDialogOpen(false)\n    toast({\n      title: \"Success\",\n      description: \"Field created successfully\",\n    })\n  }\n\n  const handleFieldUpdated = () => {\n    loadFields(selectedComponentId)\n    setIsEditDialogOpen(false)\n    setFieldToEdit(null)\n    toast({\n      title: \"Success\",\n      description: \"Field updated successfully\",\n    })\n  }\n\n  const handleEditField = (field: Field) => {\n    setFieldToEdit(field)\n    setIsEditDialogOpen(true)\n  }\n\n  const handleDeleteField = async (fieldId: string) => {\n    try {\n      await fieldService.deleteField(fieldId)\n      loadFields(selectedComponentId)\n      toast({\n        title: \"Success\",\n        description: \"Field deleted successfully\",\n      })\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to delete field\",\n        variant: \"destructive\",\n      })\n    }\n    setFieldToDelete(null)\n  }\n\n  useEffect(() => {\n    loadSchemes()\n  }, [])\n\n  useEffect(() => {\n    if (selectedSchemeId) {\n      loadComponents(selectedSchemeId)\n    } else {\n      setComponents([])\n      setSelectedComponentId(\"\")\n      setFields([])\n      setDefaultFieldGroups([])\n      setSimpleFields([])\n    }\n  }, [selectedSchemeId])\n\n  useEffect(() => {\n    if (selectedComponentId) {\n      loadFields(selectedComponentId)\n      const selectedComponent = components.find((c) => c.id === selectedComponentId)\n      if (selectedComponent?.componentType) {\n        loadDefaultFields(selectedComponent.componentType)\n      }\n    } else {\n      setFields([])\n      setDefaultFieldGroups([])\n      setSimpleFields([])\n    }\n  }, [selectedComponentId])\n\n  const selectedScheme = schemes.find((scheme) => scheme.id === selectedSchemeId)\n  const selectedComponent = components.find((component) => component.id === selectedComponentId)\n\n  const getDataTypeColor = (dataType: string) => {\n    const colors: Record<string, string> = {\n      string: \"bg-blue-100 text-blue-800\",\n      number: \"bg-green-100 text-green-800\",\n      email: \"bg-purple-100 text-purple-800\",\n      phone: \"bg-orange-100 text-orange-800\",\n      date: \"bg-pink-100 text-pink-800\",\n      boolean: \"bg-gray-100 text-gray-800\",\n      textarea: \"bg-indigo-100 text-indigo-800\",\n      attachment: \"bg-teal-100 text-teal-800\",\n      select: \"bg-yellow-100 text-yellow-800\",\n    }\n    return colors[dataType] || \"bg-gray-100 text-gray-800\"\n  }\n\n  const renderFieldsTable = () => {\n    console.log(\"[v0] Rendering table with simpleFields:\", simpleFields)\n    console.log(\"[v0] Table will show\", simpleFields.length, \"rows\")\n\n    if (simpleFields.length === 0) {\n      return (\n        <Card className=\"text-center py-16 border-0 shadow-xl bg-white/95 backdrop-blur-sm\">\n          <CardContent>\n            <div className=\"mx-auto w-16 h-16 bg-gradient-to-br from-blue-100 to-purple-100 rounded-xl flex items-center justify-center mb-6\">\n              <FileText className=\"h-8 w-8 text-blue-600\" />\n            </div>\n            <h3 className=\"text-xl font-bold mb-3 text-slate-800\">No fields found</h3>\n            <p className=\"text-muted-foreground mb-6 max-w-md mx-auto\">Select a component to view available fields</p>\n          </CardContent>\n        </Card>\n      )\n    }\n\n    return (\n      <div className=\"overflow-x-auto\">\n        <table className=\"w-full border-collapse\">\n          <thead>\n            <tr className=\"bg-[#F3B335] text-[#013A65]\">\n              <th className=\"text-left p-3 font-semibold text-sm border-b border-[#F3B335]/30\">Group</th>\n              <th className=\"text-left p-3 font-semibold text-sm border-b border-[#F3B335]/30\">Field Name</th>\n              <th className=\"text-left p-3 font-semibold text-sm border-b border-[#F3B335]/30\">Type</th>\n              <th className=\"text-left p-3 font-semibold text-sm border-b border-[#F3B335]/30\">Validations</th>\n            </tr>\n          </thead>\n          <tbody>\n            {simpleFields.map((field, index) => {\n              console.log(\"[v0] Rendering field:\", field)\n              return (\n                <tr key={index} className=\"hover:bg-slate-50/80 transition-colors border-b border-slate-200/50\">\n                  <td className=\"p-3 text-sm text-slate-700 font-medium\">{field.group}</td>\n                  <td className=\"p-3 text-sm text-slate-800 font-medium\">{field.name}</td>\n                  <td className=\"p-3\">\n                    <Badge className=\"bg-blue-100 text-blue-800 text-xs px-2 py-1\">{field.type}</Badge>\n                  </td>\n                  <td className=\"p-3 text-sm text-blue-600 font-mono max-w-xs\">\n                    <div className=\"truncate\" title={field.validation}>\n                      {field.validation}\n                    </div>\n                  </td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-gradient-to-r from-[#013A65] to-[#F3B335] rounded-lg py-3 px-6 text-white shadow-lg\">\n        <div className=\"flex justify-between items-center\">\n          <div>\n            <h1 className=\"text-xl font-semibold\">Template Management</h1>\n            <p className=\"text-blue-100 text-sm mt-1\">\n              Manage default fields and create custom templates based on component types\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <Card className=\"border-0 shadow-xl bg-white/80 backdrop-blur-sm\">\n        <CardHeader className=\"pb-4\">\n          <CardTitle className=\"flex items-center gap-2 text-base font-medium\">\n            <div className=\"p-1.5 bg-gradient-to-br from-blue-100 to-purple-100 rounded-lg\">\n              <Database className=\"h-4 w-4 text-blue-600\" />\n            </div>\n            Select Scheme & Component\n          </CardTitle>\n          <CardDescription className=\"text-sm\">Choose a scheme and component to manage its fields</CardDescription>\n        </CardHeader>\n        <CardContent className=\"p-6 space-y-4\">\n          <div className=\"grid gap-4 md:grid-cols-2\">\n            <div>\n              <label className=\"text-sm font-medium mb-2 block\">Scheme</label>\n              <Select value={selectedSchemeId} onValueChange={setSelectedSchemeId}>\n                <SelectTrigger className=\"h-9 w-full min-w-0 bg-white\">\n                  <SelectValue placeholder=\"Select a scheme\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {schemes.map((scheme) => (\n                    <SelectItem key={scheme.id} value={scheme.id}>\n                      <div className=\"flex flex-col py-1 min-w-0\">\n                        <span className=\"font-medium truncate text-sm\">{scheme.englishName}</span>\n                        <span className=\"text-xs text-muted-foreground truncate\">{scheme.tamilName}</span>\n                      </div>\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div>\n              <label className=\"text-sm font-medium mb-2 block\">Component</label>\n              <Select\n                value={selectedComponentId}\n                onValueChange={setSelectedComponentId}\n                disabled={!selectedSchemeId || components.length === 0}\n              >\n                <SelectTrigger className=\"h-9 w-full min-w-0 bg-white\">\n                  <SelectValue placeholder=\"Select a component\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {components.map((component) => (\n                    <SelectItem key={component.id} value={component.id}>\n                      <div className=\"flex flex-col py-1 min-w-0\">\n                        <span className=\"font-medium truncate text-sm\">{component.englishName}</span>\n                        <span className=\"text-xs text-muted-foreground truncate\">{component.tamilName}</span>\n                      </div>\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n\n          {selectedScheme && selectedComponent && (\n            <div className=\"mt-4 p-4 bg-gradient-to-r from-blue-50/80 to-purple-50/80 rounded-xl border border-blue-200/50 backdrop-blur-sm\">\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between items-start\">\n                  <div>\n                    <h3 className=\"font-medium text-base text-slate-800\">{selectedScheme.englishName}</h3>\n                    <p className=\"text-purple-600 font-medium text-sm\">{selectedScheme.tamilName}</p>\n                  </div>\n                  <Badge className=\"bg-gradient-to-r from-blue-100 to-purple-100 text-blue-700 border-0 font-medium text-xs\">\n                    {selectedScheme.englishAbbreviation}\n                  </Badge>\n                </div>\n                <div className=\"border-t border-blue-200/50 pt-3\">\n                  <div className=\"flex justify-between items-center\">\n                    <div>\n                      <p className=\"font-medium text-sm text-slate-800\">{selectedComponent.englishName}</p>\n                      <p className=\"text-xs text-purple-600 font-medium\">{selectedComponent.tamilName}</p>\n                    </div>\n                    <Badge variant=\"outline\" className=\"px-3 py-1 bg-white/80 backdrop-blur-sm border-blue-200 text-xs\">\n                      {fields.length} fields\n                    </Badge>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {selectedComponentId && (\n        <div className=\"grid gap-6 lg:grid-cols-2\">\n          <div className=\"space-y-4\">\n            <div className=\"flex justify-between items-center\">\n              <h2 className=\"text-lg font-medium text-slate-800\">Default Fields</h2>\n              <Badge variant=\"outline\" className=\"px-3 py-1 bg-white/80 backdrop-blur-sm border-[#F3B335] text-xs\">\n                {defaultFieldGroups.reduce((total, group) => total + group.fields.length, 0)} fields\n              </Badge>\n            </div>\n\n            {isLoadingDefaults ? (\n              <div className=\"space-y-4\">\n                {[1, 2, 3].map((i) => (\n                  <Card key={i} className=\"animate-pulse border-0 shadow-lg bg-white/80 backdrop-blur-sm\">\n                    <CardHeader className=\"pb-4\">\n                      <div className=\"h-5 bg-gradient-to-r from-slate-200 to-slate-300 rounded-lg w-3/4\"></div>\n                    </CardHeader>\n                  </Card>\n                ))}\n              </div>\n            ) : defaultFieldGroups.length === 0 ? (\n              <Card className=\"text-center py-8 border-0 shadow-xl bg-white/95 backdrop-blur-sm\">\n                <CardContent>\n                  <div className=\"mx-auto w-12 h-12 bg-gradient-to-br from-[#013A65]/10 to-[#F3B335]/10 rounded-xl flex items-center justify-center mb-4\">\n                    <Database className=\"h-6 w-6 text-[#013A65]\" />\n                  </div>\n                  <h3 className=\"text-lg font-bold mb-2 text-slate-800\">No default fields available</h3>\n                  <p className=\"text-muted-foreground text-sm\">Select a component to view available default fields</p>\n                </CardContent>\n              </Card>\n            ) : (\n              <div className=\"space-y-3\">\n                {defaultFieldGroups.map((group) => (\n                  <Collapsible\n                    key={group.heading}\n                    open={expandedGroups.has(group.heading)}\n                    onOpenChange={() => toggleGroup(group.heading)}\n                  >\n                    <Card className=\"border-0 shadow-lg bg-white/80 backdrop-blur-sm overflow-hidden\">\n                      <CollapsibleTrigger asChild>\n                        <CardHeader className=\"pb-3 cursor-pointer hover:bg-[#F3B335]/5 transition-colors\">\n                          <div className=\"flex items-center justify-between\">\n                            <div className=\"flex items-center gap-3\">\n                              {expandedGroups.has(group.heading) ? (\n                                <ChevronDown className=\"h-4 w-4 text-[#013A65]\" />\n                              ) : (\n                                <ChevronRight className=\"h-4 w-4 text-[#013A65]\" />\n                              )}\n                              <CardTitle className=\"text-base font-medium text-[#013A65]\">{group.heading}</CardTitle>\n                            </div>\n                            <Badge className=\"bg-[#F3B335]/20 text-[#013A65] border-[#F3B335]/30 text-xs\">\n                              {group.fields.length} fields\n                            </Badge>\n                          </div>\n                        </CardHeader>\n                      </CollapsibleTrigger>\n                      <CollapsibleContent>\n                        <CardContent className=\"pt-0 space-y-2\">\n                          {group.fields.map((field) => (\n                            <div\n                              key={field.id}\n                              className=\"flex items-center justify-between p-3 bg-slate-50/80 rounded-lg border border-slate-200/50 hover:bg-slate-100/80 transition-colors\"\n                            >\n                              <div className=\"flex-1 min-w-0\">\n                                <div className=\"flex items-center gap-2 mb-1\">\n                                  <h4 className=\"font-medium text-sm text-slate-800 truncate\">{field.englishName}</h4>\n                                  <Badge className={`${getDataTypeColor(field.dataType)} text-xs px-2 py-0.5`}>\n                                    {field.dataType}\n                                  </Badge>\n                                  {field.isRequired && (\n                                    <Badge className=\"bg-red-100 text-red-700 text-xs px-2 py-0.5\">Required</Badge>\n                                  )}\n                                </div>\n                                <p className=\"text-xs text-slate-600 truncate\">{field.tamilName}</p>\n                                {field.validation && (\n                                  <p className=\"text-xs text-blue-600 font-mono mt-1\">{field.validation}</p>\n                                )}\n                              </div>\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline\"\n                                className=\"ml-3 h-8 px-3 text-xs bg-[#013A65] text-white border-[#013A65] hover:bg-[#013A65]/90\"\n                                onClick={() => addDefaultFieldToTemplate(field)}\n                              >\n                                <Plus className=\"h-3 w-3 mr-1\" />\n                                Add\n                              </Button>\n                            </div>\n                          ))}\n                        </CardContent>\n                      </CollapsibleContent>\n                    </Card>\n                  </Collapsible>\n                ))}\n              </div>\n            )}\n          </div>\n\n          <div className=\"space-y-4\">\n            <div className=\"flex justify-between items-center\">\n              <h2 className=\"text-lg font-medium text-slate-800\">Template Fields</h2>\n              <div className=\"flex items-center gap-2\">\n                <Badge variant=\"outline\" className=\"px-3 py-1 bg-white/80 backdrop-blur-sm border-[#F3B335] text-xs\">\n                  {simpleFields.length} fields\n                </Badge>\n                {selectedComponentId && (\n                  <Button\n                    onClick={() => setIsCreateDialogOpen(true)}\n                    size=\"sm\"\n                    className=\"bg-gradient-to-r from-[#013A65] to-[#F3B335] hover:from-[#013A65]/90 hover:to-[#F3B335]/90 text-white border-0 shadow-lg hover:shadow-xl transition-all duration-300 h-8 px-3 text-xs\"\n                  >\n                    <Plus className=\"h-3 w-3 mr-1\" />\n                    Custom Field\n                  </Button>\n                )}\n              </div>\n            </div>\n\n            {isLoading ? (\n              <div className=\"space-y-4\">\n                {[1, 2, 3].map((i) => (\n                  <div key={i} className=\"animate-pulse bg-slate-200 h-16 rounded-lg\"></div>\n                ))}\n              </div>\n            ) : (\n              renderFieldsTable()\n            )}\n          </div>\n        </div>\n      )}\n\n      <CreateFieldDialog\n        open={isCreateDialogOpen}\n        onOpenChange={setIsCreateDialogOpen}\n        onFieldCreated={handleFieldCreated}\n        componentId={selectedComponentId}\n        componentName={selectedComponent?.englishName || \"\"}\n      />\n\n      <EditFieldDialog\n        open={isEditDialogOpen}\n        onOpenChange={setIsEditDialogOpen}\n        onFieldUpdated={handleFieldUpdated}\n        field={fieldToEdit}\n      />\n\n      <AlertDialog open={!!fieldToDelete} onOpenChange={() => setFieldToDelete(null)}>\n        <AlertDialogContent className=\"border-0 shadow-2xl bg-white/95 backdrop-blur-sm\">\n          <AlertDialogHeader>\n            <AlertDialogTitle className=\"text-xl font-bold text-slate-800\">Delete Field</AlertDialogTitle>\n            <AlertDialogDescription className=\"text-slate-600 leading-relaxed\">\n              Are you sure you want to delete this field? This action cannot be undone.\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel className=\"border-slate-300 hover:bg-slate-50\">Cancel</AlertDialogCancel>\n            <AlertDialogAction\n              onClick={() => fieldToDelete && handleDeleteField(fieldToDelete)}\n              className=\"bg-gradient-to-r from-red-500 to-red-600 hover:from-red-600 hover:to-red-700 text-white border-0 shadow-lg\"\n            >\n              Delete\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </div>\n  )\n}\n","\"use client\"\n\nimport React from \"react\"\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Checkbox } from \"@/components/ui/checkbox\"\nimport { Loader2, FileText, Hash, Calendar, Type, Paperclip, X } from \"lucide-react\"\nimport { fieldService, type CreateFieldRequest } from \"@/services/field-service\"\nimport { useAuth } from \"@/hooks/use-auth\"\n\ninterface CreateFieldDialogProps {\n  open: boolean\n  onOpenChange: (open: boolean) => void\n  onFieldCreated: () => void\n  componentId: string\n  componentName: string\n}\n\nconst DATA_TYPES = [\n  { value: \"string\", label: \"Text (String)\", icon: Type },\n  { value: \"number\", label: \"Number\", icon: Hash },\n  { value: \"email\", label: \"Email\", icon: Type },\n  { value: \"phone\", label: \"Phone Number\", icon: Type },\n  { value: \"date\", label: \"Date\", icon: Calendar },\n  { value: \"boolean\", label: \"Boolean (Yes/No)\", icon: Type },\n  { value: \"textarea\", label: \"Long Text (Textarea)\", icon: FileText },\n  { value: \"attachment\", label: \"File Attachment\", icon: Paperclip },\n]\n\nconst FILE_TYPES = [\n  { value: \"pdf\", label: \"PDF Documents (.pdf)\" },\n  { value: \"doc\", label: \"Word Documents (.doc, .docx)\" },\n  { value: \"xls\", label: \"Excel Files (.xls, .xlsx)\" },\n  { value: \"ppt\", label: \"PowerPoint (.ppt, .pptx)\" },\n  { value: \"jpg\", label: \"JPEG Images (.jpg, .jpeg)\" },\n  { value: \"png\", label: \"PNG Images (.png)\" },\n  { value: \"gif\", label: \"GIF Images (.gif)\" },\n  { value: \"txt\", label: \"Text Files (.txt)\" },\n  { value: \"zip\", label: \"ZIP Archives (.zip)\" },\n  { value: \"mp4\", label: \"MP4 Videos (.mp4)\" },\n  { value: \"mp3\", label: \"MP3 Audio (.mp3)\" },\n  { value: \"csv\", label: \"CSV Files (.csv)\" },\n]\n\nexport default function CreateFieldDialog({\n  open,\n  onOpenChange,\n  onFieldCreated,\n  componentId,\n  componentName,\n}: CreateFieldDialogProps) {\n  const { user } = useAuth()\n  const [isLoading, setIsLoading] = useState(false)\n  const [formData, setFormData] = useState<CreateFieldRequest>({\n    componentId: componentId,\n    englishName: \"\",\n    englishDescription: \"\",\n    tamilName: \"\",\n    tamilDescription: \"\",\n    dataType: \"\",\n    validation: \"\",\n    isRequired: false,\n    createdBy: user?.name || \"Super Admin\",\n  })\n\n  const [selectedFileTypes, setSelectedFileTypes] = useState<string[]>([])\n\n  // Update componentId when it changes\n  React.useEffect(() => {\n    setFormData((prev) => ({ ...prev, componentId }))\n  }, [componentId])\n\n  const generateValidationString = () => {\n    if (formData.dataType === \"attachment\" && selectedFileTypes.length > 0) {\n      return `allowedTypes:${selectedFileTypes.join(\",\")}`\n    }\n    return \"\"\n  }\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setIsLoading(true)\n\n    try {\n      const validationString = generateValidationString()\n      const fieldData = { ...formData, validation: validationString || formData.validation }\n\n      await fieldService.createField(fieldData)\n      onFieldCreated()\n      setFormData({\n        componentId: componentId,\n        englishName: \"\",\n        englishDescription: \"\",\n        tamilName: \"\",\n        tamilDescription: \"\",\n        dataType: \"\",\n        validation: \"\",\n        isRequired: false,\n        createdBy: user?.name || \"Super Admin\",\n      })\n      setSelectedFileTypes([])\n    } catch (error) {\n      console.error(\"Failed to create field:\", error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleInputChange = (field: keyof CreateFieldRequest, value: string | boolean) => {\n    setFormData((prev) => ({ ...prev, [field]: value }))\n  }\n\n  const handleFileTypeSelect = (fileType: string) => {\n    if (!selectedFileTypes.includes(fileType)) {\n      setSelectedFileTypes([...selectedFileTypes, fileType])\n    }\n  }\n\n  const removeFileType = (fileType: string) => {\n    setSelectedFileTypes(selectedFileTypes.filter((type) => type !== fileType))\n  }\n\n  const renderValidationFields = () => {\n    if (formData.dataType === \"attachment\") {\n      return (\n        <div className=\"space-y-4\">\n          <div className=\"space-y-2\">\n            <Label className=\"text-xs font-medium text-slate-700 dark:text-slate-300\">Allowed File Types *</Label>\n            <Select onValueChange={handleFileTypeSelect}>\n              <SelectTrigger className=\"h-8 text-sm\">\n                <SelectValue placeholder=\"Select allowed file types\" />\n              </SelectTrigger>\n              <SelectContent>\n                {FILE_TYPES.filter((type) => !selectedFileTypes.includes(type.value)).map((type) => (\n                  <SelectItem key={type.value} value={type.value}>\n                    <span className=\"text-sm\">{type.label}</span>\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n\n          {selectedFileTypes.length > 0 && (\n            <div className=\"space-y-2\">\n              <Label className=\"text-xs font-medium text-slate-700 dark:text-slate-300\">Selected File Types</Label>\n              <div className=\"flex flex-wrap gap-2\">\n                {selectedFileTypes.map((fileType) => {\n                  const fileTypeData = FILE_TYPES.find((type) => type.value === fileType)\n                  return (\n                    <div\n                      key={fileType}\n                      className=\"flex items-center gap-1 px-2 py-1 bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-200 rounded-md text-xs\"\n                    >\n                      <span>{fileTypeData?.label}</span>\n                      <button\n                        type=\"button\"\n                        onClick={() => removeFileType(fileType)}\n                        className=\"hover:bg-blue-200 dark:hover:bg-blue-800/50 rounded-full p-0.5\"\n                      >\n                        <X className=\"h-3 w-3\" />\n                      </button>\n                    </div>\n                  )\n                })}\n              </div>\n            </div>\n          )}\n        </div>\n      )\n    }\n    return null\n  }\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent\n        className=\"sm:max-w-[900px] max-h-[95vh] overflow-y-auto bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50 dark:from-slate-900 dark:via-slate-800 dark:to-slate-900 border-0 shadow-2xl backdrop-blur-sm\"\n        onPointerDownOutside={(e) => e.preventDefault()}\n        onEscapeKeyDown={(e) => e.preventDefault()}\n      >\n        <DialogHeader className=\"pb-4 border-b border-slate-200/50 dark:border-slate-700/50\">\n          <DialogTitle className=\"text-xl font-bold bg-gradient-to-r from-slate-900 to-slate-700 dark:from-slate-100 dark:to-slate-300 bg-clip-text text-transparent\">\n            Create New Field\n          </DialogTitle>\n          <DialogDescription className=\"text-sm text-slate-600 dark:text-slate-400\">\n            Add a new field to <strong className=\"text-slate-800 dark:text-slate-200\">{componentName}</strong> with data\n            type and validation rules\n          </DialogDescription>\n        </DialogHeader>\n\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          <div className=\"grid gap-6 md:grid-cols-2\">\n            {/* English Fields */}\n            <div className=\"space-y-4 p-4 bg-gradient-to-br from-white/80 to-slate-50/80 dark:from-slate-800/80 dark:to-slate-900/80 rounded-lg border border-slate-200/50 dark:border-slate-700/50 backdrop-blur-sm shadow-sm\">\n              <h3 className=\"text-sm font-semibold flex items-center gap-2 text-slate-800 dark:text-slate-200\">\n                <div className=\"w-1.5 h-1.5 bg-blue-500 rounded-full\"></div>\n                English Details\n              </h3>\n\n              <div className=\"space-y-1.5\">\n                <Label htmlFor=\"englishName\" className=\"text-xs font-medium text-slate-700 dark:text-slate-300\">\n                  Field Name *\n                </Label>\n                <Input\n                  id=\"englishName\"\n                  value={formData.englishName}\n                  onChange={(e) => handleInputChange(\"englishName\", e.target.value)}\n                  placeholder=\"Enter English field name\"\n                  className=\"h-8 text-sm\"\n                  required\n                />\n              </div>\n\n              <div className=\"space-y-1.5\">\n                <Label htmlFor=\"englishDescription\" className=\"text-xs font-medium text-slate-700 dark:text-slate-300\">\n                  Description *\n                </Label>\n                <Textarea\n                  id=\"englishDescription\"\n                  value={formData.englishDescription}\n                  onChange={(e) => handleInputChange(\"englishDescription\", e.target.value)}\n                  placeholder=\"Enter English description\"\n                  rows={3}\n                  className=\"resize-none text-sm\"\n                  required\n                />\n              </div>\n            </div>\n\n            {/* Tamil Fields */}\n            <div className=\"space-y-4 p-4 bg-gradient-to-br from-white/80 to-slate-50/80 dark:from-slate-800/80 dark:to-slate-900/80 rounded-lg border border-slate-200/50 dark:border-slate-700/50 backdrop-blur-sm shadow-sm\">\n              <h3 className=\"text-sm font-semibold flex items-center gap-2 text-slate-800 dark:text-slate-200\">\n                <div className=\"w-1.5 h-1.5 bg-green-500 rounded-full\"></div>\n                Tamil Details\n              </h3>\n\n              <div className=\"space-y-1.5\">\n                <Label htmlFor=\"tamilName\" className=\"text-xs font-medium text-slate-700 dark:text-slate-300\">\n                  Field Name *\n                </Label>\n                <Input\n                  id=\"tamilName\"\n                  value={formData.tamilName}\n                  onChange={(e) => handleInputChange(\"tamilName\", e.target.value)}\n                  placeholder=\"Enter Tamil field name\"\n                  className=\"h-8 text-sm\"\n                  required\n                />\n              </div>\n\n              <div className=\"space-y-1.5\">\n                <Label htmlFor=\"tamilDescription\" className=\"text-xs font-medium text-slate-700 dark:text-slate-300\">\n                  Description *\n                </Label>\n                <Textarea\n                  id=\"tamilDescription\"\n                  value={formData.tamilDescription}\n                  onChange={(e) => handleInputChange(\"tamilDescription\", e.target.value)}\n                  placeholder=\"Enter Tamil description\"\n                  rows={3}\n                  className=\"resize-none text-sm\"\n                  required\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* Field Configuration */}\n          <div className=\"space-y-4 p-4 bg-gradient-to-br from-white/80 to-slate-50/80 dark:from-slate-800/80 dark:to-slate-900/80 rounded-lg border border-slate-200/50 dark:border-slate-700/50 backdrop-blur-sm shadow-sm\">\n            <h3 className=\"text-sm font-semibold flex items-center gap-2 text-slate-800 dark:text-slate-200\">\n              <div className=\"w-1.5 h-1.5 bg-purple-500 rounded-full\"></div>\n              Field Configuration\n            </h3>\n\n            <div className=\"space-y-1.5\">\n              <Label htmlFor=\"dataType\" className=\"text-xs font-medium text-slate-700 dark:text-slate-300\">\n                Data Type *\n              </Label>\n              <Select value={formData.dataType} onValueChange={(value) => handleInputChange(\"dataType\", value)}>\n                <SelectTrigger className=\"h-8 text-sm\">\n                  <SelectValue placeholder=\"Select data type\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {DATA_TYPES.map((type) => {\n                    const IconComponent = type.icon\n                    return (\n                      <SelectItem key={type.value} value={type.value}>\n                        <div className=\"flex items-center gap-2\">\n                          <IconComponent className=\"h-3 w-3\" />\n                          <span className=\"text-sm\">{type.label}</span>\n                        </div>\n                      </SelectItem>\n                    )\n                  })}\n                </SelectContent>\n              </Select>\n            </div>\n\n            {renderValidationFields()}\n\n            <div className=\"flex items-center space-x-2 p-3 bg-white/60 dark:bg-slate-800/60 rounded-md border border-slate-200/50 dark:border-slate-700/50\">\n              <Checkbox\n                id=\"isRequired\"\n                checked={formData.isRequired}\n                onCheckedChange={(checked) => handleInputChange(\"isRequired\", !!checked)}\n              />\n              <Label\n                htmlFor=\"isRequired\"\n                className=\"text-xs font-medium cursor-pointer text-slate-700 dark:text-slate-300\"\n              >\n                This field is required\n              </Label>\n            </div>\n          </div>\n\n          <DialogFooter className=\"pt-4 border-t border-slate-200/50 dark:border-slate-700/50\">\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={() => onOpenChange(false)}\n              disabled={isLoading}\n              size=\"sm\"\n              className=\"text-sm\"\n            >\n              Cancel\n            </Button>\n            <Button type=\"submit\" disabled={isLoading} size=\"sm\" className=\"text-sm\">\n              {isLoading ? (\n                <>\n                  <Loader2 className=\"mr-1.5 h-3 w-3 animate-spin\" />\n                  Creating...\n                </>\n              ) : (\n                \"Create Field\"\n              )}\n            </Button>\n          </DialogFooter>\n        </form>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","\"use client\"\n\nimport type React from \"react\"\n\nimport { useState, useEffect } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Checkbox } from \"@/components/ui/checkbox\"\nimport { Loader2, FileText, Hash, Calendar, Type, Paperclip, X } from \"lucide-react\"\nimport { fieldService, type Field } from \"@/services/field-service\"\nimport { useToast } from \"@/hooks/use-toast\"\n\ninterface EditFieldDialogProps {\n  open: boolean\n  onOpenChange: (open: boolean) => void\n  onFieldUpdated: () => void\n  field: Field | null\n}\n\nconst DATA_TYPES = [\n  { value: \"string\", label: \"Text (String)\", icon: Type },\n  { value: \"number\", label: \"Number\", icon: Hash },\n  { value: \"email\", label: \"Email\", icon: Type },\n  { value: \"phone\", label: \"Phone Number\", icon: Type },\n  { value: \"date\", label: \"Date\", icon: Calendar },\n  { value: \"boolean\", label: \"Boolean (Yes/No)\", icon: Type },\n  { value: \"textarea\", label: \"Long Text (Textarea)\", icon: FileText },\n  { value: \"attachment\", label: \"File Attachment\", icon: Paperclip },\n]\n\nconst FILE_TYPES = [\n  { value: \"pdf\", label: \"PDF Documents (.pdf)\" },\n  { value: \"doc\", label: \"Word Documents (.doc, .docx)\" },\n  { value: \"xls\", label: \"Excel Files (.xls, .xlsx)\" },\n  { value: \"ppt\", label: \"PowerPoint (.ppt, .pptx)\" },\n  { value: \"jpg\", label: \"JPEG Images (.jpg, .jpeg)\" },\n  { value: \"png\", label: \"PNG Images (.png)\" },\n  { value: \"gif\", label: \"GIF Images (.gif)\" },\n  { value: \"txt\", label: \"Text Files (.txt)\" },\n  { value: \"zip\", label: \"ZIP Archives (.zip)\" },\n  { value: \"mp4\", label: \"MP4 Videos (.mp4)\" },\n  { value: \"mp3\", label: \"MP3 Audio (.mp3)\" },\n  { value: \"csv\", label: \"CSV Files (.csv)\" },\n]\n\nexport default function EditFieldDialog({ open, onOpenChange, onFieldUpdated, field }: EditFieldDialogProps) {\n  const [formData, setFormData] = useState({\n    englishName: \"\",\n    tamilName: \"\",\n    englishDescription: \"\",\n    tamilDescription: \"\",\n    dataType: \"\",\n    validation: \"\",\n    isRequired: false,\n  })\n  const [isLoading, setIsLoading] = useState(false)\n  const [selectedFileTypes, setSelectedFileTypes] = useState<string[]>([])\n  const { toast } = useToast()\n\n  useEffect(() => {\n    if (field) {\n      setFormData({\n        englishName: field.englishName,\n        tamilName: field.tamilName,\n        englishDescription: field.englishDescription,\n        tamilDescription: field.tamilDescription,\n        dataType: field.dataType,\n        validation: field.validation || \"\",\n        isRequired: field.isRequired,\n      })\n\n      if (field.dataType === \"attachment\" && field.validation) {\n        const fileTypesMatch = field.validation.match(/allowedTypes:([^,]+)/)\n        if (fileTypesMatch) {\n          setSelectedFileTypes(fileTypesMatch[1].split(\",\"))\n        }\n      }\n    }\n  }, [field])\n\n  const handleFileTypeSelect = (fileType: string) => {\n    if (!selectedFileTypes.includes(fileType)) {\n      setSelectedFileTypes([...selectedFileTypes, fileType])\n    }\n  }\n\n  const removeFileType = (fileType: string) => {\n    setSelectedFileTypes(selectedFileTypes.filter((type) => type !== fileType))\n  }\n\n  const generateValidationString = () => {\n    if (formData.dataType === \"attachment\" && selectedFileTypes.length > 0) {\n      return `allowedTypes:${selectedFileTypes.join(\",\")}`\n    }\n    return \"\"\n  }\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    if (!field) return\n\n    setIsLoading(true)\n    try {\n      const validationString = generateValidationString()\n      await fieldService.updateField(field.id, {\n        ...formData,\n        validation: validationString || formData.validation || undefined,\n      })\n      onFieldUpdated()\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to update field\",\n        variant: \"destructive\",\n      })\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleInputChange = (field: keyof typeof formData, value: string | boolean) => {\n    setFormData((prev) => ({ ...prev, [field]: value }))\n  }\n\n  const renderValidationFields = () => {\n    if (formData.dataType === \"attachment\") {\n      return (\n        <div className=\"space-y-4\">\n          <div className=\"space-y-2\">\n            <Label className=\"text-xs font-medium text-slate-700 dark:text-slate-300\">Allowed File Types *</Label>\n            <Select onValueChange={handleFileTypeSelect}>\n              <SelectTrigger className=\"h-8 text-sm\">\n                <SelectValue placeholder=\"Select allowed file types\" />\n              </SelectTrigger>\n              <SelectContent>\n                {FILE_TYPES.filter((type) => !selectedFileTypes.includes(type.value)).map((type) => (\n                  <SelectItem key={type.value} value={type.value}>\n                    <span className=\"text-sm\">{type.label}</span>\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n\n          {selectedFileTypes.length > 0 && (\n            <div className=\"space-y-2\">\n              <Label className=\"text-xs font-medium text-slate-700 dark:text-slate-300\">Selected File Types</Label>\n              <div className=\"flex flex-wrap gap-2\">\n                {selectedFileTypes.map((fileType) => {\n                  const fileTypeData = FILE_TYPES.find((type) => type.value === fileType)\n                  return (\n                    <div\n                      key={fileType}\n                      className=\"flex items-center gap-1 px-2 py-1 bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-200 rounded-md text-xs\"\n                    >\n                      <span>{fileTypeData?.label}</span>\n                      <button\n                        type=\"button\"\n                        onClick={() => removeFileType(fileType)}\n                        className=\"hover:bg-blue-200 dark:hover:bg-blue-800/50 rounded-full p-0.5\"\n                      >\n                        <X className=\"h-3 w-3\" />\n                      </button>\n                    </div>\n                  )\n                })}\n              </div>\n            </div>\n          )}\n        </div>\n      )\n    }\n    return null\n  }\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-[900px] max-h-[95vh] overflow-y-auto bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50 dark:from-slate-900 dark:via-slate-800 dark:to-slate-900 border-0 shadow-2xl backdrop-blur-sm\">\n        <DialogHeader className=\"pb-4 border-b border-slate-200/50 dark:border-slate-700/50\">\n          <DialogTitle className=\"text-xl font-bold bg-gradient-to-r from-slate-900 to-slate-700 dark:from-slate-100 dark:to-slate-300 bg-clip-text text-transparent\">\n            Edit Field\n          </DialogTitle>\n          <DialogDescription className=\"text-sm text-slate-600 dark:text-slate-400\">\n            Update field information and validation rules\n          </DialogDescription>\n        </DialogHeader>\n\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          <div className=\"grid gap-6 md:grid-cols-2\">\n            {/* English Fields */}\n            <div className=\"space-y-4 p-4 bg-gradient-to-br from-white/80 to-slate-50/80 dark:from-slate-800/80 dark:to-slate-900/80 rounded-lg border border-slate-200/50 dark:border-slate-700/50 backdrop-blur-sm shadow-sm\">\n              <h3 className=\"text-sm font-semibold flex items-center gap-2 text-slate-800 dark:text-slate-200\">\n                <div className=\"w-1.5 h-1.5 bg-blue-500 rounded-full\"></div>\n                English Details\n              </h3>\n\n              <div className=\"space-y-1.5\">\n                <Label htmlFor=\"englishName\" className=\"text-xs font-medium text-slate-700 dark:text-slate-300\">\n                  Field Name *\n                </Label>\n                <Input\n                  id=\"englishName\"\n                  value={formData.englishName}\n                  onChange={(e) => handleInputChange(\"englishName\", e.target.value)}\n                  className=\"h-8 text-sm\"\n                  required\n                />\n              </div>\n\n              <div className=\"space-y-1.5\">\n                <Label htmlFor=\"englishDescription\" className=\"text-xs font-medium text-slate-700 dark:text-slate-300\">\n                  Description *\n                </Label>\n                <Textarea\n                  id=\"englishDescription\"\n                  value={formData.englishDescription}\n                  onChange={(e) => handleInputChange(\"englishDescription\", e.target.value)}\n                  rows={3}\n                  className=\"resize-none text-sm\"\n                  required\n                />\n              </div>\n            </div>\n\n            {/* Tamil Fields */}\n            <div className=\"space-y-4 p-4 bg-gradient-to-br from-white/80 to-slate-50/80 dark:from-slate-800/80 dark:to-slate-900/80 rounded-lg border border-slate-200/50 dark:border-slate-700/50 backdrop-blur-sm shadow-sm\">\n              <h3 className=\"text-sm font-semibold flex items-center gap-2 text-slate-800 dark:text-slate-200\">\n                <div className=\"w-1.5 h-1.5 bg-green-500 rounded-full\"></div>\n                Tamil Details\n              </h3>\n\n              <div className=\"space-y-1.5\">\n                <Label htmlFor=\"tamilName\" className=\"text-xs font-medium text-slate-700 dark:text-slate-300\">\n                  Field Name *\n                </Label>\n                <Input\n                  id=\"tamilName\"\n                  value={formData.tamilName}\n                  onChange={(e) => handleInputChange(\"tamilName\", e.target.value)}\n                  className=\"h-8 text-sm\"\n                  required\n                />\n              </div>\n\n              <div className=\"space-y-1.5\">\n                <Label htmlFor=\"tamilDescription\" className=\"text-xs font-medium text-slate-700 dark:text-slate-300\">\n                  Description *\n                </Label>\n                <Textarea\n                  id=\"tamilDescription\"\n                  value={formData.tamilDescription}\n                  onChange={(e) => handleInputChange(\"tamilDescription\", e.target.value)}\n                  rows={3}\n                  className=\"resize-none text-sm\"\n                  required\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* Field Configuration */}\n          <div className=\"space-y-4 p-4 bg-gradient-to-br from-white/80 to-slate-50/80 dark:from-slate-800/80 dark:to-slate-900/80 rounded-lg border border-slate-200/50 dark:border-slate-700/50 backdrop-blur-sm shadow-sm\">\n            <h3 className=\"text-sm font-semibold flex items-center gap-2 text-slate-800 dark:text-slate-200\">\n              <div className=\"w-1.5 h-1.5 bg-purple-500 rounded-full\"></div>\n              Field Configuration\n            </h3>\n\n            <div className=\"space-y-1.5\">\n              <Label htmlFor=\"dataType\" className=\"text-xs font-medium text-slate-700 dark:text-slate-300\">\n                Data Type *\n              </Label>\n              <Select\n                value={formData.dataType}\n                onValueChange={(value) => {\n                  handleInputChange(\"dataType\", value)\n                  setSelectedFileTypes([])\n                }}\n              >\n                <SelectTrigger className=\"h-8 text-sm\">\n                  <SelectValue placeholder=\"Select data type\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {DATA_TYPES.map((type) => {\n                    const IconComponent = type.icon\n                    return (\n                      <SelectItem key={type.value} value={type.value}>\n                        <div className=\"flex items-center gap-2\">\n                          <IconComponent className=\"h-3 w-3\" />\n                          <span className=\"text-sm\">{type.label}</span>\n                        </div>\n                      </SelectItem>\n                    )\n                  })}\n                </SelectContent>\n              </Select>\n            </div>\n\n            {renderValidationFields()}\n\n            <div className=\"flex items-center space-x-2 p-3 bg-white/60 dark:bg-slate-800/60 rounded-md border border-slate-200/50 dark:border-slate-700/50\">\n              <Checkbox\n                id=\"isRequired\"\n                checked={formData.isRequired}\n                onCheckedChange={(checked) => handleInputChange(\"isRequired\", !!checked)}\n              />\n              <Label\n                htmlFor=\"isRequired\"\n                className=\"text-xs font-medium cursor-pointer text-slate-700 dark:text-slate-300\"\n              >\n                This field is required\n              </Label>\n            </div>\n          </div>\n\n          <DialogFooter className=\"pt-4 border-t border-slate-200/50 dark:border-slate-700/50\">\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={() => onOpenChange(false)}\n              disabled={isLoading}\n              size=\"sm\"\n              className=\"text-sm\"\n            >\n              Cancel\n            </Button>\n            <Button type=\"submit\" disabled={isLoading} size=\"sm\" className=\"text-sm\">\n              {isLoading ? (\n                <>\n                  <Loader2 className=\"mr-1.5 h-3 w-3 animate-spin\" />\n                  Updating...\n                </>\n              ) : (\n                \"Update Field\"\n              )}\n            </Button>\n          </DialogFooter>\n        </form>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","\"use client\";\n\n// packages/react/collapsible/src/Collapsible.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { useId } from \"@radix-ui/react-id\";\nimport { jsx } from \"react/jsx-runtime\";\nvar COLLAPSIBLE_NAME = \"Collapsible\";\nvar [createCollapsibleContext, createCollapsibleScope] = createContextScope(COLLAPSIBLE_NAME);\nvar [CollapsibleProvider, useCollapsibleContext] = createCollapsibleContext(COLLAPSIBLE_NAME);\nvar Collapsible = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeCollapsible,\n      open: openProp,\n      defaultOpen,\n      disabled,\n      onOpenChange,\n      ...collapsibleProps\n    } = props;\n    const [open = false, setOpen] = useControllableState({\n      prop: openProp,\n      defaultProp: defaultOpen,\n      onChange: onOpenChange\n    });\n    return /* @__PURE__ */ jsx(\n      CollapsibleProvider,\n      {\n        scope: __scopeCollapsible,\n        disabled,\n        contentId: useId(),\n        open,\n        onOpenToggle: React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen]),\n        children: /* @__PURE__ */ jsx(\n          Primitive.div,\n          {\n            \"data-state\": getState(open),\n            \"data-disabled\": disabled ? \"\" : void 0,\n            ...collapsibleProps,\n            ref: forwardedRef\n          }\n        )\n      }\n    );\n  }\n);\nCollapsible.displayName = COLLAPSIBLE_NAME;\nvar TRIGGER_NAME = \"CollapsibleTrigger\";\nvar CollapsibleTrigger = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeCollapsible, ...triggerProps } = props;\n    const context = useCollapsibleContext(TRIGGER_NAME, __scopeCollapsible);\n    return /* @__PURE__ */ jsx(\n      Primitive.button,\n      {\n        type: \"button\",\n        \"aria-controls\": context.contentId,\n        \"aria-expanded\": context.open || false,\n        \"data-state\": getState(context.open),\n        \"data-disabled\": context.disabled ? \"\" : void 0,\n        disabled: context.disabled,\n        ...triggerProps,\n        ref: forwardedRef,\n        onClick: composeEventHandlers(props.onClick, context.onOpenToggle)\n      }\n    );\n  }\n);\nCollapsibleTrigger.displayName = TRIGGER_NAME;\nvar CONTENT_NAME = \"CollapsibleContent\";\nvar CollapsibleContent = React.forwardRef(\n  (props, forwardedRef) => {\n    const { forceMount, ...contentProps } = props;\n    const context = useCollapsibleContext(CONTENT_NAME, props.__scopeCollapsible);\n    return /* @__PURE__ */ jsx(Presence, { present: forceMount || context.open, children: ({ present }) => /* @__PURE__ */ jsx(CollapsibleContentImpl, { ...contentProps, ref: forwardedRef, present }) });\n  }\n);\nCollapsibleContent.displayName = CONTENT_NAME;\nvar CollapsibleContentImpl = React.forwardRef((props, forwardedRef) => {\n  const { __scopeCollapsible, present, children, ...contentProps } = props;\n  const context = useCollapsibleContext(CONTENT_NAME, __scopeCollapsible);\n  const [isPresent, setIsPresent] = React.useState(present);\n  const ref = React.useRef(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const heightRef = React.useRef(0);\n  const height = heightRef.current;\n  const widthRef = React.useRef(0);\n  const width = widthRef.current;\n  const isOpen = context.open || isPresent;\n  const isMountAnimationPreventedRef = React.useRef(isOpen);\n  const originalStylesRef = React.useRef(void 0);\n  React.useEffect(() => {\n    const rAF = requestAnimationFrame(() => isMountAnimationPreventedRef.current = false);\n    return () => cancelAnimationFrame(rAF);\n  }, []);\n  useLayoutEffect(() => {\n    const node = ref.current;\n    if (node) {\n      originalStylesRef.current = originalStylesRef.current || {\n        transitionDuration: node.style.transitionDuration,\n        animationName: node.style.animationName\n      };\n      node.style.transitionDuration = \"0s\";\n      node.style.animationName = \"none\";\n      const rect = node.getBoundingClientRect();\n      heightRef.current = rect.height;\n      widthRef.current = rect.width;\n      if (!isMountAnimationPreventedRef.current) {\n        node.style.transitionDuration = originalStylesRef.current.transitionDuration;\n        node.style.animationName = originalStylesRef.current.animationName;\n      }\n      setIsPresent(present);\n    }\n  }, [context.open, present]);\n  return /* @__PURE__ */ jsx(\n    Primitive.div,\n    {\n      \"data-state\": getState(context.open),\n      \"data-disabled\": context.disabled ? \"\" : void 0,\n      id: context.contentId,\n      hidden: !isOpen,\n      ...contentProps,\n      ref: composedRefs,\n      style: {\n        [`--radix-collapsible-content-height`]: height ? `${height}px` : void 0,\n        [`--radix-collapsible-content-width`]: width ? `${width}px` : void 0,\n        ...props.style\n      },\n      children: isOpen && children\n    }\n  );\n});\nfunction getState(open) {\n  return open ? \"open\" : \"closed\";\n}\nvar Root = Collapsible;\nvar Trigger = CollapsibleTrigger;\nvar Content = CollapsibleContent;\nexport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n  Content,\n  Root,\n  Trigger,\n  createCollapsibleScope\n};\n//# sourceMappingURL=index.mjs.map\n","'use client'\n\nimport * as CollapsiblePrimitive from '@radix-ui/react-collapsible'\n\nfunction Collapsible({\n  ...props\n}: React.ComponentProps<typeof CollapsiblePrimitive.Root>) {\n  return <CollapsiblePrimitive.Root data-slot=\"collapsible\" {...props} />\n}\n\nfunction CollapsibleTrigger({\n  ...props\n}: React.ComponentProps<typeof CollapsiblePrimitive.CollapsibleTrigger>) {\n  return (\n    <CollapsiblePrimitive.CollapsibleTrigger\n      data-slot=\"collapsible-trigger\"\n      {...props}\n    />\n  )\n}\n\nfunction CollapsibleContent({\n  ...props\n}: React.ComponentProps<typeof CollapsiblePrimitive.CollapsibleContent>) {\n  return (\n    <CollapsiblePrimitive.CollapsibleContent\n      data-slot=\"collapsible-content\"\n      {...props}\n    />\n  )\n}\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","export interface DefaultField {\n  id: string\n  englishName: string\n  tamilName: string\n  englishDescription: string\n  tamilDescription: string\n  dataType:\n    | \"dropdown\"\n    | \"byCode\"\n    | \"optionButton\"\n    | \"textbox\"\n    | \"numeric\"\n    | \"datePicker\"\n    | \"searchBox\"\n    | \"vlookup\"\n    | \"subForm\"\n    | \"autoCalculation\"\n    | \"subFormYesNo\"\n    | \"cameraWithGps\"\n    | \"map\"\n  validation?: string\n  isRequired: boolean\n  options?: string[]\n  groupHeading: string\n  displayOrder: number\n  category: \"default\" | \"custom\"\n  componentType: string\n}\n\nexport interface FieldGroup {\n  heading: string\n  fields: DefaultField[]\n}\n\nexport interface SimpleField {\n  group: string\n  name: string\n  type: string\n  validation: string\n}\n\nclass DefaultFieldsService {\n  private defaultFields: DefaultField[] = [\n    // Scheme Details Group\n    {\n      id: \"zone\",\n      englishName: \"Zone\",\n      tamilName: \"மண்டலம்\",\n      englishDescription: \"Administrative zone selection\",\n      tamilDescription: \"நிர்வாக மண்டல தேர்வு\",\n      dataType: \"dropdown\",\n      validation: \"Dropdown from M1\",\n      isRequired: true,\n      groupHeading: \"Scheme Details\",\n      displayOrder: 1,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"districtName\",\n      englishName: \"District Name\",\n      tamilName: \"மாவட்ட பெயர்\",\n      englishDescription: \"District selection\",\n      tamilDescription: \"மாவட்ட தேர்வு\",\n      dataType: \"dropdown\",\n      validation: \"Dropdown from M2\",\n      isRequired: true,\n      groupHeading: \"Scheme Details\",\n      displayOrder: 2,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"townPanchayatName\",\n      englishName: \"Town Panchayat Name\",\n      tamilName: \"நகர பஞ்சாயத்து பெயர்\",\n      englishDescription: \"Town panchayat selection\",\n      tamilDescription: \"நகர பஞ்சாயத்து தேர்வு\",\n      dataType: \"dropdown\",\n      validation: \"Dropdown from M3\",\n      isRequired: true,\n      groupHeading: \"Scheme Details\",\n      displayOrder: 3,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"schemeName\",\n      englishName: \"Scheme Name\",\n      tamilName: \"திட்ட பெயர்\",\n      englishDescription: \"Scheme selection\",\n      tamilDescription: \"திட்ட தேர்வு\",\n      dataType: \"dropdown\",\n      validation: \"Dropdown from M4\",\n      isRequired: true,\n      groupHeading: \"Scheme Details\",\n      displayOrder: 4,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"schemeAbbreviation\",\n      englishName: \"Scheme Abbreviation\",\n      tamilName: \"திட்ட சுருக்கம்\",\n      englishDescription: \"Auto-generated scheme code\",\n      tamilDescription: \"தானாக உருவாக்கப்பட்ட திட்ட குறியீடு\",\n      dataType: \"byCode\",\n      validation: \"By Code\",\n      isRequired: true,\n      groupHeading: \"Scheme Details\",\n      displayOrder: 5,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"year\",\n      englishName: \"Year\",\n      tamilName: \"ஆண்டு\",\n      englishDescription: \"Implementation year\",\n      tamilDescription: \"செயல்படுத்தும் ஆண்டு\",\n      dataType: \"dropdown\",\n      validation: \"Dropdown from M9\",\n      isRequired: true,\n      groupHeading: \"Scheme Details\",\n      displayOrder: 6,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"component\",\n      englishName: \"Component\",\n      tamilName: \"கூறு\",\n      englishDescription: \"Component selection\",\n      tamilDescription: \"கூறு தேர்வு\",\n      dataType: \"dropdown\",\n      validation: \"Dropdown from M7\",\n      isRequired: true,\n      groupHeading: \"Scheme Details\",\n      displayOrder: 7,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"implementationAgency\",\n      englishName: \"Implementation Agency\",\n      tamilName: \"செயல்படுத்தும் நிறுவனம்\",\n      englishDescription: \"Agency code generation\",\n      tamilDescription: \"நிறுவன குறியீடு உருவாக்கம்\",\n      dataType: \"byCode\",\n      validation: \"By Code\",\n      isRequired: true,\n      groupHeading: \"Scheme Details\",\n      displayOrder: 8,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"schemeFundingTamil\",\n      englishName: \"Scheme Funding Tamil\",\n      tamilName: \"திட்ட நிதி தமிழ்\",\n      englishDescription: \"Funding source in Tamil\",\n      tamilDescription: \"தமிழில் நிதி ஆதாரம்\",\n      dataType: \"dropdown\",\n      validation: \"Dropdown from M7\",\n      isRequired: true,\n      groupHeading: \"Scheme Details\",\n      displayOrder: 9,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"announcementScheme\",\n      englishName: \"Announcement Scheme\",\n      tamilName: \"அறிவிப்பு திட்டம்\",\n      englishDescription: \"Is this an announcement scheme?\",\n      tamilDescription: \"இது அறிவிப்பு திட்டமா?\",\n      dataType: \"optionButton\",\n      validation: \"Yes/No\",\n      isRequired: true,\n      options: [\"Yes\", \"No\"],\n      groupHeading: \"Scheme Details\",\n      displayOrder: 10,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"flagshipScheme\",\n      englishName: \"Flagship Scheme\",\n      tamilName: \"முக்கிய திட்டம்\",\n      englishDescription: \"Is this a flagship scheme?\",\n      tamilDescription: \"இது முக்கிய திட்டமா?\",\n      dataType: \"optionButton\",\n      validation: \"Yes/No\",\n      isRequired: true,\n      options: [\"Yes\", \"No\"],\n      groupHeading: \"Scheme Details\",\n      displayOrder: 11,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n\n    // Work Details Group\n    {\n      id: \"wardNo\",\n      englishName: \"Ward No\",\n      tamilName: \"வார்டு எண்\",\n      englishDescription: \"Ward number selection\",\n      tamilDescription: \"வார்டு எண் தேர்வு\",\n      dataType: \"dropdown\",\n      validation: \"Dropdown from M3\",\n      isRequired: true,\n      groupHeading: \"Work Details\",\n      displayOrder: 12,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"roadTypeEnglish\",\n      englishName: \"Road Type English\",\n      tamilName: \"சாலை வகை ஆங்கிலம்\",\n      englishDescription: \"Type of road in English\",\n      tamilDescription: \"ஆங்கிலத்தில் சாலை வகை\",\n      dataType: \"dropdown\",\n      validation: \"Dropdown\",\n      isRequired: true,\n      groupHeading: \"Work Details\",\n      displayOrder: 13,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"roadTypeTamil\",\n      englishName: \"Road Type Tamil\",\n      tamilName: \"சாலை வகை தமிழ்\",\n      englishDescription: \"Type of road in Tamil\",\n      tamilDescription: \"தமிழில் சாலை வகை\",\n      dataType: \"dropdown\",\n      validation: \"Dropdown\",\n      isRequired: true,\n      groupHeading: \"Work Details\",\n      displayOrder: 14,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"workNameEnglish\",\n      englishName: \"Work Name English\",\n      tamilName: \"வேலை பெயர் ஆங்கிலம்\",\n      englishDescription: \"Name of the work in English\",\n      tamilDescription: \"ஆங்கிலத்தில் வேலையின் பெயர்\",\n      dataType: \"textbox\",\n      validation: \"Minimum length 10, Maximum 700\",\n      isRequired: true,\n      groupHeading: \"Work Details\",\n      displayOrder: 15,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"workNameTamil\",\n      englishName: \"Work Name Tamil\",\n      tamilName: \"வேலை பெயர் தமிழ்\",\n      englishDescription: \"Name of the work in Tamil\",\n      tamilDescription: \"தமிழில் வேலையின் பெயர்\",\n      dataType: \"textbox\",\n      validation: \"Minimum length 10, Maximum 700\",\n      isRequired: true,\n      groupHeading: \"Work Details\",\n      displayOrder: 16,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"noOfRoadsPackage\",\n      englishName: \"No of Roads Package\",\n      tamilName: \"சாலைகள் தொகுப்பு எண்ணிக்கை\",\n      englishDescription: \"Number of roads in package\",\n      tamilDescription: \"தொகுப்பில் உள்ள சாலைகளின் எண்ணிக்கை\",\n      dataType: \"numeric\",\n      validation: \"1 to 100; if >1 then open subform (enter road names, length)\",\n      isRequired: true,\n      groupHeading: \"Work Details\",\n      displayOrder: 17,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"lengthKm\",\n      englishName: \"Length KM\",\n      tamilName: \"நீளம் கி.மீ\",\n      englishDescription: \"Length in kilometers\",\n      tamilDescription: \"கிலோமீட்டரில் நீளம்\",\n      dataType: \"numeric\",\n      validation: \"0 to 90, up to 3 decimal places; sum auto from subform\",\n      isRequired: true,\n      groupHeading: \"Work Details\",\n      displayOrder: 18,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"estimateRupees\",\n      englishName: \"Estimate Rupees\",\n      tamilName: \"மதிப்பீடு ரூபாய்\",\n      englishDescription: \"Estimated cost in rupees\",\n      tamilDescription: \"ரூபாயில் மதிப்பிடப்பட்ட செலவு\",\n      dataType: \"numeric\",\n      validation: \"Min 10000, no max limit\",\n      isRequired: true,\n      groupHeading: \"Work Details\",\n      displayOrder: 19,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n\n    // A.S. Details Group\n    {\n      id: \"administrativeSanctionNo\",\n      englishName: \"Administrative Sanction No\",\n      tamilName: \"நிர்வாக அனுமதி எண்\",\n      englishDescription: \"Administrative sanction number\",\n      tamilDescription: \"நிர்வாக அனுமதி எண்\",\n      dataType: \"textbox\",\n      validation: \"Minimum length 6, Maximum 100\",\n      isRequired: true,\n      groupHeading: \"A.S. Details\",\n      displayOrder: 20,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"administrativeSanctionDate\",\n      englishName: \"Administrative Sanction Date\",\n      tamilName: \"நிர்வாக அனுமதி தேதி\",\n      englishDescription: \"Administrative sanction date\",\n      tamilDescription: \"நிர்வாக அனுமதி தேதி\",\n      dataType: \"datePicker\",\n      validation: \"Future dates not allowed\",\n      isRequired: true,\n      groupHeading: \"A.S. Details\",\n      displayOrder: 21,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n\n    // T.S. Details Group\n    {\n      id: \"technicalSanctionNo\",\n      englishName: \"Technical Sanction No\",\n      tamilName: \"தொழில்நுட்ப அனுமதி எண்\",\n      englishDescription: \"Technical sanction number\",\n      tamilDescription: \"தொழில்நுட்ப அனுமதி எண்\",\n      dataType: \"textbox\",\n      validation: \"Minimum length 6, Maximum 100\",\n      isRequired: true,\n      groupHeading: \"T.S. Details\",\n      displayOrder: 22,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"technicalSanctionDate\",\n      englishName: \"Technical Sanction Date\",\n      tamilName: \"தொழில்நுட்ப அனுமதி தேதி\",\n      englishDescription: \"Technical sanction date\",\n      tamilDescription: \"தொழில்நுட்ப அனுமதி தேதி\",\n      dataType: \"datePicker\",\n      validation: \"Future dates not allowed\",\n      isRequired: true,\n      groupHeading: \"T.S. Details\",\n      displayOrder: 23,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n\n    // Tender Details Group\n    {\n      id: \"tenderDate\",\n      englishName: \"Tender Date\",\n      tamilName: \"டெண்டர் தேதி\",\n      englishDescription: \"Tender submission date\",\n      tamilDescription: \"டெண்டர் சமர்ப்பிப்பு தேதி\",\n      dataType: \"datePicker\",\n      validation: \"Future dates allowed\",\n      isRequired: true,\n      groupHeading: \"Tender Details\",\n      displayOrder: 24,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"contractorGstNo\",\n      englishName: \"Contractor GST No\",\n      tamilName: \"ஒப்பந்ததாரர் ஜிஎஸ்டி எண்\",\n      englishDescription: \"Contractor GST number search\",\n      tamilDescription: \"ஒப்பந்ததாரர் ஜிஎஸ்டி எண் தேடல்\",\n      dataType: \"searchBox\",\n      validation: \"Auto show from Contractor module\",\n      isRequired: true,\n      groupHeading: \"Tender Details\",\n      displayOrder: 25,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"contractorName\",\n      englishName: \"Contractor Name\",\n      tamilName: \"ஒப்பந்ததாரர் பெயர்\",\n      englishDescription: \"Contractor name lookup\",\n      tamilDescription: \"ஒப்பந்ததாரர் பெயர் தேடல்\",\n      dataType: \"vlookup\",\n      validation: \"Based on GST No\",\n      isRequired: true,\n      groupHeading: \"Tender Details\",\n      displayOrder: 26,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"agreementDate\",\n      englishName: \"Agreement Date\",\n      tamilName: \"ஒப்பந்த தேதி\",\n      englishDescription: \"Agreement signing date\",\n      tamilDescription: \"ஒப்பந்த கையெழுத்து தேதி\",\n      dataType: \"datePicker\",\n      validation: \"Future dates not allowed\",\n      isRequired: true,\n      groupHeading: \"Tender Details\",\n      displayOrder: 27,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"agreementDurationValue\",\n      englishName: \"Agreement Duration Value\",\n      tamilName: \"ஒப்பந்த கால அளவு மதிப்பு\",\n      englishDescription: \"Duration value for agreement\",\n      tamilDescription: \"ஒப்பந்தத்திற்கான கால அளவு மதிப்பு\",\n      dataType: \"numeric\",\n      validation: \"Min 1, Max 100\",\n      isRequired: true,\n      groupHeading: \"Tender Details\",\n      displayOrder: 28,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"agreementDurationUnit\",\n      englishName: \"Agreement Duration Unit\",\n      tamilName: \"ஒப்பந்த கால அளவு அலகு\",\n      englishDescription: \"Duration unit for agreement\",\n      tamilDescription: \"ஒப்பந்தத்திற்கான கால அளவு அலகு\",\n      dataType: \"dropdown\",\n      validation: \"Months, Days, Years\",\n      isRequired: true,\n      options: [\"Months\", \"Days\", \"Years\"],\n      groupHeading: \"Tender Details\",\n      displayOrder: 29,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"workOrderDate\",\n      englishName: \"Work Order Date\",\n      tamilName: \"வேலை ஆர்டர் தேதி\",\n      englishDescription: \"Work order issue date\",\n      tamilDescription: \"வேலை ஆர்டர் வழங்கிய தேதி\",\n      dataType: \"datePicker\",\n      validation: \"Future dates not allowed\",\n      isRequired: true,\n      groupHeading: \"Tender Details\",\n      displayOrder: 30,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n\n    // Work Progress Group\n    {\n      id: \"stage\",\n      englishName: \"Stage\",\n      tamilName: \"நிலை\",\n      englishDescription: \"Current work stage\",\n      tamilDescription: \"தற்போதைய வேலை நிலை\",\n      dataType: \"dropdown\",\n      validation: \"Dropdown from M8\",\n      isRequired: true,\n      groupHeading: \"Work Progress\",\n      displayOrder: 31,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"progressPercent\",\n      englishName: \"Progress Percent\",\n      tamilName: \"முன்னேற்ற சதவீதம்\",\n      englishDescription: \"Work progress percentage\",\n      tamilDescription: \"வேலை முன்னேற்ற சதவீதம்\",\n      dataType: \"dropdown\",\n      validation: \"Based on M8\",\n      isRequired: true,\n      groupHeading: \"Work Progress\",\n      displayOrder: 32,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"presentStatus\",\n      englishName: \"Present Status\",\n      tamilName: \"தற்போதைய நிலை\",\n      englishDescription: \"Current status description\",\n      tamilDescription: \"தற்போதைய நிலை விளக்கம்\",\n      dataType: \"textbox\",\n      validation: \"Min length 6, Max length 200\",\n      isRequired: true,\n      groupHeading: \"Work Progress\",\n      displayOrder: 33,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"probableCompletionDate\",\n      englishName: \"Probable Completion Date\",\n      tamilName: \"சாத்தியமான முடிவு தேதி\",\n      englishDescription: \"Expected completion date\",\n      tamilDescription: \"எதிர்பார்க்கப்படும் முடிவு தேதி\",\n      dataType: \"datePicker\",\n      validation: \"Only future dates allowed\",\n      isRequired: true,\n      groupHeading: \"Work Progress\",\n      displayOrder: 34,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n\n    // Fund Details Group\n    {\n      id: \"fundReleasedRupees\",\n      englishName: \"Fund Released Rupees\",\n      tamilName: \"வெளியிடப்பட்ட நிதி ரூபாய்\",\n      englishDescription: \"Fund released amount\",\n      tamilDescription: \"வெளியிடப்பட்ட நிதி தொகை\",\n      dataType: \"subForm\",\n      validation: \"Separate master\",\n      isRequired: true,\n      groupHeading: \"Fund Details\",\n      displayOrder: 35,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"expenditureRupees\",\n      englishName: \"Expenditure Rupees\",\n      tamilName: \"செலவு ரூபாய்\",\n      englishDescription: \"Total expenditure amount\",\n      tamilDescription: \"மொத்த செலவு தொகை\",\n      dataType: \"subForm\",\n      validation: \"Separate master\",\n      isRequired: true,\n      groupHeading: \"Fund Details\",\n      displayOrder: 36,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"balanceOnFundReleased\",\n      englishName: \"Balance On Fund Released\",\n      tamilName: \"வெளியிடப்பட்ட நிதியில் இருப்பு\",\n      englishDescription: \"Balance from released funds\",\n      tamilDescription: \"வெளியிடப்பட்ட நிதியிலிருந்து இருப்பு\",\n      dataType: \"autoCalculation\",\n      validation: \"Col 30 - Col 31\",\n      isRequired: false,\n      groupHeading: \"Fund Details\",\n      displayOrder: 37,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"balanceOnEstimate\",\n      englishName: \"Balance On Estimate\",\n      tamilName: \"மதிப்பீட்டில் இருப்பு\",\n      englishDescription: \"Balance from estimate\",\n      tamilDescription: \"மதிப்பீட்டிலிருந்து இருப்பு\",\n      dataType: \"autoCalculation\",\n      validation: \"Col 14 - Col 31\",\n      isRequired: false,\n      groupHeading: \"Fund Details\",\n      displayOrder: 38,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"expenditurePercent\",\n      englishName: \"Expenditure Percent\",\n      tamilName: \"செலவு சதவீதம்\",\n      englishDescription: \"Expenditure percentage\",\n      tamilDescription: \"செலவு சதவீதம்\",\n      dataType: \"autoCalculation\",\n      validation: \"Col 31 / Col 14 * 100\",\n      isRequired: false,\n      groupHeading: \"Fund Details\",\n      displayOrder: 39,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n\n    // Completion Details Group\n    {\n      id: \"completionReport\",\n      englishName: \"Completion Report\",\n      tamilName: \"முடிவு அறிக்கை\",\n      englishDescription: \"Work completion report\",\n      tamilDescription: \"வேலை முடிவு அறிக்கை\",\n      dataType: \"subFormYesNo\",\n      validation: \"Separate master\",\n      isRequired: true,\n      groupHeading: \"Completion Details\",\n      displayOrder: 40,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"uccrDetails\",\n      englishName: \"UCCR Details\",\n      tamilName: \"யுசிசிஆர் விவரங்கள்\",\n      englishDescription: \"UCCR submission details\",\n      tamilDescription: \"யுசிசிஆர் சமர்ப்பிப்பு விவரங்கள்\",\n      dataType: \"subForm\",\n      validation: \"Separate master\",\n      isRequired: true,\n      groupHeading: \"Completion Details\",\n      displayOrder: 41,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"workPhotosUrl\",\n      englishName: \"Work Photos URL\",\n      tamilName: \"வேலை புகைப்படங்கள் யூஆர்எல்\",\n      englishDescription: \"Work progress photos\",\n      tamilDescription: \"வேலை முன்னேற்ற புகைப்படங்கள்\",\n      dataType: \"cameraWithGps\",\n      validation: \"Up to 4 photos, 15MB each, GPS & date tag\",\n      isRequired: true,\n      groupHeading: \"Completion Details\",\n      displayOrder: 42,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"geoLocation\",\n      englishName: \"Geo Location\",\n      tamilName: \"புவியியல் இடம்\",\n      englishDescription: \"Geographic location coordinates\",\n      tamilDescription: \"புவியியல் இட ஆயத்தொலைவுகள்\",\n      dataType: \"map\",\n      validation: \"Select from map or paste\",\n      isRequired: true,\n      groupHeading: \"Completion Details\",\n      displayOrder: 43,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n    {\n      id: \"pendingReason\",\n      englishName: \"Pending Reason\",\n      tamilName: \"நிலுவை காரணம்\",\n      englishDescription: \"Reason for pending status\",\n      tamilDescription: \"நிலுவை நிலைக்கான காரணம்\",\n      dataType: \"textbox\",\n      validation: \"Min length 6, Max 200\",\n      isRequired: false,\n      groupHeading: \"Completion Details\",\n      displayOrder: 44,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n\n    // Meta Group\n    {\n      id: \"workCreatedBy\",\n      englishName: \"Work Created By\",\n      tamilName: \"வேலையை உருவாக்கியவர்\",\n      englishDescription: \"User who created the work\",\n      tamilDescription: \"வேலையை உருவாக்கிய பயனர்\",\n      dataType: \"textbox\",\n      validation: \"Future reference\",\n      isRequired: false,\n      groupHeading: \"Meta\",\n      displayOrder: 45,\n      category: \"default\",\n      componentType: \"Infrastructure\",\n    },\n  ]\n\n  private simpleFields: SimpleField[] = [\n    {\n      group: \"Scheme Details\",\n      name: \"zone\",\n      type: \"dropdown\",\n      validation: \"Dropdown from M1\",\n    },\n    {\n      group: \"Scheme Details\",\n      name: \"districtName\",\n      type: \"dropdown\",\n      validation: \"Dropdown from M2\",\n    },\n    {\n      group: \"Scheme Details\",\n      name: \"townPanchayatName\",\n      type: \"dropdown\",\n      validation: \"Dropdown from M3\",\n    },\n    {\n      group: \"Scheme Details\",\n      name: \"schemeName\",\n      type: \"dropdown\",\n      validation: \"Dropdown from M4\",\n    },\n    {\n      group: \"Scheme Details\",\n      name: \"schemeAbbreviation\",\n      type: \"byCode\",\n      validation: \"By Code\",\n    },\n    {\n      group: \"Scheme Details\",\n      name: \"year\",\n      type: \"dropdown\",\n      validation: \"Dropdown from M9\",\n    },\n    {\n      group: \"Scheme Details\",\n      name: \"component\",\n      type: \"dropdown\",\n      validation: \"Dropdown from M7\",\n    },\n    {\n      group: \"Scheme Details\",\n      name: \"implementationAgency\",\n      type: \"byCode\",\n      validation: \"By Code\",\n    },\n    {\n      group: \"Scheme Details\",\n      name: \"schemeFundingTamil\",\n      type: \"dropdown\",\n      validation: \"Dropdown from M7\",\n    },\n    {\n      group: \"Scheme Details\",\n      name: \"announcementScheme\",\n      type: \"optionButton\",\n      validation: \"Yes/No\",\n    },\n    {\n      group: \"Scheme Details\",\n      name: \"flagshipScheme\",\n      type: \"optionButton\",\n      validation: \"Yes/No\",\n    },\n    {\n      group: \"Work Details\",\n      name: \"wardNo\",\n      type: \"dropdown\",\n      validation: \"Dropdown from M3\",\n    },\n    {\n      group: \"Work Details\",\n      name: \"roadTypeEnglish\",\n      type: \"dropdown\",\n      validation: \"Dropdown\",\n    },\n    {\n      group: \"Work Details\",\n      name: \"roadTypeTamil\",\n      type: \"dropdown\",\n      validation: \"Dropdown\",\n    },\n    {\n      group: \"Work Details\",\n      name: \"workNameEnglish\",\n      type: \"textbox\",\n      validation: \"Minimum length 10, Maximum 700\",\n    },\n    {\n      group: \"Work Details\",\n      name: \"workNameTamil\",\n      type: \"textbox\",\n      validation: \"Minimum length 10, Maximum 700\",\n    },\n    {\n      group: \"Work Details\",\n      name: \"noOfRoadsPackage\",\n      type: \"numeric\",\n      validation: \"1 to 100; if >1 then open subform (enter road names, length)\",\n    },\n    {\n      group: \"Work Details\",\n      name: \"lengthKm\",\n      type: \"numeric\",\n      validation: \"0 to 90, up to 3 decimal places; sum auto from subform\",\n    },\n    {\n      group: \"Work Details\",\n      name: \"estimateRupees\",\n      type: \"numeric\",\n      validation: \"Min 10000, no max limit\",\n    },\n    {\n      group: \"A.S. Details\",\n      name: \"administrativeSanctionNo\",\n      type: \"textbox\",\n      validation: \"Minimum length 6, Maximum 100\",\n    },\n    {\n      group: \"A.S. Details\",\n      name: \"administrativeSanctionDate\",\n      type: \"datePicker\",\n      validation: \"Future dates not allowed\",\n    },\n    {\n      group: \"T.S. Details\",\n      name: \"technicalSanctionNo\",\n      type: \"textbox\",\n      validation: \"Minimum length 6, Maximum 100\",\n    },\n    {\n      group: \"T.S. Details\",\n      name: \"technicalSanctionDate\",\n      type: \"datePicker\",\n      validation: \"Future dates not allowed\",\n    },\n    {\n      group: \"Tender Details\",\n      name: \"tenderDate\",\n      type: \"datePicker\",\n      validation: \"Future dates allowed\",\n    },\n    {\n      group: \"Tender Details\",\n      name: \"contractorGstNo\",\n      type: \"searchBox\",\n      validation: \"Auto show from Contractor module\",\n    },\n    {\n      group: \"Tender Details\",\n      name: \"contractorName\",\n      type: \"vlookup\",\n      validation: \"Based on GST No\",\n    },\n    {\n      group: \"Tender Details\",\n      name: \"agreementDate\",\n      type: \"datePicker\",\n      validation: \"Future dates not allowed\",\n    },\n    {\n      group: \"Tender Details\",\n      name: \"agreementDurationValue\",\n      type: \"numeric\",\n      validation: \"Min 1, Max 100\",\n    },\n    {\n      group: \"Tender Details\",\n      name: \"agreementDurationUnit\",\n      type: \"dropdown\",\n      validation: \"Months, Days, Years\",\n    },\n    {\n      group: \"Tender Details\",\n      name: \"workOrderDate\",\n      type: \"datePicker\",\n      validation: \"Future dates not allowed\",\n    },\n    {\n      group: \"Work Progress\",\n      name: \"stage\",\n      type: \"dropdown\",\n      validation: \"Dropdown from M8\",\n    },\n    {\n      group: \"Work Progress\",\n      name: \"progressPercent\",\n      type: \"dropdown\",\n      validation: \"Based on M8\",\n    },\n    {\n      group: \"Work Progress\",\n      name: \"presentStatus\",\n      type: \"textbox\",\n      validation: \"Min length 6, Max length 200\",\n    },\n    {\n      group: \"Work Progress\",\n      name: \"probableCompletionDate\",\n      type: \"datePicker\",\n      validation: \"Only future dates allowed\",\n    },\n    {\n      group: \"Fund Details\",\n      name: \"fundReleasedRupees\",\n      type: \"subForm\",\n      validation: \"Separate master\",\n    },\n    {\n      group: \"Fund Details\",\n      name: \"expenditureRupees\",\n      type: \"subForm\",\n      validation: \"Separate master\",\n    },\n    {\n      group: \"Fund Details\",\n      name: \"balanceOnFundReleased\",\n      type: \"autoCalculation\",\n      validation: \"Col 30 - Col 31\",\n    },\n    {\n      group: \"Fund Details\",\n      name: \"balanceOnEstimate\",\n      type: \"autoCalculation\",\n      validation: \"Col 14 - Col 31\",\n    },\n    {\n      group: \"Fund Details\",\n      name: \"expenditurePercent\",\n      type: \"autoCalculation\",\n      validation: \"Col 31 / Col 14 * 100\",\n    },\n    {\n      group: \"Completion Details\",\n      name: \"completionReport\",\n      type: \"subFormYesNo\",\n      validation: \"Separate master\",\n    },\n    {\n      group: \"Completion Details\",\n      name: \"uccrDetails\",\n      type: \"subForm\",\n      validation: \"Separate master\",\n    },\n    {\n      group: \"Completion Details\",\n      name: \"workPhotosUrl\",\n      type: \"cameraWithGps\",\n      validation: \"Up to 4 photos, 15MB each, GPS & date tag\",\n    },\n    {\n      group: \"Completion Details\",\n      name: \"geoLocation\",\n      type: \"map\",\n      validation: \"Select from map or paste\",\n    },\n    {\n      group: \"Completion Details\",\n      name: \"pendingReason\",\n      type: \"textbox\",\n      validation: \"Min length 6, Max 200\",\n    },\n    {\n      group: \"Meta\",\n      name: \"workCreatedBy\",\n      type: \"textbox\",\n      validation: \"Future reference\",\n    },\n  ]\n\n  async getDefaultFieldsByComponent(componentType: string, category = \"default\"): Promise<FieldGroup[]> {\n    // Simulate API call\n    await new Promise((resolve) => setTimeout(resolve, 500))\n\n    const filteredFields = this.defaultFields.filter(\n      (field) => field.componentType === componentType && field.category === category,\n    )\n\n    // Group fields by heading\n    const groupedFields = filteredFields.reduce((groups: Record<string, DefaultField[]>, field) => {\n      if (!groups[field.groupHeading]) {\n        groups[field.groupHeading] = []\n      }\n      groups[field.groupHeading].push(field)\n      return groups\n    }, {})\n\n    // Convert to FieldGroup array and sort fields within each group\n    return Object.entries(groupedFields).map(([heading, fields]) => ({\n      heading,\n      fields: fields.sort((a, b) => a.displayOrder - b.displayOrder),\n    }))\n  }\n\n  async addCustomField(field: Omit<DefaultField, \"id\" | \"category\">): Promise<DefaultField> {\n    // Simulate API call\n    await new Promise((resolve) => setTimeout(resolve, 300))\n\n    const newField: DefaultField = {\n      ...field,\n      id: `custom_${Date.now()}`,\n      category: \"custom\",\n    }\n\n    this.defaultFields.push(newField)\n    return newField\n  }\n\n  validateField(field: DefaultField, value: any): { isValid: boolean; errors: string[] } {\n    const errors: string[] = []\n\n    if (field.isRequired && (!value || value.toString().trim() === \"\")) {\n      errors.push(`${field.englishName} is required`)\n    }\n\n    if (field.validation && value) {\n      const rules = field.validation.split(\"|\")\n\n      for (const rule of rules) {\n        if (rule === \"required\") continue // Already checked above\n\n        if (rule.startsWith(\"min:\")) {\n          const minValue = Number.parseInt(rule.split(\":\")[1])\n          if (field.dataType === \"string\" && value.toString().length < minValue) {\n            errors.push(`${field.englishName} must be at least ${minValue} characters`)\n          } else if (field.dataType === \"number\" && Number.parseFloat(value) < minValue) {\n            errors.push(`${field.englishName} must be at least ${minValue}`)\n          }\n        }\n\n        if (rule.startsWith(\"max:\")) {\n          const maxValue = Number.parseInt(rule.split(\":\")[1])\n          if (field.dataType === \"string\" && value.toString().length > maxValue) {\n            errors.push(`${field.englishName} must not exceed ${maxValue} characters`)\n          } else if (field.dataType === \"number\" && Number.parseFloat(value) > maxValue) {\n            errors.push(`${field.englishName} must not exceed ${maxValue}`)\n          }\n        }\n\n        if (rule === \"email\" && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value)) {\n          errors.push(`${field.englishName} must be a valid email address`)\n        }\n\n        if (rule === \"numeric\" && isNaN(Number.parseFloat(value))) {\n          errors.push(`${field.englishName} must be a number`)\n        }\n\n        if (rule === \"date\" && isNaN(Date.parse(value))) {\n          errors.push(`${field.englishName} must be a valid date`)\n        }\n      }\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors,\n    }\n  }\n\n  async getSimpleFieldsByComponent(componentType: string): Promise<SimpleField[]> {\n    // Simulate API call\n    await new Promise((resolve) => setTimeout(resolve, 500))\n\n    // Return all fields for Infrastructure component type\n    if (componentType === \"Infrastructure\") {\n      return this.simpleFields\n    }\n\n    return []\n  }\n}\n\nexport const defaultFieldsService = new DefaultFieldsService()\n"],"names":[],"mappings":"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,WAAY,SACd,EACA,CACE,MAAO,iBACP,KAAM,OACN,KAAM,WACN,WAAY,kBACd,EACA,CACE,MAAO,iBACP,KAAM,YACN,KAAM,WACN,WAAY,kBACd,EACA,CACE,MAAO,iBACP,KAAM,uBACN,KAAM,SACN,WAAY,SACd,EACA,CACE,MAAO,iBACP,KAAM,qBACN,KAAM,WACN,WAAY,kBACd,EACA,CACE,MAAO,iBACP,KAAM,qBACN,KAAM,eACN,WAAY,QACd,EACA,CACE,MAAO,iBACP,KAAM,iBACN,KAAM,eACN,WAAY,QACd,EACA,CACE,MAAO,eACP,KAAM,SACN,KAAM,WACN,WAAY,kBACd,EACA,CACE,MAAO,eACP,KAAM,kBACN,KAAM,WACN,WAAY,UACd,EACA,CACE,MAAO,eACP,KAAM,gBACN,KAAM,WACN,WAAY,UACd,EACA,CACE,MAAO,eACP,KAAM,kBACN,KAAM,UACN,WAAY,gCACd,EACA,CACE,MAAO,eACP,KAAM,gBACN,KAAM,UACN,WAAY,gCACd,EACA,CACE,MAAO,eACP,KAAM,mBACN,KAAM,UACN,WAAY,8DACd,EACA,CACE,MAAO,eACP,KAAM,WACN,KAAM,UACN,WAAY,wDACd,EACA,CACE,MAAO,eACP,KAAM,iBACN,KAAM,UACN,WAAY,yBACd,EACA,CACE,MAAO,eACP,KAAM,2BACN,KAAM,UACN,WAAY,+BACd,EACA,CACE,MAAO,eACP,KAAM,6BACN,KAAM,aACN,WAAY,0BACd,EACA,CACE,MAAO,eACP,KAAM,sBACN,KAAM,UACN,WAAY,+BACd,EACA,CACE,MAAO,eACP,KAAM,wBACN,KAAM,aACN,WAAY,0BACd,EACA,CACE,MAAO,iBACP,KAAM,aACN,KAAM,aACN,WAAY,sBACd,EACA,CACE,MAAO,iBACP,KAAM,kBACN,KAAM,YACN,WAAY,kCACd,EACA,CACE,MAAO,iBACP,KAAM,iBACN,KAAM,UACN,WAAY,iBACd,EACA,CACE,MAAO,iBACP,KAAM,gBACN,KAAM,aACN,WAAY,0BACd,EACA,CACE,MAAO,iBACP,KAAM,yBACN,KAAM,UACN,WAA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","ignoreList":[3]}