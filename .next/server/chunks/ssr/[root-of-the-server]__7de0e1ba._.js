module.exports=[93663,a=>{"use strict";var b=a.i(23413),c=a.i(32496),d=a.i(43604),e=a.i(93507);let f=new class{BASE_ENDPOINT="/api/v1/users";async login(a){let b=await d.apiClient.post(`${this.BASE_ENDPOINT}/login`,a);if(b.success&&b.data){let a=b.data.user,c={id:a._id,username:a.email,email:a.email,role:a.role,name:a.name,phone:a.phone,isActive:a.isActive,userId:a.userId,currentLoginAt:a.currentLoginAt,lastLoginAt:a.lastLoginAt};return e.TokenStorage.setTokens(b.data.accessToken,b.data.refreshToken),e.TokenStorage.setUser(c),{user:c,accessToken:b.data.accessToken,refreshToken:b.data.refreshToken}}throw Error(b.error||"Login failed")}async logout(){e.TokenStorage.clearAll()}async getCurrentUser(){return e.TokenStorage.getUser()}isAuthenticated(){return e.TokenStorage.hasTokens()}isSuperAdmin(a){return"super_admin"===a.role}isAdmin(a){return"admin"===a.role||"super_admin"===a.role}},g=(0,c.createContext)(void 0);function h({children:a}){let[d,h]=(0,c.useState)(null),[i,j]=(0,c.useState)(!0);(0,c.useEffect)(()=>{(async()=>{try{if(e.TokenStorage.hasTokens()){let a=await f.getCurrentUser();h(a)}}catch(a){h(null)}finally{j(!1)}})()},[]);let k=async(a,b)=>{try{let c=await f.login({username:a,password:b});return h(c.user),!0}catch(a){return console.error("[v0] Login error:",a),!1}};return(0,b.jsx)(g.Provider,{value:{user:d,isLoading:i,login:k,logout:()=>{f.logout(),h(null)},isAuthenticated:!!d},children:a})}function i(){let a=(0,c.useContext)(g);if(void 0===a)throw Error("useAuth must be used within an AuthProvider");return a}a.s(["AuthProvider",()=>h,"useAuth",()=>i],93663)},18622,(a,b,c)=>{b.exports=a.x("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js",()=>require("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js"))},63079,(a,b,c)=>{"use strict";b.exports=a.r(18622)},23413,(a,b,c)=>{"use strict";b.exports=a.r(63079).vendored["react-ssr"].ReactJsxRuntime},32496,(a,b,c)=>{"use strict";b.exports=a.r(63079).vendored["react-ssr"].React},43604,93507,a=>{"use strict";class b{static ACCESS_TOKEN_KEY="access_token";static REFRESH_TOKEN_KEY="refresh_token";static USER_KEY="user_data";static setTokens(a,b){}static getAccessToken(){return null}static getRefreshToken(){return null}static setUser(a){}static getUser(){return null}static clearAll(){}static hasTokens(){return!!(this.getAccessToken()&&this.getRefreshToken())}}a.s(["TokenStorage",()=>b],93507);let c=new class{baseUrl;constructor(a="http://13.201.184.160:4000"){this.baseUrl=a}async request(a,c={}){try{let d=`${this.baseUrl}${a}`;console.log("[v0] Making API request to:",d);let e={"Content-Type":"application/json",...c.headers};if(!a.includes("/login")){let a=b.getAccessToken(),c=b.getRefreshToken();a&&(e.Authorization=`Bearer ${a}`),c&&(e["x-refresh-token"]=c)}let f={headers:e,...c};console.log("[v0] Request config:",{url:d,method:f.method,headers:e});let g=await fetch(d,f);console.log("[v0] Response status:",g.status,g.statusText);let h=await g.json();if(!g.ok)return console.log("[v0] API error response:",h),{success:!1,error:h.message||`HTTP error! status: ${g.status}`};return console.log("[v0] API success response:",h),{success:!0,data:h}}catch(b){console.error("[v0] API request failed:",b);let a=b instanceof Error?b.message:"Unknown error occurred";if(b instanceof TypeError&&b.message.includes("fetch"))return{success:!1,error:`Network error: Unable to connect to API server at ${this.baseUrl}. Please ensure the API server is running.`};return{success:!1,error:a}}}async get(a){return this.request(a,{method:"GET"})}async post(a,b){return this.request(a,{method:"POST",body:b?JSON.stringify(b):void 0})}async put(a,b){return this.request(a,{method:"PUT",body:b?JSON.stringify(b):void 0})}async delete(a){return this.request(a,{method:"DELETE"})}async patch(a,b){return this.request(a,{method:"PATCH",body:b?JSON.stringify(b):void 0})}};a.s(["apiClient",0,c],43604)}];

//# sourceMappingURL=%5Broot-of-the-server%5D__7de0e1ba._.js.map