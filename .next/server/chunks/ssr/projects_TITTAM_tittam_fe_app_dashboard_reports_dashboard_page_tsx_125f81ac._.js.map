{"version":3,"sources":["turbopack:///[project]/projects/TITTAM/tittam_fe/app/dashboard/reports/dashboard/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Checkbox } from \"@/components/ui/checkbox\"\nimport { Tabs, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Download, Filter, FileBarChart, Loader2, ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DashboardLayout } from \"@/components/layout/dashboard-layout\"\nimport { ProtectedRoute } from \"@/components/auth/protected-route\"\nimport * as XLSX from \"xlsx\"\nimport { reportService } from \"@/services/report-service\"\n\ninterface ReportData {\n  id: string\n  schemeName: string\n  componentName: string\n  stage: string\n  zone: string\n  district: string\n  townPanchayat: string\n  financialYear: string\n  status: string\n  amount: number\n  beneficiaries: number\n  completionDate: string\n  schemeType: \"Announcement\" | \"Flagship\"\n}\n\nexport default function DashboardReportsPage() {\n  const [reportType, setReportType] = useState<\"overall\" | \"scheme\" | \"component\" | \"year\">(\"overall\")\n  const [selectedViewOptions, setSelectedViewOptions] = useState<string[]>([\"zone\"])\n  const [selectedScheme, setSelectedScheme] = useState(\"all\")\n  const [selectedComponent, setSelectedComponent] = useState(\"all\")\n  const [selectedYear, setSelectedYear] = useState(\"all\")\n  const [selectedZone, setSelectedZone] = useState(\"all\")\n  const [selectedDistrict, setSelectedDistrict] = useState(\"all\")\n  const [selectedTownPanchayat, setSelectedTownPanchayat] = useState(\"all\")\n  const [schemeTypeAnnouncement, setSchemeTypeAnnouncement] = useState(true)\n  const [schemeTypeFlagship, setSchemeTypeFlagship] = useState(true)\n\n  const [filteredData, setFilteredData] = useState<ReportData[]>([])\n  const [isLoading, setIsLoading] = useState(false)\n\n  const [currentPage, setCurrentPage] = useState(1)\n  const [itemsPerPage] = useState(10)\n\n  const [schemes, setSchemes] = useState<string[]>([])\n  const [components, setComponents] = useState<string[]>([])\n  const [years, setYears] = useState<string[]>([])\n  const [zones, setZones] = useState<string[]>([])\n  const [districts, setDistricts] = useState<string[]>([])\n  const [townPanchayats, setTownPanchayats] = useState<string[]>([])\n\n  useEffect(() => {\n    loadFilterOptions()\n    loadReportData()\n  }, [])\n\n  useEffect(() => {\n    loadReportData()\n    setCurrentPage(1)\n  }, [\n    reportType,\n    selectedViewOptions,\n    selectedScheme,\n    selectedComponent,\n    selectedYear,\n    selectedZone,\n    selectedDistrict,\n    selectedTownPanchayat,\n    schemeTypeAnnouncement,\n    schemeTypeFlagship,\n  ])\n\n  useEffect(() => {\n    if (selectedZone !== \"all\") {\n      loadDistricts(selectedZone)\n    } else {\n      setDistricts([])\n      setSelectedDistrict(\"all\")\n      setTownPanchayats([])\n      setSelectedTownPanchayat(\"all\")\n    }\n  }, [selectedZone])\n\n  useEffect(() => {\n    if (selectedDistrict !== \"all\") {\n      loadTownPanchayats(selectedDistrict)\n    } else {\n      setTownPanchayats([])\n      setSelectedTownPanchayat(\"all\")\n    }\n  }, [selectedDistrict])\n\n  const loadFilterOptions = async () => {\n    const options = await reportService.getFilterOptions()\n    setSchemes(options.schemes)\n    setComponents(options.components)\n    setYears(options.years)\n    setZones(options.zones)\n  }\n\n  const loadDistricts = async (zone: string) => {\n    const districtList = await reportService.getDistricts(zone)\n    setDistricts(districtList)\n    setSelectedDistrict(\"all\")\n    setTownPanchayats([])\n    setSelectedTownPanchayat(\"all\")\n  }\n\n  const loadTownPanchayats = async (district: string) => {\n    const townPanchayatList = await reportService.getTownPanchayats(district)\n    setTownPanchayats(townPanchayatList)\n    setSelectedTownPanchayat(\"all\")\n  }\n\n  const loadReportData = async () => {\n    setIsLoading(true)\n\n    let selectedSchemeType: \"all\" | \"Announcement\" | \"Flagship\" = \"all\"\n    if (schemeTypeAnnouncement && !schemeTypeFlagship) {\n      selectedSchemeType = \"Announcement\"\n    } else if (!schemeTypeAnnouncement && schemeTypeFlagship) {\n      selectedSchemeType = \"Flagship\"\n    }\n\n    const filters = {\n      reportCategory: \"dashboard\" as const,\n      reportType,\n      viewType: reportType === \"overall\" ? \"zone\" : undefined,\n      scheme: selectedScheme,\n      component: selectedComponent,\n      year: selectedYear,\n      zone: selectedZone,\n      district: selectedDistrict,\n      townPanchayat: selectedTownPanchayat,\n      schemeType: selectedSchemeType,\n      schemeWiseView: reportType === \"scheme\" ? \"both\" : undefined,\n      componentWiseView: reportType === \"component\" ? \"both\" : undefined,\n      yearWiseView: reportType === \"year\" ? \"both\" : undefined,\n    }\n\n    const data = await reportService.generateReport(filters)\n    setFilteredData(data)\n    setIsLoading(false)\n  }\n\n  const handleExcelDownload = () => {\n    const worksheet = XLSX.utils.json_to_sheet(\n      filteredData.map((item) => ({\n        \"Scheme Name\": item.schemeName,\n        Component: item.componentName,\n        Stage: item.stage,\n        Zone: item.zone,\n        District: item.district,\n        \"Town Panchayat\": item.townPanchayat,\n        \"Financial Year\": item.financialYear,\n        Status: item.status,\n        \"Amount (â‚¹)\": item.amount,\n        Beneficiaries: item.beneficiaries,\n        \"Completion Date\": item.completionDate,\n        \"Scheme Type\": item.schemeType,\n      })),\n    )\n\n    const workbook = XLSX.utils.book_new()\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Dashboard Report\")\n\n    const excelBuffer = XLSX.write(workbook, { bookType: \"xlsx\", type: \"array\" })\n    const blob = new Blob([excelBuffer], { type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" })\n    const url = URL.createObjectURL(blob)\n\n    const link = document.createElement(\"a\")\n    link.href = url\n    link.download = `Dashboard_Report_${reportType}_${new Date().toISOString().split(\"T\")[0]}.xlsx`\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n    URL.revokeObjectURL(url)\n  }\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat(\"en-IN\", {\n      style: \"currency\",\n      currency: \"INR\",\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(amount)\n  }\n\n  const getStatusBadgeVariant = (status: string) => {\n    switch (status.toLowerCase()) {\n      case \"active\":\n        return \"default\"\n      case \"completed\":\n        return \"secondary\"\n      case \"pending\":\n        return \"destructive\"\n      case \"approved\":\n        return \"outline\"\n      default:\n        return \"secondary\"\n    }\n  }\n\n  const toggleViewOption = (option: string) => {\n    setSelectedViewOptions((prev) => {\n      if (prev.includes(option)) {\n        return prev.filter((item) => item !== option)\n      } else {\n        return [...prev, option]\n      }\n    })\n  }\n\n  const getViewOptions = () => {\n    switch (reportType) {\n      case \"overall\":\n        return [\n          { value: \"zone\", label: \"Zone Wise\" },\n          { value: \"district\", label: \"District Wise\" },\n          { value: \"townpanchayat\", label: \"Town Panchayat Wise\" },\n          { value: \"scheme\", label: \"Scheme Wise\" },\n          { value: \"component\", label: \"Component Wise\" },\n          { value: \"year\", label: \"Year Wise\" },\n        ]\n      case \"scheme\":\n        return [\n          { value: \"component\", label: \"Component Wise\" },\n          { value: \"year\", label: \"Year Wise\" },\n        ]\n      case \"component\":\n        return [\n          { value: \"scheme\", label: \"Scheme Wise\" },\n          { value: \"year\", label: \"Year Wise\" },\n        ]\n      case \"year\":\n        return [\n          { value: \"scheme\", label: \"Scheme Wise\" },\n          { value: \"component\", label: \"Component Wise\" },\n        ]\n      default:\n        return []\n    }\n  }\n\n  const totalPages = Math.ceil(filteredData.length / itemsPerPage)\n  const startIndex = (currentPage - 1) * itemsPerPage\n  const endIndex = startIndex + itemsPerPage\n  const currentData = filteredData.slice(startIndex, endIndex)\n\n  const goToNextPage = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(currentPage + 1)\n    }\n  }\n\n  const goToPreviousPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1)\n    }\n  }\n\n  return (\n    <ProtectedRoute>\n      <DashboardLayout>\n        <div className=\"space-y-6\">\n          <div className=\"bg-gradient-to-r from-[#013A65] to-[#013A65]/90 rounded-lg py-3 px-6 text-white shadow-lg\">\n            <div className=\"flex justify-between items-center\">\n              <div>\n                <h1 className=\"text-xl font-semibold\">Dashboard Reports</h1>\n                <p className=\"text-white/80 text-sm mt-1\">\n                  Generate comprehensive dashboard reports with advanced hierarchical filtering\n                </p>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <FileBarChart className=\"h-8 w-8 text-[#F3B335]\" />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"flex flex-col h-full bg-white rounded-lg border border-[#EDEEF0] shadow-sm overflow-hidden\">\n            <div className=\"flex-shrink-0 p-4 border-b border-[#EDEEF0] bg-gradient-to-r from-[#F8F8F8] to-[#EDEEF0]\">\n              <div className=\"flex items-center justify-between gap-4 mb-4\">\n                <div className=\"flex items-center gap-2\">\n                  <Filter className=\"h-5 w-5 text-[#013A65]\" />\n                  <h3 className=\"text-base font-semibold text-[#013A65]\">Report Filters</h3>\n                </div>\n                {filteredData.length > 0 && (\n                  <Button\n                    onClick={handleExcelDownload}\n                    size=\"sm\"\n                    className=\"bg-gradient-to-r from-[#F3B335] to-[#F3B335]/90 hover:from-[#F3B335]/90 hover:to-[#F3B335]/80 text-[#013A65] border-0 shadow-lg hover:shadow-xl transition-all duration-300 h-9 px-4 text-sm font-medium\"\n                  >\n                    <Download className=\"h-4 w-4 mr-1.5\" />\n                    Download Excel\n                  </Button>\n                )}\n              </div>\n\n              <div className=\"mb-4\">\n                <label className=\"text-sm font-semibold text-[#013A65] mb-2 block\">Report Type</label>\n                <Tabs\n                  value={reportType}\n                  onValueChange={(value: string) => {\n                    setReportType(value as \"overall\" | \"scheme\" | \"component\" | \"year\")\n                    if (value === \"overall\") {\n                      setSelectedViewOptions([\"zone\"])\n                    } else {\n                      setSelectedViewOptions([\"both\"])\n                    }\n                  }}\n                  className=\"w-full\"\n                >\n                  <TabsList className=\"grid w-full grid-cols-4 h-11 bg-white border border-[#EDEEF0]\">\n                    <TabsTrigger\n                      value=\"overall\"\n                      className=\"data-[state=active]:bg-gradient-to-r data-[state=active]:from-[#013A65] data-[state=active]:to-[#013A65]/90 data-[state=active]:text-white\"\n                    >\n                      Overall Wise\n                    </TabsTrigger>\n                    <TabsTrigger\n                      value=\"scheme\"\n                      className=\"data-[state=active]:bg-gradient-to-r data-[state=active]:from-[#013A65] data-[state=active]:to-[#013A65]/90 data-[state=active]:text-white\"\n                    >\n                      Scheme Wise\n                    </TabsTrigger>\n                    <TabsTrigger\n                      value=\"component\"\n                      className=\"data-[state=active]:bg-gradient-to-r data-[state=active]:from-[#013A65] data-[state=active]:to-[#013A65]/90 data-[state=active]:text-white\"\n                    >\n                      Component Wise\n                    </TabsTrigger>\n                    <TabsTrigger\n                      value=\"year\"\n                      className=\"data-[state=active]:bg-gradient-to-r data-[state=active]:from-[#013A65] data-[state=active]:to-[#013A65]/90 data-[state=active]:text-white\"\n                    >\n                      Year Wise\n                    </TabsTrigger>\n                  </TabsList>\n                </Tabs>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 mb-4\">\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium text-[#013A65]\">Zone</label>\n                  <Select value={selectedZone} onValueChange={setSelectedZone}>\n                    <SelectTrigger className=\"h-11 w-full bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\">\n                      <SelectValue placeholder=\"All zones\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"all\">All zones</SelectItem>\n                      {zones.map((zone) => (\n                        <SelectItem key={zone} value={zone}>\n                          {zone}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium text-[#013A65]\">District</label>\n                  <Select\n                    value={selectedDistrict}\n                    onValueChange={setSelectedDistrict}\n                    disabled={selectedZone === \"all\"}\n                  >\n                    <SelectTrigger className=\"h-11 w-full bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\">\n                      <SelectValue placeholder=\"All districts\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"all\">All districts</SelectItem>\n                      {districts.map((district) => (\n                        <SelectItem key={district} value={district}>\n                          {district}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium text-[#013A65]\">Town Panchayat</label>\n                  <Select\n                    value={selectedTownPanchayat}\n                    onValueChange={setSelectedTownPanchayat}\n                    disabled={selectedDistrict === \"all\"}\n                  >\n                    <SelectTrigger className=\"h-11 w-full bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\">\n                      <SelectValue placeholder=\"All town panchayats\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"all\">All town panchayats</SelectItem>\n                      {townPanchayats.map((tp) => (\n                        <SelectItem key={tp} value={tp}>\n                          {tp}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium text-[#013A65]\">Scheme</label>\n                  <Select value={selectedScheme} onValueChange={setSelectedScheme}>\n                    <SelectTrigger className=\"h-11 w-full bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\">\n                      <SelectValue placeholder=\"All schemes\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"all\">All schemes</SelectItem>\n                      {schemes.map((scheme) => (\n                        <SelectItem key={scheme} value={scheme}>\n                          {scheme}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium text-[#013A65]\">Component</label>\n                  <Select value={selectedComponent} onValueChange={setSelectedComponent}>\n                    <SelectTrigger className=\"h-11 w-full bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\">\n                      <SelectValue placeholder=\"All components\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"all\">All components</SelectItem>\n                      {components.map((component) => (\n                        <SelectItem key={component} value={component}>\n                          {component}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium text-[#013A65]\">Financial Year</label>\n                  <Select value={selectedYear} onValueChange={setSelectedYear}>\n                    <SelectTrigger className=\"h-11 w-full bg-white border-[#EDEEF0] focus:border-[#013A65] focus:ring-[#013A65]/20\">\n                      <SelectValue placeholder=\"All years\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"all\">All years</SelectItem>\n                      {years.map((year) => (\n                        <SelectItem key={year} value={year}>\n                          {year}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"space-y-2 md:col-span-2\">\n                  <label className=\"text-sm font-medium text-[#013A65]\">Scheme Type</label>\n                  <div className=\"flex gap-6 h-11 items-center px-3 bg-white rounded-md border border-[#EDEEF0]\">\n                    <div className=\"flex items-center space-x-2\">\n                      <Checkbox\n                        id=\"announcement\"\n                        checked={schemeTypeAnnouncement}\n                        onCheckedChange={(checked) => setSchemeTypeAnnouncement(checked as boolean)}\n                      />\n                      <label\n                        htmlFor=\"announcement\"\n                        className=\"text-sm font-medium text-[#013A65] cursor-pointer select-none\"\n                      >\n                        Announcement\n                      </label>\n                    </div>\n                    <div className=\"flex items-center space-x-2\">\n                      <Checkbox\n                        id=\"flagship\"\n                        checked={schemeTypeFlagship}\n                        onCheckedChange={(checked) => setSchemeTypeFlagship(checked as boolean)}\n                      />\n                      <label\n                        htmlFor=\"flagship\"\n                        className=\"text-sm font-medium text-[#013A65] cursor-pointer select-none\"\n                      >\n                        Flagship\n                      </label>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <label className=\"text-sm font-semibold text-[#013A65]\">View Options</label>\n                <div className=\"flex flex-wrap gap-2 p-3 bg-white rounded-lg border border-[#EDEEF0]\">\n                  {getViewOptions().map((option) => (\n                    <button\n                      key={option.value}\n                      onClick={() => toggleViewOption(option.value)}\n                      className={`px-4 py-2 rounded-md text-sm font-medium transition-all duration-200 ${\n                        selectedViewOptions.includes(option.value)\n                          ? \"bg-gradient-to-r from-[#013A65] to-[#013A65]/90 text-white shadow-md\"\n                          : \"bg-white border border-[#EDEEF0] text-[#013A65] hover:bg-[#F8F8F8]\"\n                      }`}\n                    >\n                      {option.label}\n                    </button>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex-1 overflow-auto\">\n              {isLoading ? (\n                <div className=\"flex items-center justify-center h-64\">\n                  <div className=\"flex items-center gap-2 text-[#013A65]/70\">\n                    <Loader2 className=\"h-5 w-5 animate-spin\" />\n                    <span>Loading report data...</span>\n                  </div>\n                </div>\n              ) : filteredData.length === 0 ? (\n                <div className=\"flex flex-col items-center justify-center h-64 text-center\">\n                  <div className=\"w-16 h-16 bg-gradient-to-r from-[#013A65]/10 to-[#F3B335]/10 rounded-full flex items-center justify-center mb-4\">\n                    <FileBarChart className=\"h-8 w-8 text-[#013A65]/60\" />\n                  </div>\n                  <h3 className=\"text-lg font-medium text-[#013A65] mb-2\">No report data found</h3>\n                  <p className=\"text-[#013A65]/70 mb-4\">\n                    No data matches your current filter criteria. Try adjusting the filters.\n                  </p>\n                </div>\n              ) : (\n                <>\n                  <Table>\n                    <TableHeader>\n                      <TableRow className=\"bg-[#F3B335] hover:bg-[#F3B335]\">\n                        <TableHead className=\"text-[#013A65] font-semibold\">Scheme Name</TableHead>\n                        <TableHead className=\"text-[#013A65] font-semibold\">Component</TableHead>\n                        <TableHead className=\"text-[#013A65] font-semibold\">Stage</TableHead>\n                        <TableHead className=\"text-[#013A65] font-semibold\">Zone</TableHead>\n                        <TableHead className=\"text-[#013A65] font-semibold\">District</TableHead>\n                        <TableHead className=\"text-[#013A65] font-semibold\">Town Panchayat</TableHead>\n                        <TableHead className=\"text-[#013A65] font-semibold\">Financial Year</TableHead>\n                        <TableHead className=\"text-[#013A65] font-semibold\">Status</TableHead>\n                        <TableHead className=\"text-[#013A65] font-semibold text-right\">Amount</TableHead>\n                        <TableHead className=\"text-[#013A65] font-semibold text-right\">Beneficiaries</TableHead>\n                        <TableHead className=\"text-[#013A65] font-semibold\">Completion Date</TableHead>\n                        <TableHead className=\"text-[#013A65] font-semibold\">Scheme Type</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {currentData.map((item) => (\n                        <TableRow key={item.id} className=\"hover:bg-[#F8F8F8]/50\">\n                          <TableCell className=\"font-medium text-[#013A65] max-w-xs truncate\" title={item.schemeName}>\n                            {item.schemeName}\n                          </TableCell>\n                          <TableCell className=\"text-[#013A65]/80 max-w-xs truncate\" title={item.componentName}>\n                            {item.componentName}\n                          </TableCell>\n                          <TableCell className=\"text-[#013A65]/80\">{item.stage}</TableCell>\n                          <TableCell className=\"text-[#013A65]/80\">{item.zone}</TableCell>\n                          <TableCell className=\"text-[#013A65]/80\">{item.district}</TableCell>\n                          <TableCell className=\"text-[#013A65]/80\">{item.townPanchayat}</TableCell>\n                          <TableCell className=\"text-[#013A65]/80\">{item.financialYear}</TableCell>\n                          <TableCell>\n                            <Badge\n                              variant={getStatusBadgeVariant(item.status)}\n                              className=\"bg-gradient-to-r from-[#F3B335]/20 to-[#F3B335]/30 text-[#013A65] border-[#F3B335]/40\"\n                            >\n                              {item.status}\n                            </Badge>\n                          </TableCell>\n                          <TableCell className=\"text-right font-mono text-[#013A65]\">\n                            {formatCurrency(item.amount)}\n                          </TableCell>\n                          <TableCell className=\"text-right text-[#013A65]\">\n                            {item.beneficiaries.toLocaleString()}\n                          </TableCell>\n                          <TableCell className=\"text-[#013A65]/70\">\n                            {new Date(item.completionDate).toLocaleDateString()}\n                          </TableCell>\n                          <TableCell>\n                            <Badge\n                              className={\n                                item.schemeType === \"Flagship\"\n                                  ? \"bg-gradient-to-r from-[#013A65]/20 to-[#013A65]/30 text-[#013A65] border-[#013A65]/40\"\n                                  : \"bg-gradient-to-r from-[#F3B335]/20 to-[#F3B335]/30 text-[#013A65] border-[#F3B335]/40\"\n                              }\n                            >\n                              {item.schemeType}\n                            </Badge>\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n\n                  {totalPages > 1 && (\n                    <div className=\"flex items-center justify-between px-4 py-3 border-t border-[#EDEEF0] bg-[#F8F8F8]\">\n                      <div className=\"text-sm text-[#013A65]/70\">\n                        Showing {startIndex + 1} to {Math.min(endIndex, filteredData.length)} of {filteredData.length}{\" \"}\n                        results\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={goToPreviousPage}\n                          disabled={currentPage === 1}\n                          className=\"h-8 px-3 bg-white border-[#EDEEF0] hover:bg-[#F3B335]/10 disabled:opacity-50\"\n                        >\n                          <ChevronLeft className=\"h-4 w-4 mr-1\" />\n                          Previous\n                        </Button>\n                        <div className=\"text-sm text-[#013A65] font-medium px-3\">\n                          Page {currentPage} of {totalPages}\n                        </div>\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={goToNextPage}\n                          disabled={currentPage === totalPages}\n                          className=\"h-8 px-3 bg-white border-[#EDEEF0] hover:bg-[#F3B335]/10 disabled:opacity-50\"\n                        >\n                          Next\n                          <ChevronRight className=\"h-4 w-4 ml-1\" />\n                        </Button>\n                      </div>\n                    </div>\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      </DashboardLayout>\n    </ProtectedRoute>\n  )\n}\n"],"names":[],"mappings":"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"}