{"version":3,"sources":["turbopack:///[project]/projects/TITTAM/tittam_fe/components/dashboard/sub-component-management.tsx","turbopack:///[project]/projects/TITTAM/tittam_fe/services/sub-component-service.ts","turbopack:///[project]/projects/TITTAM/tittam_fe/components/dashboard/create-sub-component-dialog.tsx","turbopack:///[project]/projects/TITTAM/tittam_fe/components/dashboard/edit-sub-component-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Pencil, Trash2, User, Calendar, Plus, Database } from \"lucide-react\"\nimport { subComponentService, type SubComponent } from \"@/services/sub-component-service\"\nimport { componentService, type Component } from \"@/services/component-service\"\nimport { CreateSubComponentDialog } from \"./create-sub-component-dialog\"\nimport { EditSubComponentDialog } from \"./edit-sub-component-dialog\"\n\nexport function SubComponentManagement() {\n  const [subComponents, setSubComponents] = useState<SubComponent[]>([])\n  const [components, setComponents] = useState<Component[]>([])\n  const [selectedComponentId, setSelectedComponentId] = useState<string>(\"\")\n  const [loading, setLoading] = useState(true)\n  const [subComponentsLoading, setSubComponentsLoading] = useState(false)\n  const [createDialogOpen, setCreateDialogOpen] = useState(false)\n  const [editDialogOpen, setEditDialogOpen] = useState(false)\n  const [editingSubComponent, setEditingSubComponent] = useState<SubComponent | null>(null)\n\n  useEffect(() => {\n    loadComponents()\n  }, [])\n\n  useEffect(() => {\n    if (selectedComponentId) {\n      loadSubComponents()\n    } else {\n      setSubComponents([])\n    }\n  }, [selectedComponentId])\n\n  const loadComponents = async () => {\n    try {\n      const data = await componentService.getAllComponents()\n      setComponents(data)\n    } catch (error) {\n      console.error(\"Failed to load components:\", error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const loadSubComponents = async () => {\n    if (!selectedComponentId) return\n\n    try {\n      setSubComponentsLoading(true)\n      const data = await subComponentService.getSubComponentsByComponent(selectedComponentId)\n      setSubComponents(data)\n    } catch (error) {\n      console.error(\"Failed to load sub components:\", error)\n    } finally {\n      setSubComponentsLoading(false)\n    }\n  }\n\n  const handleCreateSubComponent = async (subComponentData: any) => {\n    try {\n      const selectedComponent = components.find((c) => c.id === selectedComponentId)\n      await subComponentService.createSubComponent({\n        ...subComponentData,\n        componentId: selectedComponentId,\n        componentName: selectedComponent?.englishName || \"\",\n      })\n      loadSubComponents()\n      setCreateDialogOpen(false)\n    } catch (error) {\n      console.error(\"Failed to create sub component:\", error)\n    }\n  }\n\n  const handleEditSubComponent = async (subComponentData: any) => {\n    if (!editingSubComponent) return\n\n    try {\n      await subComponentService.updateSubComponent(editingSubComponent.id, subComponentData)\n      loadSubComponents()\n      setEditDialogOpen(false)\n      setEditingSubComponent(null)\n    } catch (error) {\n      console.error(\"Failed to update sub component:\", error)\n    }\n  }\n\n  const handleDeleteSubComponent = async (id: string) => {\n    if (confirm(\"Are you sure you want to delete this sub component?\")) {\n      try {\n        await subComponentService.deleteSubComponent(id)\n        loadSubComponents()\n      } catch (error) {\n        console.error(\"Failed to delete sub component:\", error)\n      }\n    }\n  }\n\n  const openEditDialog = (subComponent: SubComponent) => {\n    setEditingSubComponent(subComponent)\n    setEditDialogOpen(true)\n  }\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      <div className=\"flex-shrink-0 bg-gradient-to-r from-[#013A65] to-[#013A65]/90 rounded-lg py-3 px-6 text-white shadow-lg mb-6\">\n        <div>\n          <h1 className=\"text-xl font-semibold\">Sub Component Management</h1>\n          <p className=\"text-white/80 text-sm mt-1\">Manage sub components for your selected component</p>\n        </div>\n      </div>\n\n      <div className=\"flex-shrink-0 mb-6\">\n        <div className=\"flex items-end justify-between\">\n          <div className=\"flex items-end gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-[#013A65] mb-2\">Select Component</label>\n              <Select value={selectedComponentId} onValueChange={setSelectedComponentId}>\n                <SelectTrigger className=\"h-9 w-72\">\n                  <SelectValue placeholder=\"Choose a component\" />\n                </SelectTrigger>\n                <SelectContent className=\"border border-[#EDEEF0]\">\n                  {components.map((component) => (\n                    <SelectItem key={component.id} value={component.id} className=\"hover:bg-[#F8F8F8]\">\n                      {component.englishName} / {component.tamilName}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n\n          {selectedComponentId && (\n            <div>\n              <Button\n                onClick={() => setCreateDialogOpen(true)}\n                size=\"sm\"\n                className=\"bg-gradient-to-r from-[#F3B335] to-[#F3B335]/90 hover:from-[#F3B335]/90 hover:to-[#F3B335]/80 text-[#013A65] border-0 shadow-lg hover:shadow-xl transition-all duration-300 h-9 px-4 text-sm font-medium\"\n              >\n                <Plus className=\"h-4 w-4 mr-2\" />\n                Create Sub Component\n              </Button>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"flex-1 min-h-0 overflow-auto\">\n        {selectedComponentId ? (\n          <div>\n            {subComponentsLoading ? (\n              <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n                {Array.from({ length: 6 }).map((_, i) => (\n                  <Card key={i} className=\"animate-pulse border-0 shadow-lg bg-[#F8F8F8]\">\n                    <CardContent className=\"p-4\">\n                      <div className=\"h-4 bg-[#EDEEF0] rounded w-3/4 mb-2\"></div>\n                      <div className=\"h-3 bg-[#EDEEF0] rounded w-1/2\"></div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            ) : subComponents.length > 0 ? (\n              <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n                {subComponents.map((subComponent) => (\n                  <Card\n                    key={subComponent.id}\n                    className=\"group border-0 shadow-lg bg-[#F8F8F8] transition-shadow duration-200 hover:shadow-xl\"\n                  >\n                    <CardContent className=\"p-4\">\n                      <div className=\"flex items-start justify-between mb-3\">\n                        <div className=\"flex-1 min-w-0 pr-2\">\n                          <h3 className=\"text-lg font-semibold text-[#013A65] truncate\">{subComponent.englishName}</h3>\n                          <p className=\"font-medium text-[#013A65]/70 text-sm truncate\">{subComponent.tamilName}</p>\n                        </div>\n                        <div className=\"flex items-center gap-1 flex-shrink-0\">\n                          <Button\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            onClick={() => openEditDialog(subComponent)}\n                            className=\"text-[#013A65] hover:text-[#013A65]/80 hover:bg-[#F3B335]/20 h-7 w-7 p-0\"\n                          >\n                            <Pencil className=\"h-3 w-3\" />\n                          </Button>\n                          <Button\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            onClick={() => handleDeleteSubComponent(subComponent.id)}\n                            className=\"text-red-500 hover:text-red-700 hover:bg-red-50 h-7 w-7 p-0\"\n                          >\n                            <Trash2 className=\"h-3 w-3\" />\n                          </Button>\n                        </div>\n                      </div>\n\n                      <div className=\"flex items-center justify-between pt-3 border-t border-[#EDEEF0]\">\n                        <div className=\"flex items-center gap-2 text-xs text-[#013A65]/60\">\n                          <Calendar className=\"h-3 w-3 text-[#F3B335]\" />\n                          <span>{subComponent.createdAt}</span>\n                        </div>\n                        <div className=\"flex items-center gap-2 text-xs text-[#013A65]/60\">\n                          <User className=\"h-3 w-3 text-[#013A65]\" />\n                          <span>{subComponent.createdBy}</span>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            ) : (\n              <Card className=\"text-center py-12 border-0 shadow-xl bg-[#F8F8F8]\">\n                <CardContent>\n                  <div className=\"mx-auto w-12 h-12 bg-gradient-to-br from-[#F3B335]/20 to-[#013A65]/20 rounded-xl flex items-center justify-center mb-4\">\n                    <Database className=\"h-6 w-6 text-[#013A65]\" />\n                  </div>\n                  <h3 className=\"text-lg font-semibold mb-2 text-[#013A65]\">No sub components found</h3>\n                  <p className=\"text-sm text-[#013A65]/70 mb-4 max-w-md mx-auto\">\n                    No sub components found for the selected component. Create your first sub component to get started.\n                  </p>\n                </CardContent>\n              </Card>\n            )}\n          </div>\n        ) : (\n          <Card className=\"text-center py-12 border-0 shadow-xl bg-[#F8F8F8]\">\n            <CardContent>\n              <div className=\"mx-auto w-12 h-12 bg-gradient-to-br from-[#F3B335]/20 to-[#013A65]/20 rounded-xl flex items-center justify-center mb-4\">\n                <Database className=\"h-6 w-6 text-[#013A65]\" />\n              </div>\n              <h3 className=\"text-lg font-semibold mb-2 text-[#013A65]\">No sub components found</h3>\n              <p className=\"text-sm text-[#013A65]/70 mb-4 max-w-md mx-auto\">\n                Select component to view and manage sub components.\n              </p>\n            </CardContent>\n          </Card>\n        )}\n      </div>\n\n      {/* Dialogs */}\n      <CreateSubComponentDialog\n        open={createDialogOpen}\n        onOpenChange={setCreateDialogOpen}\n        onSubmit={handleCreateSubComponent}\n      />\n\n      {editingSubComponent && (\n        <EditSubComponentDialog\n          open={editDialogOpen}\n          onOpenChange={setEditDialogOpen}\n          onSubmit={handleEditSubComponent}\n          subComponent={editingSubComponent}\n        />\n      )}\n    </div>\n  )\n}\n","export interface SubComponent {\n  id: string\n  englishName: string\n  tamilName: string\n  componentId: string\n  componentName: string\n  remark: string\n  createdAt: string\n  createdBy: string\n}\n\nclass SubComponentService {\n  private subComponents: SubComponent[] = [\n    // Infrastructure Components (componentId: \"1\")\n    {\n      id: \"1\",\n      englishName: \"Water Supply Network\",\n      tamilName: \"நீர் வழங்கல் வலையமைப்பு\",\n      componentId: \"1\",\n      componentName: \"Water Infrastructure\",\n      remark: \"Primary water distribution system for residential areas\",\n      createdAt: \"2024-01-15\",\n      createdBy: \"Admin User\",\n    },\n    {\n      id: \"2\",\n      englishName: \"Sewage Treatment Plant\",\n      tamilName: \"கழிவுநீர் சுத்திகரிப்பு நிலையம்\",\n      componentId: \"1\",\n      componentName: \"Water Infrastructure\",\n      remark: \"Centralized sewage processing facility\",\n      createdAt: \"2024-01-16\",\n      createdBy: \"Admin User\",\n    },\n    {\n      id: \"3\",\n      englishName: \"Storm Water Drainage\",\n      tamilName: \"மழைநீர் வடிகால்\",\n      componentId: \"1\",\n      componentName: \"Water Infrastructure\",\n      remark: \"Flood prevention and water management\",\n      createdAt: \"2024-01-17\",\n      createdBy: \"Super Admin\",\n    },\n    // Transportation Components (componentId: \"2\")\n    {\n      id: \"4\",\n      englishName: \"Road Construction\",\n      tamilName: \"சாலை கட்டுமானம்\",\n      componentId: \"2\",\n      componentName: \"Transportation\",\n      remark: \"New road development projects\",\n      createdAt: \"2024-01-18\",\n      createdBy: \"Admin User\",\n    },\n    {\n      id: \"5\",\n      englishName: \"Traffic Signal System\",\n      tamilName: \"போக்குவரத்து சமிக்ஞை அமைப்பு\",\n      componentId: \"2\",\n      componentName: \"Transportation\",\n      remark: \"Automated traffic management system\",\n      createdAt: \"2024-01-19\",\n      createdBy: \"Super Admin\",\n    },\n    {\n      id: \"6\",\n      englishName: \"Bus Stop Infrastructure\",\n      tamilName: \"பேருந்து நிறுத்த உள்கட்டமைப்பு\",\n      componentId: \"2\",\n      componentName: \"Transportation\",\n      remark: \"Public transportation facilities\",\n      createdAt: \"2024-01-20\",\n      createdBy: \"Admin User\",\n    },\n    // Education Components (componentId: \"3\")\n    {\n      id: \"7\",\n      englishName: \"School Building Construction\",\n      tamilName: \"பள்ளி கட்டிட கட்டுமானம்\",\n      componentId: \"3\",\n      componentName: \"Education\",\n      remark: \"New educational facility development\",\n      createdAt: \"2024-01-21\",\n      createdBy: \"Super Admin\",\n    },\n    {\n      id: \"8\",\n      englishName: \"Digital Learning Equipment\",\n      tamilName: \"டிஜிட்டல் கற்றல் உபகரணங்கள்\",\n      componentId: \"3\",\n      componentName: \"Education\",\n      remark: \"Modern educational technology setup\",\n      createdAt: \"2024-01-22\",\n      createdBy: \"Admin User\",\n    },\n  ]\n\n  async getAllSubComponents(): Promise<SubComponent[]> {\n    return new Promise((resolve) => {\n      setTimeout(() => resolve([...this.subComponents]), 500)\n    })\n  }\n\n  async getSubComponentsByComponent(componentId: string): Promise<SubComponent[]> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const filtered = this.subComponents.filter((sc) => sc.componentId === componentId)\n        resolve(filtered)\n      }, 500)\n    })\n  }\n\n  async createSubComponent(subComponent: Omit<SubComponent, \"id\" | \"createdAt\" | \"createdBy\">): Promise<SubComponent> {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const newSubComponent: SubComponent = {\n          ...subComponent,\n          id: Date.now().toString(),\n          createdAt: new Date().toISOString().split(\"T\")[0],\n          createdBy: \"Current User\",\n        }\n        this.subComponents.push(newSubComponent)\n        resolve(newSubComponent)\n      }, 500)\n    })\n  }\n\n  async updateSubComponent(id: string, updates: Partial<SubComponent>): Promise<SubComponent> {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const index = this.subComponents.findIndex((sc) => sc.id === id)\n        if (index === -1) {\n          reject(new Error(\"Sub component not found\"))\n          return\n        }\n        this.subComponents[index] = { ...this.subComponents[index], ...updates }\n        resolve(this.subComponents[index])\n      }, 500)\n    })\n  }\n\n  async deleteSubComponent(id: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const index = this.subComponents.findIndex((sc) => sc.id === id)\n        if (index === -1) {\n          reject(new Error(\"Sub component not found\"))\n          return\n        }\n        this.subComponents.splice(index, 1)\n        resolve()\n      }, 500)\n    })\n  }\n}\n\nexport const subComponentService = new SubComponentService()\n","\"use client\"\n\nimport type React from \"react\"\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Loader2 } from \"lucide-react\"\n\ninterface CreateSubComponentDialogProps {\n  open: boolean\n  onOpenChange: (open: boolean) => void\n  onSubmit: (data: any) => void\n}\n\nexport function CreateSubComponentDialog({ open, onOpenChange, onSubmit }: CreateSubComponentDialogProps) {\n  const [isLoading, setIsLoading] = useState(false)\n  const [formData, setFormData] = useState({\n    englishName: \"\",\n    tamilName: \"\",\n    remark: \"\",\n  })\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setIsLoading(true)\n\n    try {\n      await onSubmit(formData)\n      setFormData({ englishName: \"\", tamilName: \"\", remark: \"\" })\n    } catch (error) {\n      console.error(\"Failed to create sub component:\", error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleChange = (field: string, value: string) => {\n    setFormData((prev) => ({ ...prev, [field]: value }))\n  }\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent\n        className=\"sm:max-w-[700px] max-h-[90vh] overflow-y-auto border-0 shadow-2xl bg-white/95 backdrop-blur-sm\"\n        onPointerDownOutside={(e) => e.preventDefault()}\n        onEscapeKeyDown={(e) => e.preventDefault()}\n      >\n        <div className=\"absolute inset-0 bg-gradient-to-br from-green-50/30 to-teal-50/30 rounded-lg\"></div>\n        <div className=\"relative\">\n          <DialogHeader className=\"pb-6\">\n            <DialogTitle className=\"text-2xl font-bold bg-gradient-to-r from-green-600 to-teal-600 bg-clip-text text-transparent\">\n              Create New Sub Component\n            </DialogTitle>\n            <DialogDescription className=\"text-slate-600\">\n              Add a new sub component with English and Tamil details\n            </DialogDescription>\n          </DialogHeader>\n\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            <div className=\"grid gap-6 md:grid-cols-2\">\n              {/* English Fields */}\n              <div className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"englishName\" className=\"text-sm font-semibold text-slate-700\">\n                    Sub Component Name in English *\n                  </Label>\n                  <Input\n                    id=\"englishName\"\n                    value={formData.englishName}\n                    onChange={(e) => handleChange(\"englishName\", e.target.value)}\n                    placeholder=\"Enter english sub component name\"\n                    className=\"h-12 border-slate-300 focus:border-green-500 focus:ring-green-500/20\"\n                    required\n                  />\n                </div>\n              </div>\n\n              {/* Tamil Fields */}\n              <div className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"tamilName\" className=\"text-sm font-semibold text-slate-700\">\n                    Sub Component Name in Tamil *\n                  </Label>\n                  <Input\n                    id=\"tamilName\"\n                    value={formData.tamilName}\n                    onChange={(e) => handleChange(\"tamilName\", e.target.value)}\n                    placeholder=\"Enter tamil sub component name\"\n                    className=\"h-12 border-slate-300 focus:border-teal-500 focus:ring-teal-500/20\"\n                    required\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"remark\" className=\"text-sm font-semibold text-slate-700\">\n                Remark *\n              </Label>\n              <Textarea\n                id=\"remark\"\n                value={formData.remark}\n                onChange={(e) => handleChange(\"remark\", e.target.value)}\n                rows={3}\n                placeholder=\"Enter remark\"\n                className=\"border-slate-300 focus:border-green-500 focus:ring-green-500/20 resize-none\"\n                required\n              />\n            </div>\n\n            <DialogFooter className=\"pt-6 border-t border-slate-200\">\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={() => onOpenChange(false)}\n                disabled={isLoading}\n                className=\"border-slate-300 hover:bg-slate-50\"\n              >\n                Cancel\n              </Button>\n              <Button\n                type=\"submit\"\n                disabled={isLoading}\n                className=\"bg-gradient-to-r from-green-600 to-teal-600 hover:from-green-700 hover:to-teal-700 text-white border-0 shadow-lg\"\n              >\n                {isLoading ? (\n                  <>\n                    <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                    Creating...\n                  </>\n                ) : (\n                  \"Create Sub Component\"\n                )}\n              </Button>\n            </DialogFooter>\n          </form>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","\"use client\"\n\nimport type React from \"react\"\n\nimport { useState, useEffect } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogFooter,\n} from \"@/components/ui/dialog\"\nimport { Loader2 } from \"lucide-react\"\nimport type { SubComponent } from \"@/services/sub-component-service\"\n\ninterface EditSubComponentDialogProps {\n  open: boolean\n  onOpenChange: (open: boolean) => void\n  onSubmit: (data: any) => void\n  subComponent: SubComponent\n}\n\nexport function EditSubComponentDialog({ open, onOpenChange, onSubmit, subComponent }: EditSubComponentDialogProps) {\n  const [formData, setFormData] = useState({\n    englishName: \"\",\n    tamilName: \"\",\n    remark: \"\",\n  })\n  const [isLoading, setIsLoading] = useState(false)\n\n  useEffect(() => {\n    if (subComponent) {\n      setFormData({\n        englishName: subComponent.englishName,\n        tamilName: subComponent.tamilName,\n        remark: subComponent.remark,\n      })\n    }\n  }, [subComponent])\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setIsLoading(true)\n    try {\n      await onSubmit(formData)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleChange = (field: string, value: string) => {\n    setFormData((prev) => ({ ...prev, [field]: value }))\n  }\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent\n        className=\"sm:max-w-[700px] max-h-[90vh] overflow-y-auto border-0 shadow-2xl bg-white/95 backdrop-blur-sm\"\n        onPointerDownOutside={(e) => e.preventDefault()}\n        onEscapeKeyDown={(e) => e.preventDefault()}\n      >\n        <div className=\"absolute inset-0 bg-gradient-to-br from-green-50/30 to-teal-50/30 rounded-lg\"></div>\n        <div className=\"relative\">\n          <DialogHeader className=\"pb-6\">\n            <DialogTitle className=\"text-2xl font-bold bg-gradient-to-r from-green-600 to-teal-600 bg-clip-text text-transparent\">\n              Update Sub Component\n            </DialogTitle>\n            <DialogDescription className=\"text-slate-600\">\n              Update the sub component details with English and Tamil information\n            </DialogDescription>\n          </DialogHeader>\n\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            <div className=\"grid gap-6 md:grid-cols-2\">\n              {/* English Fields */}\n              <div className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"englishName\" className=\"text-sm font-semibold text-slate-700\">\n                    Sub Component Name in English *\n                  </Label>\n                  <Input\n                    id=\"englishName\"\n                    value={formData.englishName}\n                    onChange={(e) => handleChange(\"englishName\", e.target.value)}\n                    placeholder=\"Enter English sub component name\"\n                    className=\"h-12 border-slate-300 focus:border-green-500 focus:ring-green-500/20\"\n                    required\n                  />\n                </div>\n              </div>\n\n              {/* Tamil Fields */}\n              <div className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"tamilName\" className=\"text-sm font-semibold text-slate-700\">\n                    Sub Component Name in Tamil *\n                  </Label>\n                  <Input\n                    id=\"tamilName\"\n                    value={formData.tamilName}\n                    onChange={(e) => handleChange(\"tamilName\", e.target.value)}\n                    placeholder=\"Enter Tamil sub component name\"\n                    className=\"h-12 border-slate-300 focus:border-teal-500 focus:ring-teal-500/20\"\n                    required\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"remark\" className=\"text-sm font-semibold text-slate-700\">\n                Remark\n              </Label>\n              <Textarea\n                id=\"remark\"\n                value={formData.remark}\n                onChange={(e) => handleChange(\"remark\", e.target.value)}\n                placeholder=\"Enter remark\"\n                rows={3}\n                className=\"border-slate-300 focus:border-green-500 focus:ring-green-500/20 resize-none\"\n              />\n            </div>\n\n            <DialogFooter className=\"pt-6 border-t border-slate-200\">\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={() => onOpenChange(false)}\n                disabled={isLoading}\n                className=\"border-slate-300 hover:bg-slate-50\"\n              >\n                Cancel\n              </Button>\n              <Button\n                type=\"submit\"\n                disabled={isLoading}\n                className=\"bg-gradient-to-r from-green-600 to-teal-600 hover:from-green-700 hover:to-teal-700 text-white border-0 shadow-lg\"\n              >\n                {isLoading ? (\n                  <>\n                    <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                    Updating...\n                  </>\n                ) : (\n                  \"Update Sub Component\"\n                )}\n              </Button>\n            </DialogFooter>\n          </form>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n"],"names":[],"mappings":"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"}