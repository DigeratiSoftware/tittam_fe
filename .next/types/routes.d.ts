// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/dashboard" | "/dashboard/components" | "/dashboard/contractors" | "/dashboard/drive" | "/dashboard/drive/manage" | "/dashboard/fields" | "/dashboard/info-hub" | "/dashboard/masters" | "/dashboard/meetings" | "/dashboard/notifications" | "/dashboard/reports" | "/dashboard/reports/dashboard" | "/dashboard/reports/meeting" | "/dashboard/reports/scheme" | "/dashboard/schemes" | "/dashboard/smart-sheets" | "/dashboard/smart-sheets/create" | "/dashboard/smart-sheets/shared" | "/dashboard/smart-sheets/view" | "/dashboard/smart-view" | "/dashboard/sub-components" | "/dashboard/support" | "/dashboard/templates" | "/dashboard/users" | "/dashboard/work" | "/dashboard/work/create"
type AppRouteHandlerRoutes = "/api/notifications" | "/api/notifications/[id]" | "/api/notifications/[id]/read" | "/api/notifications/all" | "/api/notifications/read-all" | "/api/notifications/unread-count" | "/api/reports/dashboard" | "/api/reports/meeting" | "/api/reports/scheme"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/api/notifications": {}
  "/api/notifications/[id]": { "id": string; }
  "/api/notifications/[id]/read": { "id": string; }
  "/api/notifications/all": {}
  "/api/notifications/read-all": {}
  "/api/notifications/unread-count": {}
  "/api/reports/dashboard": {}
  "/api/reports/meeting": {}
  "/api/reports/scheme": {}
  "/dashboard": {}
  "/dashboard/components": {}
  "/dashboard/contractors": {}
  "/dashboard/drive": {}
  "/dashboard/drive/manage": {}
  "/dashboard/fields": {}
  "/dashboard/info-hub": {}
  "/dashboard/masters": {}
  "/dashboard/meetings": {}
  "/dashboard/notifications": {}
  "/dashboard/reports": {}
  "/dashboard/reports/dashboard": {}
  "/dashboard/reports/meeting": {}
  "/dashboard/reports/scheme": {}
  "/dashboard/schemes": {}
  "/dashboard/smart-sheets": {}
  "/dashboard/smart-sheets/create": {}
  "/dashboard/smart-sheets/shared": {}
  "/dashboard/smart-sheets/view": {}
  "/dashboard/smart-view": {}
  "/dashboard/sub-components": {}
  "/dashboard/support": {}
  "/dashboard/templates": {}
  "/dashboard/users": {}
  "/dashboard/work": {}
  "/dashboard/work/create": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
